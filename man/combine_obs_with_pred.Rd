% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_predictions.R
\name{combine_obs_with_pred}
\alias{combine_obs_with_pred}
\title{Combine observed data with a single prediction draw}
\usage{
combine_obs_with_pred(
  predicted_counts,
  reporting_triangle,
  ref_time_aggregator = zoo::rollsum,
  ref_time_aggregator_args = list(k = 1, align = "right"),
  delay_aggregator = rowSums,
  delay_aggregator_args = list(na.rm = TRUE)
)
}
\arguments{
\item{predicted_counts}{Vector of predicted counts at each reference time.
Note that if using an aggregator function, this is assumed to have
already been aggregated.}

\item{reporting_triangle}{Matrix of the reporting triangle, with rows
representing the time points of reference and columns representing the
delays. Can be a reporting matrix or incomplete reporting matrix.
Can also be a ragged reporting triangle, where multiple columns are
reported for the same row. (e.g. weekly reporting of daily data).}

\item{ref_time_aggregator}{Function that operates along the rows (reference
times) of the retrospective point nowcast matrix before it has been
aggregated across columns (delays). Default is \code{zoo::rollsum}.}

\item{ref_time_aggregator_args}{List of arguments needed for the specified
\code{ref_time_aggregator}. Default is \code{list(k=1, align = "right")}.}

\item{delay_aggregator}{Function that operates along the columns (delays)
of the retrospective point nowcast matrix after it has been aggregated
across reference times. Default is \code{rowSums}.}

\item{delay_aggregator_args}{List of arguments needed for the specified
\code{delay_aggregator}. Default is \code{list(na.rm = TRUE)}.}
}
\value{
A vector of predicted counts at each reference time
}
\description{
Internally it sums observed counts from the reporting triangle by reference
time and adds them to the predicted counts to form a single draw of the
nowcast for the final counts by reference time.
}
\examples{
pred_counts <- c(10, 20, 30, 40)
reporting_matrix <- matrix(
  c(
    7, 9, 4, 3,
    1, 2, 3, 4,
    5, 6, 7, 8,
    9, 10, 11, 12
  ),
  nrow = 4,
  byrow = TRUE
)
reporting_triangle <- construct_triangle(reporting_matrix)
combine_obs_with_pred(pred_counts, reporting_triangle)
# Another example with rolling sum
combine_obs_with_pred(pred_counts,
  reporting_triangle,
  ref_time_aggregator = zoo::rollsum,
  ref_time_aggregator_args = list(k = 2, align = "right")
)
}
