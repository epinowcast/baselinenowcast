% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_and_apply_uncertainty.R
\name{estimate_and_apply_uncertainty}
\alias{estimate_and_apply_uncertainty}
\title{Estimate and apply uncertainty to a point nowcast matrix}
\usage{
estimate_and_apply_uncertainty(
  point_nowcast_matrix,
  reporting_triangle,
  max_delay = ncol(reporting_triangle) - 1,
  n_history_delay = NULL,
  n_retrospective_nowcasts = NULL,
  draws = 100,
  uncertainty_model = fit_by_horizon,
  uncertainty_sampler = sample_nb,
  ref_time_aggregator = identity,
  delay_aggregator = function(x) rowSums(x, na.rm = TRUE),
  ...
)
}
\arguments{
\item{point_nowcast_matrix}{Matrix of point nowcast predictions and
observations, with rows representing the reference times and columns
representing the delays.}

\item{reporting_triangle}{Matrix of the reporting triangle, with rows
representing the time points of reference and columns representing the
delays. Can be a reporting matrix or incomplete reporting matrix.
Can also be a ragged reporting triangle, where multiple columns are
reported for the same row. (e.g. weekly reporting of daily data).}

\item{max_delay}{Integer indicating the maximum delay to estimate, in units
of the delay. The default is to use the whole reporting triangle,
\code{ncol(reporting_triangle) -1}.}

\item{n_history_delay}{Integer indicating the number of reference times
(observations) to be used in the estimate of the reporting delay, always
starting from the most recent reporting delay. Default is NULL, which will
be set internally to 1.5* max_delay.}

\item{n_retrospective_nowcasts}{Integer indicating the number of
retrospective nowcast times to use for uncertainty estimation. Default is
NULL, which will be set internally to 1.5* max_delay.}

\item{draws}{Integer indicating the number of draws of the predicted
nowcast vector to generate. Default is \code{1000}.}

\item{uncertainty_model}{Function that ingests a matrix of observations and a
matrix of predictions and returns a vector that can be used to
apply uncertainty using the same error model. Default is
\code{fit_by_horizon} with arguments of \code{obs} matrix of observations and
\code{pred} the matrix of predictions that fits each column (horizon)
to a negative binomial observation model by default. The user can
specify a different fitting model by replacing the
\code{fit_model} argument in \code{fit_by_horizon}.}

\item{uncertainty_sampler}{Function that ingests a vector or matrix of
predictions and a vector of uncertainty parameters and generates draws
from the observation model. Default is \code{sample_nb} which expects
arguments \code{pred} for the vector of predictions and uncertainty parameters
for the corresponding vector of uncertainty parameters, and draws from a
negative binomial for each element of the vector.}

\item{ref_time_aggregator}{Function that operates along the rows (reference
times) of the retrospective point nowcast matrix before it has been
aggregated across columns (delays). Default is \code{identity}
which does not aggregate across reference times.}

\item{delay_aggregator}{Function that operates along the columns (delays)
of the retrospective point nowcast matrix after it has been aggregated
across reference times. Default is \code{function(x) rowSums(x, na.rm = TRUE)}.}

\item{...}{Additional arguments}
}
\value{
\code{nowcast_draws_df} Dataframe containing draws of combined
observations and probabilistic predictions at each reference time.
}
\description{
Estimate and apply uncertainty to a point nowcast matrix
}
\examples{
triangle <- matrix(
  c(
    40, 10, 20, 5,
    80, 50, 25, 10,
    100, 50, 30, 20,
    90, 45, 25, NA,
    80, 40, NA, NA,
    70, NA, NA, NA
  ),
  nrow = 6,
  byrow = TRUE
)
pt_nowcast_matrix <- estimate_and_apply_delay(
  reporting_triangle = triangle,
  n_history_delay = 4
)
# Need to tell uncertainty estimator to also use 4 reference times for
# delay estimation, the remaining 2 will then be used for
# uncertainty estimation.
nowcast_draws_df <- estimate_and_apply_uncertainty(
  pt_nowcast_matrix,
  triangle,
  n_history_delay = 4
)
nowcast_draws_df
}
