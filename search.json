[{"path":"https://baselinenowcast.epinowcast.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 baselinenowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with baselinenowcast","text":"Incomplete reporting epidemiological data recent times can result case count data right-truncated. Right-truncated case counts can misleading interpret face-value, typically show decline number reported observations recent time points. time points highest proportion data yet observed dataset. imputation cases eventually observed current time referred nowcast. number methods developed nowcast epidemiological case count data. purpose baselinenowcast provide nowcast computed directly recent observations estimate delay distribution empirically, apply partially observed data generate nowcast. section, describe example nowcasting problem, demonstrate use baselinenowcast estimate delay distribution data apply estimate generate probabilistic nowcast. example walk low-level functionality “default” model permutation. future vignettes, demonstrate examples create complex model permutations.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Getting Started with baselinenowcast","text":"well baselinenowcast package vignette also uses epinowcast, ggplot2, tidyr, dplyr. installation epinowcast required using package, however, pre post-processing functions provide lot data wrangling needed set nowcasting problem. note components vignette require installing CmdStan, downstream dependency epinowcast. just using R components epinowcast, can installed using example lines code , need additionally install CmdStan.","code":"# nolint start # Installing epinowcast # install.packages( #  \"epinowcast\", repos = \"https://epinowcast.r-universe.dev\" # ) #nolint # nolint end # Load packages library(baselinenowcast) library(epinowcast) library(ggplot2) library(dplyr) library(tidyr) # Set seed for reproducibility set.seed(123)"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Getting Started with baselinenowcast","text":"Nowcasting right-truncated case counts involves estimation reporting delays recently reported data. , need case counts indexed diagnosed (often called “reference date”) reported (.e. administratively recorded via public health surveillance; often called “report date”). difference reference date report date reporting delay. quick start, use daily level data Robert Koch Institute via Germany Nowcasting hub. data represent hospital admission counts date positive test date test report Germany October 1, 2021.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"filtering-and-plotting-the-data","dir":"Articles","previous_headings":"","what":"Filtering and plotting the data","title":"Getting Started with baselinenowcast","text":"filter data just look national-level data, age groups. pretend making nowcast August 1, 2021, therefore exclude reference dates report dates date. germany_covid19_hosp provided package data epinowcast Let’s start plotting sum reports reference date, compare eventually observe latest date complete dataset (data available October 1, 2021) red line shows cumulative number confirmed admissions report date, across delays, using data available August 1, 2021. demonstrates characteristic behaviour right-truncation. yet observed data become available longer delays recent time points. task estimate “final” cumulative number cases reference date, observed “fully observed” data October 2021.  black line represents quantity evaluate nowcast , final observed cases, red line represents observed cases observed August 1st, 2021.","code":"nowcast_date <- \"2021-08-01\" eval_date <- \"2021-10-01\"   target_data <- germany_covid19_hosp[location == \"DE\"][age_group == \"00+\"] |>   enw_filter_report_dates(latest_date = eval_date) |>   enw_filter_reference_dates(     latest_date = nowcast_date   )  latest_data <- enw_latest_data(target_data)  observed_data <- enw_filter_report_dates(   target_data,   latest_date = nowcast_date )  head(observed_data) ##    reference_date location age_group confirm report_date ##            <IDat>   <fctr>    <fctr>   <int>      <IDat> ## 1:     2021-04-06       DE       00+     149  2021-04-06 ## 2:     2021-04-07       DE       00+     312  2021-04-07 ## 3:     2021-04-08       DE       00+     424  2021-04-08 ## 4:     2021-04-09       DE       00+     288  2021-04-09 ## 5:     2021-04-10       DE       00+     273  2021-04-10 ## 6:     2021-04-11       DE       00+     107  2021-04-11 obs_data_by_reference_date <- enw_latest_data(observed_data)  ggplot() +   geom_line(     data = obs_data_by_reference_date,     aes(x = reference_date, y = confirm), color = \"darkred\"   ) +   geom_line(     data = latest_data,     aes(x = reference_date, y = confirm), color = \"black\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time and later observed cases\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Getting Started with baselinenowcast","text":"order compute nowcast data, need start creating call reporting triangle. matrix row represents one time points referenced column represents delay, starting 0 maximum delay. entries represent number new cases assigned reference time point particular delay, entries bottom right triangle missing data reported longer delays yet observed recent reference times. reporting triangle used estimate delay distribution, proportion final number cases reported particular delay. Since data reported referenced daily, use time scale days create reporting triangle, delay reference date can temporal granularity. example, fit delay distribution, apply generate nowcast matrix using data, national level data Germany age groups. sections, specify maximum delay, number reference times use delay estimation, number reference times use uncertainty quantification. use 3 times maximum delay total training volume, latest 50% reference times used delay estimation. uncertainty estimation, generate retrospective nowcast datasets latest 50% reference times. means order estimate delay using amount data, oldest retrospective nowcast dataset use first 50% reference times. recommend choosing maximum delay number historical observations based exploratory data analysis, specifications change significantly depending dataset. Next use epinowcast function, enw_preprocess_data() data form long tidy dataframe indexed reference date report date filtered strata interested , generate reporting triangle. see looks like, can plot using ggplot(). figure, grey indicates matrix elements NA, expect case bottom right portion reporting triangle counts yet observed.","code":"# Specify the maximum delay, which will determine the length of your delay # distribution. Empirical data outside this delay window will not be used for # training. max_delay <- 30 n_training_volume <- 3 * max_delay  # Specify the number of reference times to use to estimate the delay # distribution. Note this assumes you want the most recent observations. n_history_delay <- 0.5 * n_training_volume  # Specify the number of retrospective nowcast datasets # to use for uncertainty estimation. n_retrospective_nowcasts <- 0.5 * n_training_volume training_data <- enw_filter_reference_dates(   observed_data,   include_days = n_training_volume - 1 )  latest_training_data <- enw_latest_data(training_data)  target_data <- enw_filter_reference_dates(   latest_data,   include_days = n_training_volume - 1 )  # Get the reporting triangle, adding an additional day because epinowcast # we want the max_delay + 1 entries since 0 is a valid delay. # This also validates that the data is in the correct format and # runs preprocessing see ?enw_preprocess_data for more details pobs <- enw_preprocess_data(   obs = training_data,   max_delay = max_delay + 1 )  # as we only have one group here we only need reference_date, delay, # and new_confirm reporting_triangle_df <- select(   pobs$new_confirm[[1]],   reference_date,   delay,   new_confirm )  # we now pivot to wide format, dropping the reference_date column, and # convert to a matrix # this is the format that baselinenowcast expects reporting_triangle <- reporting_triangle_df |>   pivot_wider(names_from = delay, values_from = new_confirm) |>   select(-reference_date) |>   as.matrix() triangle_df <- as.data.frame(reporting_triangle) |>   mutate(time = row_number()) |>   pivot_longer(!time,     values_to = \"count\",     names_prefix = \"V\",     names_to = \"delay\"   ) |>   mutate(delay = as.numeric(delay))  ggplot(   triangle_df,   aes(x = delay, y = time, fill = count) ) +   geom_tile() +   scale_fill_gradient(low = \"white\", high = \"blue\") +   labs(title = \"Reporting triangle\", x = \"Delay\", y = \"Time\") +   theme_bw() +   scale_y_reverse()"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-delay","dir":"Articles","previous_headings":"","what":"Estimate delay","title":"Getting Started with baselinenowcast","text":"Now reporting triangle, now ready pass baselinenowcast package estimate delay distribution. tell function maximum delay number observations want use, though default use whole reporting triangle. reporting triangle small user-specified delays number training observations, function throw error. want pass reporting triangle (single group!) function. reference date repeated reporting triangle contains multiple strata, function throw error. get_delay_estimate() function expects following inputs: reporting_triangle: matrix reporting triangle single strata. rows represent time points columns represent observed delays, starting 0. can also reporting matrix incomplete reporting matrix (elements bottom right triangle need missing). max_delay: integer indicating maximum delay estimate. must less equal number rows triangle minus 1, since assume triangle indexed 0. n: integer indicating number observations reference date use fit delay distribution. must less equal number rows triangle. use n_history_delay.","code":"delay_pmf <- get_delay_estimate(   reporting_triangle = reporting_triangle,   max_delay = max_delay,   n = n_history_delay )  delay_df <- data.frame(   delay = 0:(length(delay_pmf) - 1),   pmf = delay_pmf )  ggplot(delay_df) +   geom_line(aes(x = delay, y = cumsum(pmf))) +   xlab(\"Delay\") +   ylab(\"Cumulative proportion reported\") +   ggtitle(\"Empirical point estimate of cumulative proportion reported by delay\") + # nolint   theme_bw() ggplot(delay_df) +   geom_line(aes(x = delay, y = pmf)) +   xlab(\"Delay\") +   ylab(\"Proportion reported\") +   ggtitle(\"Empirical point estimate of proportion reported by delay\") +   theme_bw()"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"apply-the-delay-to-generate-a-point-nowcast","dir":"Articles","previous_headings":"","what":"Apply the delay to generate a point nowcast","title":"Getting Started with baselinenowcast","text":"next step workflow take estimated delay distribution apply partially observed reporting triangle, generating estimate number new cases confirmed reference date delay. generate point estimate can call reporting square, complete set reference dates delays. case, applying delay reporting triangle used generate estimate, doesn’t always case. reporting triangle applying must max_delay delay estimate. worth noting also estimated delay applied one single step calling generate_pt_nowcast_mat(). subsequent steps estimate uncertainty, delay estimation generating point nowcast matrix happen single step. ’ll make quick plot compare nowcasted confirmed cases August 1, 2021, observations October 1, 2021. ’ll compare right-truncated data available August 1, 2021.  can see point nowcast slightly underestimates eventually reported (black line), decent overall job correcting right-truncation observed red line (data nowcast).","code":"point_nowcast_matrix <- apply_delay(   rep_tri_to_nowcast = reporting_triangle,   delay_pmf = delay_pmf ) point_nowcast_df <- target_data |>   mutate(nowcast = rowSums(point_nowcast_matrix))  prep_latest_data <- latest_training_data |>   mutate(type = \"Real-time data\") |>   select(type, reference_date, count = confirm)  # Combine data into a single dataframe for plotting plot_data <- point_nowcast_df |>   pivot_longer(     cols = c(confirm, nowcast),     names_to = \"type\",     values_to = \"count\"   ) |>   mutate(type = case_when(     type == \"confirm\" ~ \"Final observed data\",     type == \"nowcast\" ~ \"Point nowcast\",     TRUE ~ type   )) |>   bind_rows(prep_latest_data)  # Create plot with data type as a variable ggplot(plot_data, aes(x = reference_date, y = count, color = type)) +   geom_line() +   scale_color_manual(values = c(     \"Real-time data\" = \"darkred\",     \"Final observed data\" = \"black\",     \"Point nowcast\" = \"darkblue\"   )) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time, nowcasted, and later observed cases\") +   theme(legend.position = \"bottom\") +   labs(color = \"Type\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-uncertainty","dir":"Articles","previous_headings":"","what":"Estimate uncertainty","title":"Getting Started with baselinenowcast","text":"far, ’ve demonstrated generate point estimate nowcast. like generate probabilistic nowcasts. , use error predicted components retrospectively generated nowcasts (aggregated across delays) corresponding observations already observed. assume observations follow negative binomial observation model, independently estimate dispersion negative binomial forecast horizon. method used estimate uncertainty works generating retrospective reporting triangles using available retrospective nowcast time estimate delay distribution generate point nowcast matrix. repeat process n_retrospective_nowcasts reference times current reporting triangle, starting latest reference time working backwards, ultimately using n_retrospective_nowcasts n_history_delay reference times. generate_triangles() function returns list reporting triangles, order least recent, starting recent. filtered exclude rows may ultimately used generate nowcast, means triangle different number rows. Next pass list reporting triangles generate_pt_nowcast_mat_list(). function, can also specify n, number reference times used estimate delay nowcast, set n_history_delay previous specified. Next, use retrospective reporting triangles, point nowcasted reporting triangles, truncated reporting triangles estimate uncertainty horizon, starting horizon 0.","code":"trunc_rep_tri_list <- truncate_triangles(reporting_triangle,   n = n_retrospective_nowcasts ) retro_rep_tri_list <- generate_triangles(trunc_rep_tri_list) retro_pt_nowcast_mat_list <- generate_pt_nowcast_mat_list(   reporting_triangle_list = retro_rep_tri_list,   n = n_history_delay ) disp_params <- estimate_dispersion(   pt_nowcast_mat_list = retro_pt_nowcast_mat_list,   trunc_rep_tri_list = trunc_rep_tri_list,   reporting_triangle_list = retro_rep_tri_list,   n = n_history_delay )"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"generate-probabilistic-nowcast","dir":"Articles","previous_headings":"","what":"Generate probabilistic nowcast","title":"Getting Started with baselinenowcast","text":"Now estimated dispersion, can generate probabilistic nowcast. can use get_nowcast_draws() : generates draws nowcast distribution combines draws observed data form single draw nowcast repeats process draws draws can see, output dataframe get_nowcast_draws() contains: time: reference time index draw: draw number pred_count: predicted final count reference time draw (combining observations predictions present)","code":"nowcast_draws_df <- get_nowcast_draws(   point_nowcast_matrix, reporting_triangle,   dispersion = disp_params,   draws = 100 )  head(nowcast_draws_df) ##   pred_count time draw ## 1        736    1    1 ## 2        897    2    1 ## 3        893    3    1 ## 4        804    4    1 ## 5        722    5    1 ## 6        492    6    1"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"visualizing-the-nowcast","dir":"Articles","previous_headings":"","what":"Visualizing the nowcast","title":"Getting Started with baselinenowcast","text":"Let’s visualize nowcast compared final observed data. first need link nowcast original data can see nowcast reference date.","code":"# Prepare the datasets for joining latest_data_prepped <- latest_training_data |>   mutate(time = row_number()) |>   rename(obs_confirm = confirm) |>   mutate(reference_date = as.Date(reference_date))  final_data_prepped <- target_data |>   select(reference_date, final_confirm = confirm) |>   mutate(reference_date = as.Date(reference_date))  # Join the datasets obs_with_nowcast_draws_df <- nowcast_draws_df |>   left_join(latest_data_prepped, by = \"time\") |>   left_join(final_data_prepped, by = \"reference_date\") head(obs_with_nowcast_draws_df) ##   pred_count time draw reference_date location age_group obs_confirm ## 1        736    1    1     2021-05-04       DE       00+         823 ## 2        897    2    1     2021-05-05       DE       00+        1028 ## 3        893    3    1     2021-05-06       DE       00+        1016 ## 4        804    4    1     2021-05-07       DE       00+         892 ## 5        722    5    1     2021-05-08       DE       00+         822 ## 6        492    6    1     2021-05-09       DE       00+         561 ##   report_date final_confirm ## 1  2021-07-24           823 ## 2  2021-07-25          1028 ## 3  2021-07-26          1016 ## 4  2021-07-27           892 ## 5  2021-07-28           822 ## 6  2021-07-29           561 # Create a separate dataframe for observed and final data combined_data <- obs_with_nowcast_draws_df |>   select(reference_date, obs_confirm, final_confirm) |>   distinct() |>   pivot_longer(     cols = c(obs_confirm, final_confirm),     names_to = \"type\",     values_to = \"count\"   ) |>   mutate(type = case_when(     type == \"obs_confirm\" ~ \"Observed data\",     type == \"final_confirm\" ~ \"Final observed data\"   ))  # Plot with draws for nowcast only ggplot() +   # Add nowcast draws as thin gray lines   geom_line(     data = obs_with_nowcast_draws_df,     aes(       x = reference_date, y = pred_count, group = draw,       color = \"Nowcast draw\", linewidth = \"Nowcast draw\"     )   ) +   # Add observed data and final data once   geom_line(     data = combined_data,     aes(       x = reference_date,       y = count,       color = type,       linewidth = type     )   ) +   theme_bw() +   scale_color_manual(     values = c(       \"Nowcast draw\" = \"gray\",       \"Observed data\" = \"darkred\",       \"Final observed data\" = \"black\"     ),     name = \"\"   ) +   scale_linewidth_manual(     values = c(       \"Nowcast draw\" = 0.2,       \"Observed data\" = 1,       \"Final observed data\" = 1     ),     name = \"\"   ) +   scale_y_continuous(trans = \"log10\") +   xlab(\"Reference date\") +   ylab(\"Hospital admissions\") +   theme(legend.position = \"bottom\") +   ggtitle(\"Comparison of admissions as of the nowcast date, later observed counts, \\n and probabilistic nowcasted counts\") # nolint"},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Mathematical methods for `baselinenowcast`","text":"baselinenowcast model, initially developed reference COVID-19 hospital admissions nowcasting challenge Germany (2021-2022, Wolffram et al, utilises reporting triangles preliminary case counts delays. applies multiplicative approach, using empirically observed historical delay distributions estimate yet---observed cases. Users can specify whether delay distributions estimated latest data, fully observed past data, data different strata. model produces point estimates nowcasts “filling ” reporting triangle. Probabilistic nowcasts generated using negative binomial model means point nowcast dispersion parameters estimated past nowcast errors. dispersion parameters can also flexibly sourced current data, historical data, alternative settings.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"notation","dir":"Articles","previous_headings":"1 Overview","what":"Notation","title":"Mathematical methods for `baselinenowcast`","text":"denote \\(X_{t,d}, d = 0, .., D\\) number cases occurring time \\(t\\) appear dataset delay \\(d\\). example, delay \\(d = 0\\) means case occurring day \\(t\\) arrived dataset day \\(t\\), considered first possible report date practice. consider cases reporting within maximum delay \\(D\\). number cases reporting time \\(t\\) delay \\(d\\) can written : \\[X_{t, \\le d} = \\sum_{=0}^d X_{t,} \\] \\(X_t = X_{t, \\le D}\\) “final” number reported cases time \\(t\\). Conversely, \\(d < D\\) \\[X_{t,>d} = \\sum_{= d+1} ^{D} X_{t,}\\] number cases still missing \\(d\\) delay. refer \\(X_t\\) describe random variable, \\(x_t\\) corresponding observation, \\(\\hat{x}_t\\) estimated/imputed value. matrix \\(x_{t,d}\\) available given time \\(t^*\\) referred reporting matrix. case \\(t+d>t^*\\) yet observed (e.g. \\(t^*\\) current time), reporting matrix referred reporting triangle, values bottom right corner triangle missing, except first entry \\(x_{t=t*, d = 0}\\). Throughout document package, refer matrices, well corresponding vectors, using following table. table, “point” refers point estimate. indicated, referring probabilistic draw observation model. example, refer matrix imputed point estimates \\(t+d>t^*\\) point nowcast matrix, matrix complete set observations elements reporting matrix, matrix predictions point prediction matrix. package documentation, generally use reporting triangle refer diagonal reporting triangle, special case reporting triangle reporting delays reference times indexed scale. example diagonal reporting triangle one daily reporting daily data. package also supports refer ragged reporting triangle, example daily reporting data referenced per week. use following abbreviations shorten names code:","code":""},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimate-of-the-delay-distribution-from-a-reporting-matrix","dir":"Articles","previous_headings":"2 Point estimate of the delay distribution","what":"Estimate of the delay distribution from a reporting matrix","title":"Mathematical methods for `baselinenowcast`","text":"can use reporting matrix compute empirical estimate delay distribution, \\(\\pi(d)\\). empirical delay distribution, \\(\\pi(d)\\) can computed directly reporting matrix \\(X\\) \\[ \\pi(d)= \\frac{\\sum_{t=1}^{t=t^*} X_{t,d}}{\\sum_{d=0}^{D} \\sum_{t=1}^{t=t^*} X_{t,d}} \\] numerator sum observations across reference times \\(t\\) particular delay \\(d\\), denominator sum across reference times \\(t\\) delays \\(d\\).","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimate-of-the-delay-distribution-from-a-reporting-triangle","dir":"Articles","previous_headings":"2 Point estimate of the delay distribution","what":"Estimate of the delay distribution from a reporting triangle","title":"Mathematical methods for `baselinenowcast`","text":"case missing values bottom right (.e. reporting triangle), need use multiplicative model generate point nowcast matrix containing mixture observed imputed values. can compute delay distribution described reporting matrix case. multiplicative model works iteratively “filling ” reporting triangle starting bottom left, moving column column left right bottom right triangle filled . Figure 2.1: Visual description iterative “completing” reporting triangle, moving left right bottom top. cases, imputing \\(x_{t=6, d = 2}\\) \\(x_{t=5, d= 2}\\) assuming ratio \\(x_{t=1:4, d = 2}\\) (block top), \\(x_{t=1:4, d=0:1}\\) (block top left) holds \\(x_{t=5:6, d = 2}\\) (block bottom) \\(x_{t=5:6, d = 0:1}\\) (block bottom left). example, \\(\\hat{x}_{t=6, d = 1}\\) already imputed using approach, treat known going forward. process repeated across reporting triangle estimate values outlined dashed lines. method requires least one observation, delay \\(d=0\\) recent reference time, located bottom left reporting triangle Figure 2.1 . method assumes values delay \\(d\\) recent times, \\(t\\), consist proportion values previously reported earlier times \\(t\\). fill missing values column \\(d\\), sum rectangle completely observed reference dates \\(d-1\\) columns (block top left) sum column completely observed reference dates entries column \\(d\\) (block left). ratio two sums assumed missing entries column \\(d\\), use entries observed \\(d-1\\) incomplete reference date (block bottom left), scale ratio get missing entries column \\(d\\). process repeated delay \\(d\\) maximum delay \\(D\\). iteration additional reference time entry computed delay \\(d\\) increases. delay distribution estimated filled reporting matrix, using algorithm described case complete reporting square. get_delay_estimate() function ingests either reporting matrix, incomplete reporting matrix, reporting triangle uses last n rows compute empirical delay probability mass function (returning simplex vector indexed starting delay 0).","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generation-of-a-point-nowcast-matrix-from-a-delay-distribution-and-a-reporting-triangle","dir":"Articles","previous_headings":"","what":"Generation of a point nowcast matrix from a delay distribution and a reporting triangle","title":"Mathematical methods for `baselinenowcast`","text":"“fill ” reporting triangle delay distribution, need estimate expected total number eventual observed cases \\(\\hat{x}_t\\), reference time \\(t\\). Let \\(z\\) sum delays \\(d\\) already observed (\\(t^*-t\\)), \\(z =\\sum_{d=1}^{d=t^*-t} x_{t,d}\\) \\(\\delta\\) cumulative sum delay distribution, \\(\\pi(d)\\) \\(d = t^*-t\\) \\(\\delta = \\sum_{d=1}^{d=t^*-t} \\pi(d)\\). assuming \\(z \\sim Bin(x_t, \\delta)\\) \\(x_t \\sim Unif(0, \\inf)\\), can shown expected value \\(x_t\\), total number reported cases reference time \\(t\\), can written : \\[ E(x_t | z, \\delta) = \\hat{x}_t = \\frac{z + 1 - \\delta}{\\delta} \\] can compute \\(\\hat{x}_{t,d}\\) directly using \\(d\\)th element \\(\\pi(d)\\) \\[ \\hat{x}_{t,d} = \\pi(d) \\times \\hat{x}_t \\] number reports timepoint \\(t\\) delay \\(d\\) product expected total reports, \\(\\hat{x}_t\\) proportion expected particular delay \\(d\\), \\(\\pi(d)\\). apply_delay() function ingests reporting triangle incomplete reporting matrix delay PMF returns point nowcast matrix.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimate-of-dispersion","dir":"Articles","previous_headings":"","what":"Estimate of dispersion","title":"Mathematical methods for `baselinenowcast`","text":"estimate uncertainty nowcasts, use past nowcast errors assume negative binomial observation model.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generation-of-retrospective-reporting-triangles","dir":"Articles","previous_headings":"4 Estimate of dispersion","what":"Generation of retrospective reporting triangles","title":"Mathematical methods for `baselinenowcast`","text":"describe method generates retrospective reporting triangles replicate available time \\(t^*=s^*\\), \\(s^* = t^*-m\\) \\(m = 1, 2, ... M\\) generate \\(M\\) retrospective reporting triangles. generate set \\(M\\) reporting triangles, work backwards recent oldest, removing last \\(m\\) rows existing reporting triangle, generate \\(M\\) truncated reporting triangles. can generated reporting triangle function truncate_triangles() ingests single reporting triangle returns list n truncated reporting containing observations missing values present. replace bottom right triangle NAs, assuming observed \\(s^*\\), using function generate_triangles() returns list n retrospective reporting triangles, order recent oldest. method uses retrospective reporting triangle re-estimate delay distribution using \\(N\\) preceding reference times retrospective reporting triangle \\(s^*\\), recomputes retrospective point nowcast matrix, \\(M\\) realizations retrospective reporting triangle (\\(M\\) different \\(s^*\\) values). Thus order estimate uncertainty using \\(N\\) reference times, total training volume must meet exceed \\(N+M\\) oldest retrospective nowcast dataset \\(s^* = t^*-M\\) can use \\(N\\) reference times point nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generation-of-retrospective-point-nowcast-matrices","dir":"Articles","previous_headings":"4 Estimate of dispersion","what":"Generation of retrospective point nowcast matrices","title":"Mathematical methods for `baselinenowcast`","text":"\\(M\\) reporting triangles, apply method described estimate delay distribution reporting triangle generate point nowcast reporting triangle, generate \\(M\\) point nowcasts. function generate_point_nowcasts() ingests list reporting triangles, estimates delay distribution , generates list point nowcast matrices.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"fit-predicted-point-nowcast-vectors-and-observed-counts-to-a-negative-binomial-observation-model-at-each-forecast-horizon","dir":"Articles","previous_headings":"4 Estimate of dispersion","what":"Fit predicted point nowcast vectors and observed counts to a negative binomial observation model at each forecast horizon","title":"Mathematical methods for `baselinenowcast`","text":"quantify uncertainty target quantity level, assumed, default, final count reference time, summed across reporting delays. retrospective nowcast time \\(s^*\\), compute predicted corresponding observed nowcast forecast horizon \\(j = 1, ..., D\\) summing across reporting delays delays \\(d\\) observed time \\(t^*\\), indicated indicator function. define predicted nowcast forecast horizon \\(j\\) retrospective nowcast time \\(s^*\\) \\[ \\hat{X}_{t-j}(s^*) = \\sum_{d=0}^{D} \\hat{X}_{t-j,d}(s^*) \\times (t-j+d \\leq t^*) \\] likewise observed nowcast forecast horizon \\(j\\) retrospective nowcast time \\(s^*\\) \\[ X_{t-j}(s^*) = \\sum_{d=0}^{D} X_{t-j,d}(s^*) \\times (t-j+d \\leq t^*) \\] generates \\(M\\) pairs predicted nowcasts observed nowcasts forecast horizon \\(j = 1, ..., D\\). assume observed nowcasts \\(X_{t-j}\\) follow negative binomial observation model mean \\(\\hat{X}_{t-j}(t^*-j)\\) \\[ X_{t-j} | \\hat{X}_{t-j}(t^* - j) \\sim NegBin(\\mu = \\hat{X}_{t-j}(t^*-j) + 0.1, \\phi = \\phi_{t^*-t}) \\] \\(s^* = 1, ..., M\\). add small number (0.1) mean avoid ill-defined negative binomial. function estimate_dispersion() ingests list reporting triangles representing data available reference time, list point nowcast matrices representing nowcasts reference time, list truncated reporting matrices representing observations reference time. returns vector negative binomial dispersion parameters indexed starting forecast horizon \\(j = 1\\).","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generate-probabilistic-nowcasts","dir":"Articles","previous_headings":"","what":"Generate probabilistic nowcasts","title":"Mathematical methods for `baselinenowcast`","text":"Using dispersion parameters forecast horizon, \\(\\phi(j),\\) \\(j = 1,...D\\), can generate probabilistic nowcast matrices drawing samples negative binomial: \\[ X_{t^*-j} \\sim NegBin(\\mu = \\hat{X}_{t^*-j}, \\phi = \\phi(j)) \\] can sample number draws, use draws compute desired quantiles summarize outputs. function get_nowcast_pred_draws() ingests point nowcast prediction matrix (containing predicted elements, observations reporting triangle), dispersion parameters, number draws sample generates dataframe predicted point nowcasts reference time. can join original data long form reference date reporting date order generate probabilistic nowcasts sum predicted total count draw observed count reference time final reference time.","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kaitlyn Johnson. Author, maintainer, copyright holder. Sam Abbott. Author. Johannes Bracher. Author. Sebastian Funk. Author.","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson K, Abbott S, Bracher J, Funk S (2025). baselinenowcast: Baseline nowcast. R package version 0.0.0.1000, https://baselinenowcast.epinowcast.org.","code":"@Manual{,   title = {baselinenowcast: Baseline nowcast},   author = {Kaitlyn Johnson and Sam Abbott and Johannes Bracher and Sebastian Funk},   year = {2025},   note = {R package version 0.0.0.1000},   url = {https://baselinenowcast.epinowcast.org}, }"},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Baseline nowcast for right-truncated epidemiological data","text":"Nowcasting right-truncated epidemiological data critical timely public health decision-making, reporting delays can create misleading impressions declining trends recent data. package provides simple nowcasting methods practical use based using empirical delay distributions uncertainty past performance. also designed used baseline method developers new nowcasting methods. supports standard data frame inputs reference date, report date, count columns, compatible ‘epinowcast’ objects, also supports direct use reporting triangles. Alongside opinionated default workflow, low-level pipe-friendly modular interface, allowing context-specific workflows. can accommodate wide spectrum reporting schedules, including mixed patterns reference reporting (daily-weekly, weekly-daily). also supports sharing delay distributions uncertainty estimates strata, well custom uncertainty models delay estimation methods.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Baseline nowcast for right-truncated epidemiological data","text":"install development version GitHub (warning! version may contain breaking changes /bugs), use pak package:","code":"pak::pak(file.path(\"epinowcast\", \"baselinenowcast\"))"},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Baseline nowcast for right-truncated epidemiological data","text":"provide range documentation, case studies, community spaces ask (answer!) questions: organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use baselinenowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Baseline nowcast for right-truncated epidemiological data","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request see contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"Contributing","what":"How to make a bug report or feature request","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please briefly describe problem output expect issue. See contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"Contributing","what":"Code of Conduct","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please note baselinenowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Baseline nowcast for right-truncated epidemiological data","text":"use baselinenowcast work, please consider citing citation(\"baselinenowcast\").","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"contributions project gratefully acknowledged using allcontributors package following allcontributors specification. Contributions kind welcome!","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Baseline nowcast for right-truncated epidemiological data","text":"kaitejohnson, seabbs, TimTaylor, sbfnk","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"issue-authors","dir":"","previous_headings":"Contributors","what":"Issue Authors","title":"Baseline nowcast for right-truncated epidemiological data","text":"jonathonmellor","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"issue-contributors","dir":"","previous_headings":"Contributors","what":"Issue Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"jamesmbaazam, jbracher","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the delay to generate a point nowcast — apply_delay","title":"Apply the delay to generate a point nowcast — apply_delay","text":"Generate point estimate completed reporting square (rectangle) reporting triangle want complete nowcast delay PMF. element computed taking product expected number total cases assigned reference time $t$ proportion cases reported delay $d$. formula obtain expected number total cases function reporting delay previous observations derived elsewhere. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the delay to generate a point nowcast — apply_delay","text":"","code":"apply_delay(rep_tri_to_nowcast, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the delay to generate a point nowcast — apply_delay","text":"rep_tri_to_nowcast Matrix reporting triangle nowcasted, rows representing time points reference columns representing delays delay_pmf Vector delays assumed indexed starting first delay column rep_mat_to_nowcast","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the delay to generate a point nowcast — apply_delay","text":"point_nowcast_matrix Matrix number rows columns rep_mat_to_nowcast missing values filled point estimates","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the delay to generate a point nowcast — apply_delay","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   reporting_triangle = triangle,   max_delay = 3,   n = 4 ) point_nowcast_matrix <- apply_delay(   rep_tri_to_nowcast = triangle,   delay_pmf = delay_pmf ) print(point_nowcast_matrix) #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 17.78889 #> [4,]   80 40.00000 23.20529 15.92281 #> [5,]   70 35.24853 20.35851 13.96745"},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine observed data with a single prediction draw — combine_obs_with_pred","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"Internally sums observed counts reporting triangle reference time adds predicted counts form single draw nowcast final counts reference time.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"","code":"combine_obs_with_pred(predicted_counts, reporting_triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"predicted_counts Vector predicted counts reference time reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"vector predicted counts reference time","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"","code":"pred_counts <- c(10, 20, 30, 40) reporting_matrix <- matrix(   c(     1, 2, 3, 4,     5, 6, 7, 8,     9, 10, 11, 12   ),   nrow = 4,   byrow = TRUE ) reporting_triangle <- generate_triangle(reporting_matrix) combine_obs_with_pred(pred_counts, reporting_triangle) #> [1] 16 35 45 50"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"Calculate updated rows expected nowcasted triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"","code":".calc_expectation(delay_index, expectation, delay_prob, delay_cdf_prev, n_rows)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"delay_index Integer indicating delay index expectation Matrix incomplete reporting matrix delay_prob Probability case reported current delay delay_cdf_prev CDF delay PMF previous delay n_rows Number rows expectation matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"Matrix another set entries corresponding updated values specified rows column","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if matrix has valid NA pattern — .check_na_bottom_right","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"Check matrix valid NA pattern","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"","code":".check_na_bottom_right(mat)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"mat Matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"Boolean indicating whether matrix contains NAs bottom right (TRUE bottom right, FALSE elsewhere).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"Compute sum entries column matrix sets matrices booleans TRUE","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"","code":".conditional_sum_cols(col, matrix_bool1, matrix_bool2, matrix_to_sum)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"col Integer indicating column sum matrix_bool1 Matrix booleans first set indices matrix_bool2 Matrix booleans second set indices matrix_to_sum Matrix summed specific column","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"Numeric summing values matrix_to_sum specified column entries true","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-extract_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract from one matrix only elements that are missing in another — .extract_predictions","title":"Extract from one matrix only elements that are missing in another — .extract_predictions","text":"Extract one matrix elements missing another","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-extract_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract from one matrix only elements that are missing in another — .extract_predictions","text":"","code":".extract_predictions(point_nowcast_matrix, reporting_triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-extract_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract from one matrix only elements that are missing in another — .extract_predictions","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-extract_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract from one matrix only elements that are missing in another — .extract_predictions","text":"Matrix containing elements point_nowcast_matrix elements missing reporting_triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"Takes vector observations vector expectations performs MLE estimator estimate dispersion parameter negative binomial. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7fab4dce7b559c3076ab643cf22048cb5fb84cc2/code/baseline/functions.R#L404 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"","code":".fit_nb(x, mu)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"x observed values mu expected values","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"maximum likelihood estimate dispersion","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Handle negative values reporting triangle Takes reporting triangle returns matrix format input triangle, negative values reporting handled via passing subsequent days (longer delay shorter). code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"","code":".handle_neg_vals(triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Matrix positive integers negative values reporting handled via passing subsequent days delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-safelydoesit.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe iterator — .safelydoesit","title":"Safe iterator — .safelydoesit","text":"Safe iterator","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-safelydoesit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe iterator — .safelydoesit","text":"","code":".safelydoesit(fun)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-safelydoesit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe iterator — .safelydoesit","text":"fun Function wrap around","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-safelydoesit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe iterator — .safelydoesit","text":"Function return NULL error occurs","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"Validate triangle nowcast delay PMF together Various checks make sure reporting triangle  delay PMF passed apply_delay() formatted properly compatible.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"","code":".validate_delay_and_triangle(triangle, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"triangle Matrix values rows indicating time points columns indicating delays. delay_pmf Vector length number delays indicating probability case reported given delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"Validate triangle Various checks make sure reporting triangle passed get_delay_estimate() formatted properly.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"","code":".validate_triangle(   triangle,   max_delay = ncol(triangle) - 1,   n = nrow(triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(reporting_triangle)","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate dispersion parameters — estimate_dispersion","title":"Estimate dispersion parameters — estimate_dispersion","text":"function ingests list point nowcast matrices corresponding list truncated reporting matrices uses estimate vector negative binomial dispersion parameters observations estimates horizon, starting 0 max delay number horizons.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate dispersion parameters — estimate_dispersion","text":"","code":"estimate_dispersion(   pt_nowcast_mat_list,   trunc_rep_tri_list,   reporting_triangle_list,   n = length(pt_nowcast_mat_list) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate dispersion parameters — estimate_dispersion","text":"pt_nowcast_mat_list List point nowcast matrices rows represent reference time points columns represent delays. trunc_rep_tri_list List truncated reporting matrices, containing observations latest reference time. Elements list paired elements pt_nowcast_mat_list. reporting_triangle_list List n truncated reporting triangle matrices many rows available given truncation. n Integer indicating number reporting matrices use estimate dispersion parameters.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate dispersion parameters — estimate_dispersion","text":"Vector length one less number columns latest reporting triangle, element representing estimate dispersion parameter delay d, starting delay d=1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate dispersion parameters — estimate_dispersion","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle, n = 2) retro_rts <- generate_triangles(trunc_rts)  retro_nowcasts <- generate_pt_nowcast_mat_list(retro_rts, n = 5) disp_params <- estimate_dispersion(   pt_nowcast_mat_list = retro_nowcasts,   trunc_rep_tri_list = trunc_rts,   reporting_triangle_list = retro_rts,   n = 2 ) disp_params #> [1] 999.999935   5.141440   3.181066"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate point nowcast — generate_pt_nowcast_mat","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"function ingests reporting triangle matrix optionally, delay distribution, returns completed reporting square represents point nowcast. delay distribution specified, used generate nowcast, otherwise, delay distribution estimated reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"","code":"generate_pt_nowcast_mat(   reporting_triangle,   max_delay = ncol(reporting_triangle) - 1,   n = nrow(reporting_triangle),   delay_pmf = NULL )"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(reporting_triangle) delay_pmf Vector delays assumed indexed starting first delay column reporting_triangle. Default NULL, estimate delay reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"point_nowcast_matrix Matrix number rows columns reporting_triangle missing values filled point estimates.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) point_nowcast_matrix <- generate_pt_nowcast_mat(   reporting_triangle = triangle ) point_nowcast_matrix #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 14.33572 #> [4,]   80 40.00000 23.17697 12.82918 #> [5,]   70 37.26249 20.72155 11.46862"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"function ingests list incomplete reporting triangles generates list point nowcast matrices, based delay estimated triangle corresponding delay passed . uses specified n number reference times estimate delay retrospective reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"","code":"generate_pt_nowcast_mat_list(   reporting_triangle_list,   max_delay = min(sapply(reporting_triangle_list, ncol)) - 1,   n = min(sapply(reporting_triangle_list, nrow)),   delay_pmf = NULL )"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"reporting_triangle_list List n truncated reporting triangle matrices many rows available given truncation. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. n Integer indicating number reference times (number rows) use estimate delay distribution reporting triangle. Default minimum number rows matrices list_of_rts. delay_pmf Vector list vectors delays assumed indexed starting first delay column matrices reporting_triangle_list. list, must length reporting_triangle_list, elements aligning. Default NULL","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"pt_nowcast_matr_list List number elements input reporting_triangle_listbut reporting triangle filled based delay estimated reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle) retro_rts <- generate_triangles(trunc_rts) retro_pt_nowcast_mat_list <- generate_pt_nowcast_mat_list(retro_rts) retro_pt_nowcast_mat_list[1:3] #> [[1]] #>      [,1]     [,2]     [,3]      [,4] #> [1,]   65 46.00000 21.00000  7.000000 #> [2,]   70 40.00000 20.00000  5.000000 #> [3,]   80 50.00000 10.00000 10.000000 #> [4,]  100 40.00000 31.00000  9.502924 #> [5,]   95 45.00000 22.50317  9.030878 #> [6,]   82 41.82672 19.90693  7.988127 #>  #> [[2]] #>      [,1]     [,2]     [,3]     [,4] #> [1,]   65 46.00000 21.00000 7.000000 #> [2,]   70 40.00000 20.00000 5.000000 #> [3,]   80 50.00000 10.00000 6.414220 #> [4,]  100 40.00000 20.36587 7.347008 #> [5,]   95 53.33883 21.57749 7.784433 #>  #> [[3]] #> NULL #>"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single retrospective reporting triangle — generate_triangle","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"function generates single reporting triangle removing bottom right observations truncated reporting triangle matrix. singular version generate_triangles().","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"","code":"generate_triangle(trunc_rep_tri, structure = 1)"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"trunc_rep_tri single truncated reporting triangle. May may contain NAs. structure Integer vector specifying reporting structure. integer, divides columns evenly integer (last possibly truncated).  vector, must sum number columns. Default 1 (standard triangular structure).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"single retrospective reporting triangle matrix NAs appropriate positions.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, 10,     82, 42, 6, NA,     70, 90, NA, NA   ),   nrow = 7,   byrow = TRUE )  # Standard triangular structure (default) rep_tri <- generate_triangle(triangle) rep_tri #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA #> [7,]   70   NA   NA   NA  # Ragged structure with 2 columns per delay period rep_ragged <- generate_triangle(triangle, 2) rep_ragged #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   10 #> [6,]   82   42    6   NA #> [7,]   70   90   NA   NA  # Custom structure with explicit column counts rep_custom <- generate_triangle(triangle, c(1, 2)) rep_custom #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   10 #> [6,]   82   42    6   NA #> [7,]   70   NA   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate retrospective reporting triangles — generate_triangles","title":"Generate retrospective reporting triangles — generate_triangles","text":"function ingests list truncated reporting triangles iteratively generates reporting triangle available maximum reference time. operates element list order (recent retrospective nowcast time oldest retrospective nowcast time).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate retrospective reporting triangles — generate_triangles","text":"","code":"generate_triangles(trunc_rep_tri_list, structure = 1)"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate retrospective reporting triangles — generate_triangles","text":"trunc_rep_tri_list List n truncated reporting triangle matrices many rows available given truncation. structure Integer vector specifying reporting structure. integer, divides columns evenly integer (last possibly truncated).  vector, must sum number columns. Default 1 (standard triangular structure).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate retrospective reporting triangles — generate_triangles","text":"reporting_triangle_list List retrospective reporting triangles, generated removing bottom right observations truncated reporting triangle matrices.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate retrospective reporting triangles — generate_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle, n = 2) retro_rts <- generate_triangles(trunc_rts)  # With custom structure retro_rts_custom <- generate_triangles(   retro_rts,   structure = 2 ) retro_rts_custom #> [[1]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   NA #> [5,]   95   45   NA   NA #> [6,]   82   NA   NA   NA #>  #> [[2]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   NA #> [4,]  100   40   NA   NA #> [5,]   95   NA   NA   NA #>"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"Estimate delay distribution reporting triangle Provides estimate reporting delay function delay, based reporting triangle specified maximum delay number reference date observations used estimation. point estimate delay computed empirically, using iterative algorithm starting recent observations. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"","code":"get_delay_estimate(   reporting_triangle,   max_delay = ncol(reporting_triangle) - 1,   n = nrow(reporting_triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(reporting_triangle)","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"Vector indexed 0 length max_delay + 1 columns indicating point estimate empirical probability mass delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   reporting_triangle = triangle,   max_delay = 3,   n = 4 ) delay_pmf #> [1] 0.5029412 0.2514706 0.1455882 0.1000000"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single draw of a nowcast combining observed and predicted values — get_nowcast_draw","title":"Generate a single draw of a nowcast combining observed and predicted values — get_nowcast_draw","text":"Generate single draw nowcast combining observed predicted values","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single draw of a nowcast combining observed and predicted values — get_nowcast_draw","text":"","code":"get_nowcast_draw(point_nowcast_matrix, reporting_triangle, dispersion)"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single draw of a nowcast combining observed and predicted values — get_nowcast_draw","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). dispersion Vector dispersion parameters indexed horizon minus one maximum delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single draw of a nowcast combining observed and predicted values — get_nowcast_draw","text":"Vector predicted counts reference time based combining observed counts predicted counts unobserved elements.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a single draw of a nowcast combining observed and predicted values — get_nowcast_draw","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 16.8,     80, 40, 21.2, 19.5,     70, 34.5, 15.4, 9.1   ),   nrow = 5,   byrow = TRUE ) reporting_triangle <- generate_triangle(point_nowcast_matrix) disp <- c(0.8, 12.4, 9.1) nowcast_draw <- get_nowcast_draw(   point_nowcast_matrix,   reporting_triangle,   disp ) nowcast_draw #> [1] 165 200 166 134 167"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate multiple draws of a nowcast combining observed and predicted values — get_nowcast_draws","title":"Generate multiple draws of a nowcast combining observed and predicted values — get_nowcast_draws","text":"Generate multiple draws nowcast combining observed predicted values","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate multiple draws of a nowcast combining observed and predicted values — get_nowcast_draws","text":"","code":"get_nowcast_draws(   point_nowcast_matrix,   reporting_triangle,   dispersion,   draws = 1000 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate multiple draws of a nowcast combining observed and predicted values — get_nowcast_draws","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). dispersion Vector dispersion parameters indexed horizon minus one maximum delay. draws Integer indicating number draws predicted nowcast vector generate. Default 1000.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate multiple draws of a nowcast combining observed and predicted values — get_nowcast_draws","text":"Dataframe containing information multiple draws columns reference time (time), predicted counts (pred_count), draw number (draw).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate multiple draws of a nowcast combining observed and predicted values — get_nowcast_draws","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 16.8,     80, 40, 21.2, 19.5,     70, 34.5, 15.4, 9.1   ),   nrow = 5,   byrow = TRUE ) reporting_triangle <- generate_triangle(point_nowcast_matrix) disp <- c(0.8, 12.4, 9.1) nowcast_draws <- get_nowcast_draws(   point_nowcast_matrix,   reporting_triangle,   disp,   draws = 5 ) nowcast_draws #>    pred_count time draw #> 1         165    1    1 #> 2         200    2    1 #> 3         170    3    1 #> 4         148    4    1 #> 5          73    5    1 #> 6         165    1    2 #> 7         200    2    2 #> 8         175    3    2 #> 9         168    4    2 #> 10         85    5    2 #> 11        165    1    3 #> 12        200    2    3 #> 13        181    3    3 #> 14        187    4    3 #> 15         78    5    3 #> 16        165    1    4 #> 17        200    2    4 #> 18        173    3    4 #> 19        180    4    4 #> 20         95    5    4 #> 21        165    1    5 #> 22        200    2    5 #> 23        169    3    5 #> 24        151    4    5 #> 25        211    5    5"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a draw of only the predicted elements of the nowcast vector — get_nowcast_pred_draw","title":"Get a draw of only the predicted elements of the nowcast vector — get_nowcast_pred_draw","text":"Get draw predicted elements nowcast vector","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a draw of only the predicted elements of the nowcast vector — get_nowcast_pred_draw","text":"","code":"get_nowcast_pred_draw(point_nowcast_matrix, reporting_triangle, dispersion)"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a draw of only the predicted elements of the nowcast vector — get_nowcast_pred_draw","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). dispersion Vector dispersion parameters indexed horizon minus one maximum delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a draw of only the predicted elements of the nowcast vector — get_nowcast_pred_draw","text":"Vector predicted draws reference time, reference times input point_nowcast_pred_matrix.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a draw of only the predicted elements of the nowcast vector — get_nowcast_pred_draw","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 16.8,     80, 40, 21.2, 19.5,     70, 34.5, 15.4, 9.1   ),   nrow = 5,   byrow = TRUE ) reporting_triangle <- generate_triangle(point_nowcast_matrix) disp <- c(0.8, 12.4, 9.1) nowcast_pred_draw <- get_nowcast_pred_draw(   point_nowcast_matrix,   reporting_triangle,   disp ) nowcast_pred_draw #> [1]  0  0 34 46  1"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — get_nowcast_pred_draws","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — get_nowcast_pred_draws","text":"Get dataframe multiple draws predicted elements nowcast vector","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — get_nowcast_pred_draws","text":"","code":"get_nowcast_pred_draws(   point_nowcast_matrix,   reporting_triangle,   dispersion,   draws = 1000 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — get_nowcast_pred_draws","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). dispersion Vector dispersion parameters indexed horizon minus one maximum delay. draws Integer indicating number draws predicted nowcast vector generate. Default 1000.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — get_nowcast_pred_draws","text":"Dataframe containing predicted point nowcast vectors indexed reference time (pred_count), reference time (time), draw index (draw).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_pred_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — get_nowcast_pred_draws","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 16.8,     80, 40, 21.2, 19.5,     70, 34.5, 15.4, 9.1   ),   nrow = 5,   byrow = TRUE ) reporting_triangle <- generate_triangle(point_nowcast_matrix) disp <- c(0.8, 12.4, 9.1) nowcast_pred_draws <- get_nowcast_pred_draws(   point_nowcast_matrix,   reporting_triangle,   disp,   draws = 5 ) nowcast_pred_draws #>    pred_count time draw #> 1           0    1    1 #> 2           0    2    1 #> 3          12    3    1 #> 4          42    4    1 #> 5           0    5    1 #> 6           0    1    2 #> 7           0    2    2 #> 8          21    3    2 #> 9          49    4    2 #> 10         20    5    2 #> 11          0    1    3 #> 12          0    2    3 #> 13         15    3    3 #> 14         43    4    3 #> 15          2    5    3 #> 16          0    1    4 #> 17          0    2    4 #> 18         11    3    4 #> 19         59    4    4 #> 20         69    5    4 #> 21          0    1    5 #> 22          0    2    5 #> 23         18    3    5 #> 24         58    4    5 #> 25         17    5    5"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single truncated triangle — truncate_triangle","title":"Get a single truncated triangle — truncate_triangle","text":"function takes integer t reporting triangle generates truncated reporting triangle, remove last t observations.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single truncated triangle — truncate_triangle","text":"","code":"truncate_triangle(t, reporting_triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single truncated triangle — truncate_triangle","text":"t Integer indicating number timepoints truncate bottom original reporting triangle. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single truncated triangle — truncate_triangle","text":"trunc_rep_tri Matrix t fewer rows reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single truncated triangle — truncate_triangle","text":"","code":"# example code triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rep_tri <- truncate_triangle(t = 1, reporting_triangle = triangle) trunc_rep_tri #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate truncated reporting triangles — truncate_triangles","title":"Generate truncated reporting triangles — truncate_triangles","text":"function ingests reporting triangle/matrix number truncated reporting triangles want create, n, iteratively truncates reporting triangle, working latest reference time (bottom) older reference times (top) n snapshots.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate truncated reporting triangles — truncate_triangles","text":"","code":"truncate_triangles(   reporting_triangle,   n = nrow(reporting_triangle) - ncol(reporting_triangle) - 1 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate truncated reporting triangles — truncate_triangles","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). n Integer indicating number retrospective truncated triangles generated, always starting recent reference time. Default generate truncated matrices triangles sufficient number rows generate nowcast .","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate truncated reporting triangles — truncate_triangles","text":"trunc_rep_tri_list List n truncated reporting triangle matrices many rows available given truncation, number columns reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate truncated reporting triangles — truncate_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  truncated_rts <- truncate_triangles(triangle, n = 2) truncated_rts[1:2] #> [[1]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA #>  #> [[2]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #>"},{"path":"https://baselinenowcast.epinowcast.org/news/index.html","id":"baselinenowcast-0001000","dir":"Changelog","previous_headings":"","what":"baselinenowcast 0.0.0.1000","title":"baselinenowcast 0.0.0.1000","text":"Implements safe iterator step retrospective point nowcasts generated list retrospective reporting triangles, ensuring iterations continue even retrospective point nowcasts can generated. Modify vignette consistent decided upon defaults number reference times used delay estimation uncertainty. Replace function namedreplace_lower_right_with_NA() generate_triangle(). Removes requirement elements reporting triangle integers. Modify method used estimate dispersion. Instead estimating dispersion individual elements nowcast matrix, now estimate dispersion predicted nowcasts summed across reporting dates function forecast horizon. Standardises naming objects matrices vs vectors objects contain observations, point estimates, probabilistic draws. Modifies functions estimate delay generate point nowcast ensure throw error/warning first element delay PMF 0. Adjusts function estimate delay distribution able handle complete partially complete reporting triangles. Add function convert list expected observed reporting squares long tidy dataframe indexed reference time, delay, sample index. Implement zero-handling bottom left reporting triangle applying delay generate point nowcast. Add function generate list expected observed reporting squares. Add function generate expected observed reporting square point nowcast vector dispersion parameters. Add function estimate dispersion parameters match list nowcasts observed reporting triangles. Add functions generate retrospective nowcasts single reporting triangle. Refactor uncertainty estimation use user-facing function generate retrospective reporting triangles. Methods write-separate vignette. Introduced function estimate uncertainty triangle nowcasted delay distribution. Introduced functions get delay estimate apply delay, used Getting Started vignette. Added package skeleton.","code":""}]
