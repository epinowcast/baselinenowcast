[{"path":"https://baselinenowcast.epinowcast.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 baselinenowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with baselinenowcast","text":"Incomplete reporting epidemiological data recent times can result case count data right-truncated. Right-truncated case counts can misleading interpret face-value, typically show decline number reported observations recent time points. time points highest proportion data yet observed dataset. imputation cases eventually observed current time referred nowcast. number methods developed nowcast epidemiological case count data. purpose baselinenowcast provide nowcast computed directly recent observations estimate delay distribution empirically, apply partially observed data generate nowcast. section, describe example nowcasting problem, demonstrate use baselinenowcast estimate delay distribution data apply estimate generate probabilistic nowcast. example walk low-level functionality “default” model permutation. future vignettes, demonstrate examples create complex model permutations. details mathematical methods provided mathematical model vignette.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Getting Started with baselinenowcast","text":"well baselinenowcast package vignette also uses epinowcast, ggplot2, tidyr, dplyr. installation epinowcast required using package. However, pre post-processing functions provide lot data wrangling needed set nowcasting problem. note just using components epinowcast, can installed using following:","code":"# nolint start # Installing epinowcast # install.packages( #  \"epinowcast\", repos = \"https://epinowcast.r-universe.dev\" # ) #nolint # nolint end # Load packages library(baselinenowcast) library(epinowcast) library(ggplot2) library(dplyr) library(tidyr) # Set seed for reproducibility set.seed(123)"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Getting Started with baselinenowcast","text":"Nowcasting right-truncated case counts involves estimation reporting delays recently reported data. , need case counts indexed diagnosed (often called “reference date”) reported (.e. administratively recorded via public health surveillance; often called “report date”). difference reference date report date reporting delay. quick start, use daily level data Robert Koch Institute via Germany Nowcasting hub. data represent hospital admission counts date positive test date test report Germany October 1, 2021. filter data just look national-level data, age groups. pretend making nowcast August 1, 2021, therefore exclude reference dates report dates date. germany_covid19_hosp provided package data epinowcast. Let’s start plotting sum reports reference date, compare eventually observe latest date complete dataset (data available October 1, 2021). epinowcast function enw_latest_data() used filter observations latest available reported total counts reference date. epinowcast function enw_filter_report_dates() used create truncated dataset generating retrospective nowcast, using data available nowcast date. Using observed data nowcast date (observed_data) enw_latest_data() function, make plot latest total number confirmed cases reference date.  red line shows total number confirmed admissions reference date, across delays, using data available August 1, 2021. demonstrates characteristic behaviour right-truncation. yet observed data longer delays recent time points. black line shows total number confirmed admissions reference date October 1, 2021. task estimate, data available August 1, 2021, “final” total number cases reference date.","code":"nowcast_date <- \"2021-08-01\" eval_date <- \"2021-10-01\"  target_data <- germany_covid19_hosp[location == \"DE\"][age_group == \"00+\"] |>   enw_filter_report_dates(latest_date = eval_date) |>   enw_filter_reference_dates(     latest_date = nowcast_date   ) latest_data <- enw_latest_data(target_data) observed_data <- enw_filter_report_dates(   target_data,   latest_date = nowcast_date )  head(observed_data) ##    reference_date location age_group confirm report_date ##            <IDat>   <fctr>    <fctr>   <int>      <IDat> ## 1:     2021-04-06       DE       00+     149  2021-04-06 ## 2:     2021-04-07       DE       00+     312  2021-04-07 ## 3:     2021-04-08       DE       00+     424  2021-04-08 ## 4:     2021-04-09       DE       00+     288  2021-04-09 ## 5:     2021-04-10       DE       00+     273  2021-04-10 ## 6:     2021-04-11       DE       00+     107  2021-04-11 obs_data_by_reference_date <- enw_latest_data(observed_data) plot_data <- ggplot() +   geom_line(     data = obs_data_by_reference_date,     aes(x = reference_date, y = confirm), color = \"darkred\"   ) +   geom_line(     data = latest_data,     aes(x = reference_date, y = confirm), color = \"black\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time and later observed cases\") plot_data"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Getting Started with baselinenowcast","text":"order compute nowcast data, need start creating call reporting triangle. See nomenclature vignette details structure naming different components used package. entries reporting triangle represent number new cases assigned reference time point particular delay, entries bottom right triangle missing data reported longer delays yet observed recent reference times. reporting triangle used estimate delay distribution, proportion final number cases reported particular delay. example, fit delay distribution, apply generate nowcast matrix using data, national level data Germany age groups. recommend choosing maximum delay number historical observations based exploratory data analysis, specifications change significantly depending dataset. Empirical data outside delay window used training. use 3 times maximum delay total training volume. ’ll use recent 50% reference times delay estimation. uncertainty estimation, generate retrospective nowcast datasets recent 50% reference times. means order estimate delay using amount data, oldest retrospective nowcast dataset use first 50% reference times. Note uses recent observations. Next use epinowcast function, enw_filter_reference_dates() filter include n_training_volume days historical data. epinowcast function enw_latest_data() used filter latest available reported total counts reference date. obtain data want evaluate forecasts , use enw_filter_reference_dates() applied target_data, filter n_training_volume days historical data. Next obtain reporting triangle, adding additional day max_delay want max_delay + 1 entries since 0 valid delay. also validates data correct format runs preprocessing see enw_preprocess_data() details. Extract components pobs, epinowcast object. one group need reference_date, delay, new_confirm. now pivot wide format, dropping reference_date column, convert matrix format low-level functions baselinenowcast expect. , grey indicates matrix elements NA, expect case bottom right portion reporting triangle counts yet observed.","code":"max_delay <- 30 n_training_volume <- 3 * max_delay n_history_delay <- as.integer(0.5 * n_training_volume) n_retrospective_nowcasts <- as.integer(0.5 * n_training_volume) training_data <- enw_filter_reference_dates(   observed_data,   include_days = n_training_volume - 1 ) latest_training_data <- enw_latest_data(training_data) eval_data <- enw_filter_reference_dates(   latest_data,   include_days = n_training_volume - 1 ) pobs <- enw_preprocess_data(   obs = training_data,   max_delay = max_delay + 1 ) reporting_triangle_df <- select(   pobs$new_confirm[[1]],   reference_date,   delay,   new_confirm ) reporting_triangle <- reporting_triangle_df |>   pivot_wider(names_from = delay, values_from = new_confirm) |>   select(-reference_date) |>   as.matrix() triangle_df <- as.data.frame(reporting_triangle) |>   mutate(time = row_number()) |>   pivot_longer(!time,     values_to = \"count\",     names_prefix = \"V\",     names_to = \"delay\"   ) |>   mutate(delay = as.numeric(delay))  plot_triangle <- ggplot(   triangle_df,   aes(x = delay, y = time, fill = count) ) +   geom_tile() +   scale_fill_gradient(low = \"white\", high = \"blue\") +   labs(title = \"Reporting triangle\", x = \"Delay\", y = \"Time\") +   theme_bw() +   scale_y_reverse() plot_triangle"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-delay","dir":"Articles","previous_headings":"","what":"Estimate delay","title":"Getting Started with baselinenowcast","text":"Now reporting triangle, now ready pass baselinenowcast package estimate delay distribution. tell function maximum delay number observations want use estimation. want pass reporting triangle (single group!) function. See documentation estimate_delay() full description function inputs.","code":"delay_pmf <- estimate_delay(   reporting_triangle = reporting_triangle,   max_delay = max_delay,   n = n_history_delay ) delay_df <- data.frame(   delay = 0:(length(delay_pmf) - 1),   pmf = delay_pmf )  delay_cdf_plot <- ggplot(delay_df) +   geom_line(aes(x = delay, y = cumsum(pmf))) +   xlab(\"Delay\") +   ylab(\"Cumulative proportion reported\") +   ggtitle(\"Empirical point estimate of cumulative proportion reported by delay\") + # nolint   theme_bw()  delay_pmf_plot <- ggplot(delay_df) +   geom_line(aes(x = delay, y = pmf)) +   xlab(\"Delay\") +   ylab(\"Proportion reported\") +   ggtitle(\"Empirical point estimate of proportion reported by delay\") +   theme_bw() delay_cdf_plot delay_pmf_plot"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"apply-the-delay-to-generate-a-point-nowcast","dir":"Articles","previous_headings":"","what":"Apply the delay to generate a point nowcast","title":"Getting Started with baselinenowcast","text":"next step workflow take estimated delay distribution apply partially observed reporting triangle, generating estimate number new cases confirmed reference date delay. generate point estimate complete reporting matrix. case, applying delay reporting triangle used generate estimate, doesn’t always case. See documentation apply_delay() full description input requirements. worth noting also estimated delay applied one single step calling generate_pt_nowcast_mat(). subsequent steps estimate uncertainty, delay estimation generating point nowcast matrix happen single step. ’ll make quick plot compare point estimate nowcasted confirmed cases August 1, 2021, “final” observations October 1, 2021 right-truncated data available August 1, 2021.  can see point nowcast (blue) slightly underestimates eventually reported (black), decent overall job correcting right-truncation observed data nowcast date (red).","code":"point_nowcast_matrix <- apply_delay(   reporting_triangle = reporting_triangle,   delay_pmf = delay_pmf ) point_nowcast_df <- eval_data |>   mutate(nowcast = rowSums(point_nowcast_matrix))  prep_latest_data <- latest_training_data |>   mutate(type = \"Real-time data\") |>   select(type, reference_date, count = confirm) # Combine data into a single dataframe for plotting plot_data <- point_nowcast_df |>   pivot_longer(     cols = c(confirm, nowcast),     names_to = \"type\",     values_to = \"count\"   ) |>   mutate(type = case_when(     type == \"confirm\" ~ \"Final observed data\",     type == \"nowcast\" ~ \"Point nowcast\",     TRUE ~ type   )) |>   bind_rows(prep_latest_data)  # Create plot with data type as a variable plot_pt_nowcast <- ggplot(plot_data, aes(   x = reference_date,   y = count,   color = type )) +   geom_line() +   scale_color_manual(values = c(     \"Real-time data\" = \"darkred\",     \"Final observed data\" = \"black\",     \"Point nowcast\" = \"darkblue\"   )) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time, nowcasted, and later observed cases\") +   theme(legend.position = \"bottom\") +   labs(color = \"Type\") plot_pt_nowcast"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-uncertainty","dir":"Articles","previous_headings":"","what":"Estimate uncertainty","title":"Getting Started with baselinenowcast","text":"far, ’ve demonstrated generate point estimate nowcast. like generate probabilistic nowcasts. method used estimate uncertainty works generating retrospective reporting triangles using available retrospective nowcast time estimate delay distribution, generate point nowcast matrix, compare estimated counts reference time observed nowcast horizon. assumes observations follow negative binomial observation model, independently estimates dispersion negative binomial forecast horizon. repeat process n_retrospective_nowcasts reference times current reporting triangle, starting latest reference time working backwards, ultimately using n_retrospective_nowcasts n_history_delay reference times. results list retrospective reporting triangles. See documentation truncate_triangles() construct_triangles() information inputs outputs functions. Next pass list reporting triangles fill_triangles() specify n, number reference times used estimate delay nowcast, set n_history_delay previous specified. Next, use retrospective reporting triangles, point nowcast matrices, truncated reporting triangles estimate uncertainty horizon, starting horizon 0 using estimate_uncertainty() function.","code":"trunc_rep_tri_list <- truncate_triangles(reporting_triangle,   n = n_retrospective_nowcasts ) retro_rep_tri_list <- construct_triangles(trunc_rep_tri_list) retro_pt_nowcast_mat_list <- fill_triangles(   retro_reporting_triangles = retro_rep_tri_list,   n = n_history_delay ) disp_params <- estimate_uncertainty(   point_nowcast_matrices = retro_pt_nowcast_mat_list,   truncated_reporting_triangles = trunc_rep_tri_list,   retro_reporting_triangles = retro_rep_tri_list,   n = n_retrospective_nowcasts )"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"generate-probabilistic-nowcast","dir":"Articles","previous_headings":"","what":"Generate probabilistic nowcast","title":"Getting Started with baselinenowcast","text":"Now estimated dispersion, can generate probabilistic nowcast using sample_nowcasts() function : generates draws nowcast distribution combines draws observed data form single draw nowcast repeats process draws draws See documentation sample_nowcasts()details.","code":"nowcast_draws_df <- sample_nowcasts(   point_nowcast_matrix, reporting_triangle,   uncertainty_params = disp_params,   draws = 100 )  head(nowcast_draws_df) ##   pred_count time draw ## 1        736    1    1 ## 2        897    2    1 ## 3        893    3    1 ## 4        804    4    1 ## 5        722    5    1 ## 6        492    6    1"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"visualizing-the-nowcast","dir":"Articles","previous_headings":"","what":"Visualizing the nowcast","title":"Getting Started with baselinenowcast","text":"Let’s visualize nowcast compared final observed data. first need join nowcast original data can see nowcast reference date. Prepare data nowcast date, latest_training_data can map nowcast draws onto . Prepare final evaluation data can combine datasets. Join nowcasts, data nowcast date, final data. Create separate dataframe observed final data, make plotting easier.  Gray lines indicate probabilistic nowcast draws, combination already observed data reference date predicted nowcast draws reference date. Black lines show “final” data October 1, 2021.","code":"latest_data_prepped <- latest_training_data |>   mutate(time = row_number()) |>   rename(obs_confirm = confirm) |>   mutate(reference_date = as.Date(reference_date)) final_data_prepped <- eval_data |>   select(reference_date, final_confirm = confirm) |>   mutate(reference_date = as.Date(reference_date)) obs_with_nowcast_draws_df <- nowcast_draws_df |>   left_join(latest_data_prepped, by = \"time\") |>   left_join(final_data_prepped, by = \"reference_date\") head(obs_with_nowcast_draws_df) ##   pred_count time draw reference_date location age_group obs_confirm ## 1        736    1    1     2021-05-04       DE       00+         823 ## 2        897    2    1     2021-05-05       DE       00+        1028 ## 3        893    3    1     2021-05-06       DE       00+        1016 ## 4        804    4    1     2021-05-07       DE       00+         892 ## 5        722    5    1     2021-05-08       DE       00+         822 ## 6        492    6    1     2021-05-09       DE       00+         561 ##   report_date final_confirm ## 1  2021-07-24           823 ## 2  2021-07-25          1028 ## 3  2021-07-26          1016 ## 4  2021-07-27           892 ## 5  2021-07-28           822 ## 6  2021-07-29           561 combined_data <- obs_with_nowcast_draws_df |>   select(reference_date, obs_confirm, final_confirm) |>   distinct() |>   pivot_longer(     cols = c(obs_confirm, final_confirm),     names_to = \"type\",     values_to = \"count\"   ) |>   mutate(type = case_when(     type == \"obs_confirm\" ~ \"Observed data\",     type == \"final_confirm\" ~ \"Final observed data\"   )) # Plot with draws for nowcast only plot_prob_nowcast <- ggplot() +   # Add nowcast draws as thin gray lines   geom_line(     data = obs_with_nowcast_draws_df,     aes(       x = reference_date, y = pred_count, group = draw,       color = \"Nowcast draw\", linewidth = \"Nowcast draw\"     )   ) +   # Add observed data and final data once   geom_line(     data = combined_data,     aes(       x = reference_date,       y = count,       color = type,       linewidth = type     )   ) +   theme_bw() +   scale_color_manual(     values = c(       \"Nowcast draw\" = \"gray\",       \"Observed data\" = \"darkred\",       \"Final observed data\" = \"black\"     ),     name = \"\"   ) +   scale_linewidth_manual(     values = c(       \"Nowcast draw\" = 0.2,       \"Observed data\" = 1,       \"Final observed data\" = 1     ),     name = \"\"   ) +   scale_y_continuous(trans = \"log10\") +   xlab(\"Reference date\") +   ylab(\"Hospital admissions\") +   theme(legend.position = \"bottom\") +   ggtitle(\"Comparison of admissions as of the nowcast date, later observed counts, \\n and probabilistic nowcasted counts\") # nolint plot_prob_nowcast"},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Mathematical methods for baselinenowcast","text":"baselinenowcast model based reference model COVID-19 hospital admissions nowcasting challenge Germany 2021 2022[1]. Using slight variation chain ladder method[2], method uses preliminary case counts empirical delay distributions estimate yet---observed cases. Probabilistic nowcasts generated using observation model means point nowcast uncertainty estimated past nowcast errors. Users can flexibly specify data like use delay estimation uncertainty quantification, well specify parametric form observation model used uncertainty quantification. Time steps can correspond time unit. See Default Settings section full description default behaviour baselinenowcast() method.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"notation","dir":"Articles","previous_headings":"Overview","what":"Notation","title":"Mathematical methods for baselinenowcast","text":"denote \\(X_{t,d}, d = 0, \\dots, D\\) number cases occurring time \\(t\\) appear dataset delay \\(d\\). example, delay \\(d = 0\\) means case occurring day \\(t\\) arrived dataset day \\(t\\). consider cases reporting within maximum delay \\(D\\). number cases reporting time \\(t\\) delay \\(d\\) can written : \\[ X_{t, \\le d} = \\sum_{=0}^d X_{t,} \\tag{1} \\] special case “final” number reported cases time \\(t\\), denoted \\[ X_t = X_{t, \\le D} = \\sum_{=0}^D X_{t,} \\] delays \\(d < D\\) define notation \\[X_{t,>d} = \\sum_{= d+1} ^{D} X_{t,}\\] representing number cases still missing \\(d\\) delay. following use uppercase letters (\\(X_t\\)) random variables, lower case (\\(x_t\\)) corresponding observations, hats (\\(\\hat{x}_t\\)) estimated/imputed values. refer \\(X_t\\) describe random variable, \\(x_t\\) corresponding observation, \\(\\hat{x}_t\\) estimated/imputed value. matrix \\(\\mathbf{x}\\) entries \\(x_{t,d}, t = 1, \\dots, t^*, d = 1, \\dots, D\\) referred reporting matrix. description nowcasting terms used document (e.g. reporting triangle) corresponding abbreviations package, please consult nowcasting nomenclature vignette. case \\(t^*\\) corresponds present date, entries \\(t+d>t^*\\) yet observed thus still missing. available entries bottom form triangle, incomplete reporting matrix referred reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"preprocessing","dir":"Articles","previous_headings":"Overview","what":"Pre-processing of the reporting triangle","title":"Mathematical methods for baselinenowcast","text":"following steps require reporting triangle non-negative entries. practice necessarily case. instance, reporting triangle computed increments subsequent data snapshots, occasional downward corrections due data entrance issues can cause negative entries. therefore apply pre-processing step re-distribute negative entries across neighbouring cells positive entries.","code":""},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimating-the-delay-distribution-from-a-reporting-matrix","dir":"Articles","previous_headings":"Overview > Delay distribution estimation","what":"Estimating the delay distribution from a reporting matrix","title":"Mathematical methods for baselinenowcast","text":"complete reporting matrix available, estimating discrete-time delay distribution \\(\\pi_d, d = 0, \\dots, D\\) straightforward. Using last \\(N\\) rows reporting matrix \\(\\mathbf{x}\\), compute \\[ \\hat{\\pi}_d= \\frac{\\sum_{t=t^*-N+1}^{t=t^*} x_{t,d}}{\\sum_{t=t^*-N+1}^{t=t^*} x_{t}}, \\tag{2} \\] simply relative frequency delay \\(d\\) days among cases reporting matrix.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimating-the-delay-distribution-from-a-reporting-triangle","dir":"Articles","previous_headings":"Overview > Delay distribution estimation","what":"Estimating the delay distribution from a reporting triangle","title":"Mathematical methods for baselinenowcast","text":"case \\(t^*\\) present day, reporting triangle missing entries available, estimator \\(\\hat{\\pi}_d\\) (2) can evaluated discarding data last \\(D-1\\) time points. order use partial observations, use different representation delay distribution via terms form \\[ \\theta_d = \\frac{\\pi_d}{\\pi_{\\le d-1}} \\tag{3} \\] \\(d = 1, \\dots, D\\). , analogy (1) write \\[ \\pi_{\\le d-1} = \\sum_{d'=0}^{d-1} \\pi_d. \\tag{4} \\] \\(\\theta_d\\) can estimated via \\[ \\hat{\\theta}_d = \\frac{\\sum_{t=t^* - N + 1}^{t^*-d} x_{t, d}}{\\sum_{t= t^* - N + 1}^{t^*-d} x_{t, \\leq d - 1}}, \\] translated estimates \\(\\hat{\\pi}_0,..., \\hat{\\pi}_D\\) via recursion \\[ \\hat{\\pi}_{\\leq d} = (1+\\hat{\\theta}_d)\\hat{\\pi}_{\\leq d-1} \\] subject constrain \\(\\sum_{d = 0}^D \\pi_d = 1\\). note method equivalent -called chain ladder method[2], adapted notation terms reporting triangles (rather development triangles used accounting). intuition behind method relies basic assumption ratio delays complete observations equivalent ratio delays partially observed components matrix (Figure 1). Figure 1: Visual description iterative “completing” reporting triangle, relies assumption ratio delays fully observed reference times consistent ratio delays partially observed data. delay_estimate() function ingests either reporting matrix reporting triangle uses last n rows compute empirical delay probability mass function (PMF), returning simplex vector indexed starting delay 0.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"point-nowcast-generation","dir":"Articles","previous_headings":"Overview","what":"Point nowcast generation","title":"Mathematical methods for baselinenowcast","text":"now address computation point nowcast, .e., expected final case numbers \\(\\hat{x}_t, t = t^* - D + 1, t^*\\). based reporting triangle, specifically preliminary totals \\(x_{t, \\leq t^* - t}\\), estimated delay distribution, \\(\\hat{\\pi}_d, d = 0, \\dots, D\\). following denote current time \\(t^*\\) nowcast time, time \\(t = t^* - D, \\dots, t^*\\) reference time. difference \\(j = t^* - t\\) called horizon. intuitive approach, used [1] standard chain ladder technique, simply inflate current total reference time \\(t\\) inverse respective probability observation time \\(t^*\\), \\[ \\hat{x}_t =\\frac{x_{t, \\leq t^*-t}}{\\pi_{\\leq t^*-t}}. \\] , however, well-behaved cases \\(t\\) observed yet, .e., \\(x_{t, \\leq t^* - t} = 0\\). \\(\\hat{x}_t\\) likewise zero, yields problems uncertainty quantification method (see next section). Motivated Bayesian argument (see Zero-handling ) therefore use expression \\[ \\hat{x}_t = \\frac{x_{t, \\leq t^*-t} + 1 - \\pi_{\\leq t^*-t}}{\\hat{\\pi}_{\\leq t^*-t}} \\tag{5} \\] instead. yields essentially identical results large \\(x_{t, \\leq t^* - t}\\), produces positive \\(\\hat{x}_t\\) even preliminary zero values \\(x_{t, \\leq t^* - t} = 0\\). uncertainty quantification scheme require estimated totals \\(\\hat{x}_t\\), entries \\(\\hat{x}_{t,d}\\) point nowcast matrix. \\(t = t^* - D + 1, \\dots, t^*, d > t^* - t\\) obtained \\[ \\hat{x}_{t,d} = \\hat{\\pi}_d \\times \\hat{x}_t. \\] apply_delay() function ingests reporting triangle delay PMF returns point nowcast matrix “filling ” missing elements reporting triangle. generation point nowcast described schematic (Figure 2), demonstrating missing elements reporting triangle estimated can used generate point estimate final counts reference time. Figure 2: Visual description generation point nowcast matrix reporting triangle delay PMF.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"uncertainty-quantification","dir":"Articles","previous_headings":"Overview","what":"Uncertainty quantification","title":"Mathematical methods for baselinenowcast","text":"estimate uncertainty nowcasts, use nowcast errors \\(M\\) past nowcasting time points. See Default Settings details default settings used package define number \\(M\\) past nowcasting time points used.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generation-of-retrospective-reporting-triangles","dir":"Articles","previous_headings":"Overview > Uncertainty quantification","what":"Generation of retrospective reporting triangles","title":"Mathematical methods for baselinenowcast","text":"first obtain “vintage” reporting triangles raw reporting triangle (.e., pre-processing) replicate data available times \\(s^* = t^*-1, ..., t^*-M\\), .e., last \\(M\\) time points nowcasts generated. simply corresponds stepwise omission entries \\(t + d > s^*\\), \\(s^*\\) diagonal bottom left top right. pre-processing step Section Preprocessing reporting triangle applied vintage reporting triangle. can achieved stepwise manner using functions truncate_triangles() construct_triangles() return list n retrospective reporting triangles order recent oldest.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generation-of-retrospective-point-nowcast-matrices","dir":"Articles","previous_headings":"Overview > Uncertainty quantification","what":"Generation of retrospective point nowcast matrices","title":"Mathematical methods for baselinenowcast","text":"\\(M\\) vintage reporting triangles, .e., \\(s^* = t^*-1,, ..., t^*-M\\), apply method described estimate delay distribution generate point nowcast matrix using function fill_triangles(). indicate data version based, entries denoted : \\[ \\hat{x}_{t, d}(s^*) \\] \\(t = s^* - D + 1, \\dots, s^*\\) \\(d = s^* - t + 1, \\dots D\\). Note estimation based last \\(N\\) rows respective reporting triangle, must consequently contain least \\(M + N\\) rows total.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"fit-an-observation-model-to-past-nowcast-errors","dir":"Articles","previous_headings":"Overview > Uncertainty quantification","what":"Fit an observation model to past nowcast errors","title":"Mathematical methods for baselinenowcast","text":"point nowcast based reporting triangle time \\(s^*\\) can also written \\[ \\hat{x}_{t}(s^*) = x_{t, \\leq s^* - t} + \\hat{x}_{t, > s^* - t}(s^*). \\] second term associated uncertainty, first already known time \\(s^*\\). quantify uncertainty given nowcast horizon \\(0 \\leq j \\leq D\\), assemble \\(\\hat{x}_{s^* - j, > j}(s^*)\\) \\(x_{s^* - j,> j}\\) \\(s^* = t^* - M, \\dots, t^* - 1\\). default, baselinenowcast() method assumes count data can fit negative binomial observation model, though choice observation model can selected user. Assuming negative binomial observation model, observations complete, estimate overdispersion parameter \\(\\phi_j\\) negative binomial distribution \\[ X_{s^* - j, > j} \\sim \\text{NegBin}[\\hat{x}_{s^* - j, > j}(s^*), \\phi_j], \\tag{6} \\] independence assumed across different \\(s^*\\). , however, directly feasible \\(x_{s^* - j, > j}\\) yet observed time \\(t^*\\). discard instances, considerably reduce number available observations. therefore use partial observations available time \\(t^*\\) assume \\[ \\left(\\sum_{d = j + 1}^{\\min(D, t^* - s^*)} X_{s^* - j, d} \\right) \\sim \\text{NegBin}\\left[\\sum_{d = j + 1}^{\\min(D, t^* - s^*)} \\hat{x}_{s^* - j, d}, \\phi_j \\right]. (\\#eq:negbin2) \\] quantify uncertainty target quantity level, assumed, default, final count reference time, summed across reporting delays. , use constant dispersion parameter \\(\\phi_j\\) despite values fitting procedure yet incomplete justified fact negative binomial distribution closed binomial subsampling, overdispersion parameter preserved. equation (6) holds combination \\[ \\left(\\sum_{d = j + 1}^{\\min(D, t^* - s^*)} X_{s^* - j, d} \\right) \\ | \\ X_{s^* - j, > j} \\sim \\text{Bin}\\left[X_{s^* - j, > j}, \\left(\\sum_{d = j + 1}^{\\min(D, t^* - s^*)} \\pi_{d}\\right) / \\pi_{> j} \\right], \\] thus obtain (??). Estimated dispersion parameters \\(\\hat{\\phi}_0, \\dots, \\hat{\\phi}_D\\) obtained maximum likelihood estimation. estimate_uncertainty() function ingests truncated reporting triangles, retrospective reporting triangles, retrospective point nowcasts returns set uncertainty parameters corresponding specified observation model. uncertainty quantification procedure described schematically Figure 3. Figure 3: Visual description uncertainty quantification method, generates retrospective point nowcasts compares estimates later observed nowcast time.","code":""},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"predicted-probabilistic-nowcast-generation","dir":"Articles","previous_headings":"Overview > Probabilistic nowcast generation","what":"Predicted probabilistic nowcast generation","title":"Mathematical methods for baselinenowcast","text":"Predictive distributions \\(X_{t^*}, \\dots, X_{t^* - D + 1}\\) obtained generating draws observation model, case negative binomial, estimated dispersion parameters mean given predicted component point nowcasts. Specifically, set \\[ X_{t, > t^* - t} \\sim \\text{NegBin}(\\hat{x}_{t, > t^* - t}, \\phi_{t^* - t}). \\] described schematic Figure 4 depicts sampling observation model mean given sum predicted components point nowcast matrix (shaded elements bottom right). Figure 4: Visual description generation predicted probabilistic nowcasts generated via sampling observation model estimated uncertainty parameters mean given sum predicted components reference time.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"combine-with-observations-to-obtain-probabilistic-nowcasts","dir":"Articles","previous_headings":"Overview > Probabilistic nowcast generation","what":"Combine with observations to obtain probabilistic nowcasts","title":"Mathematical methods for baselinenowcast","text":"predictive distribution \\(X_{t}\\) results shifting distribution already known value \\(x_{t, \\leq t^* - t}\\), words adding right-truncated partial observed data summed across reference times predicted probabilistic nowcast components generate probabilistic nowcasts. Figure 5: Visual description combining observations probabilistic predicted nowcast components generate probabilistic nowcasts. sample_nowcasts() function ingests uncertainty parameters, reporting triangle, point nowcast matrix generates probabilistic nowcasts.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"zero-handling-approximation","dir":"Articles","previous_headings":"Overview","what":"Zero-handling strategy","title":"Mathematical methods for baselinenowcast","text":"mentioned Point nowcast generation, use modified point nowcasts deal zero values preliminary counts. motivate approach Bayesian perspective, based work [3]. end assume \\[ X_{t, \\leq d} \\ \\mid X_t \\sim \\text{Bin}\\left(X_t, \\sum_{d = 0}^d \\pi_t\\right). \\] now interested conditional expectation \\[ \\mathbb{E}(X_t \\ \\mid X_{t, \\leq d}) \\] binomial subsampling problem. derive improper prior distribution \\[ X_t \\sim \\text{DiscreteUniform}(0, 1, 2, \\dots). \\] notational simplicity readability following, substitute \\(N = X_{t}\\), \\(Y = X_{t, \\geq d}\\) \\(p = \\sum_{d = 0}^D \\pi_d\\) thus looking \\(\\mathbb{E}(N | Y = y)\\) \\(Y \\sim \\text{Bin}(N, p)\\) discrete uniform prior \\(N\\). expectation can written : \\[ \\mathbb{E}(N \\ | \\ Y = y) = \\sum_{n=0}^{\\infty}\\text{Pr}(N = n | Y = y) \\times n (\\#eq:expectation) \\] Applying Bayes Theorem \\[ \\text{Pr}(N = n \\ |\\ Y = y)  = \\frac{\\text{Pr}(Y = y \\ | \\ N = n) \\times \\text{Pr}(N=n)}{\\sum_{=0}^{\\infty}\\text{Pr}( Y = y \\ |\\ N= ) \\times \\text{Pr}(N = )}. \\] \\(\\text{Pr}(N=n)\\) constant simplifies \\[ \\text{Pr}(N = n \\ |\\ Y = y)  = \\frac{\\text{Pr}(Y = y \\ |\\ N = n)}{\\sum_{=0}^{\\infty}\\text{Pr}( Y = y \\ |\\ N= )}. \\] Now substituting probability mass function binomial distribution \\[ \\text{Pr}(Y = y\\ |\\ N = n) =\\binom{n}{y} p^y(1-p)^{n-y} \\] get \\[ \\text{Pr}(N = n \\ |\\ Y = y) = \\frac{\\binom{n}{y} p^y(1-p)^{n-y}}{\\sum_{=1}^\\infty \\binom{1}{y}p^y(1-p)^{-y}} \\] Plugging (??) get following (omitting terms \\(n<y\\), 0): \\[ \\mathbb{E}(N \\ |\\ Y = y) = \\sum_{n=y}^{\\infty}n \\frac{\\binom{n}{y} p^y(1-p)^{n-y}}{\\sum_{=y}^\\infty \\binom{}{y}p^y(1-p)^{-y}} \\] equivalent \\[ \\mathbb{E}(N \\ | \\ Y = y) =  \\frac{\\sum_{n=y}^{\\infty}n \\binom{n}{y} p^y(1-p)^{n-y}}{\\sum_{=y}^\\infty \\binom{}{y}p^y(1-p)^{-y}}. \\] numerator denominator known convergent series, solutions available standard libraries like Mathematica[4]. get \\[ \\mathbb{E}(N \\ |\\ Y = y)  = \\frac{(y + 1 -p)/p^2}{1/p} = \\frac{y + 1 - p}{p}, \\] corresponds corrected point estimate provided equation (5).","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"default-settings","dir":"Articles","previous_headings":"","what":"Default settings","title":"Mathematical methods for baselinenowcast","text":"guide practitioners, set default behaviours based maximum delay observed data. use partial reporting triangle delay estimation, derive delay estimates uncertainty estimates reporting triangle nowcasted, use three times maximum delay number (\\(V=3 \\times D\\)) reference times total training volume \\(V\\) used model (line [1]). Within step additional defaults: Delay distribution estimation: 50% reference times training volume \\(V\\) used delay estimation, \\(N\\), minimum requirement least one maximum delay. less data available, indicated user, producing error less data theoretically minimum available given modelling step. Point nowcast generation: Delay estimation occurs using reporting triangle nowcasted. Uncertainty Estimation: 50% reference times training volume \\(V\\) used retrospective point nowcast times, \\(M\\). insufficient data, method uses oldest retrospective nowcast date least amount historical data delay estimation used point nowcast current nowcast date, requires least two retrospective nowcasts containing sufficient data. default sum predicted components row across rows context specific (diverging [1]. sum week due target data rolling 7 day sum).","code":""},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kaitlyn Johnson. Author, maintainer, copyright holder. Sam Abbott. Author. Johannes Bracher. Author. Sebastian Funk. Author.","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson K, Abbott S, Bracher J, Funk S (2025). baselinenowcast: Baseline nowcast. R package version 0.0.0.1000, https://baselinenowcast.epinowcast.org.","code":"@Manual{,   title = {baselinenowcast: Baseline nowcast},   author = {Kaitlyn Johnson and Sam Abbott and Johannes Bracher and Sebastian Funk},   year = {2025},   note = {R package version 0.0.0.1000},   url = {https://baselinenowcast.epinowcast.org}, }"},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Baseline nowcast for right-truncated epidemiological data","text":"Nowcasting right-truncated epidemiological data critical timely public health decision-making, reporting delays can create misleading impressions declining trends recent data. package provides simple nowcasting methods practical use based using empirical delay distributions uncertainty past performance. also designed used baseline method developers new nowcasting methods. supports standard data frame inputs reference date, report date, count columns, compatible ‘epinowcast’ objects, also supports direct use reporting triangles. Alongside opinionated default workflow, low-level pipe-friendly modular interface, allowing context-specific workflows. can accommodate wide spectrum reporting schedules, including mixed patterns reference reporting (daily-weekly, weekly-daily). also supports sharing delay distributions uncertainty estimates strata, well custom uncertainty models delay estimation methods.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Baseline nowcast for right-truncated epidemiological data","text":"install development version GitHub (warning! version may contain breaking changes /bugs), use pak package:","code":"pak::pak(file.path(\"epinowcast\", \"baselinenowcast\"))"},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Baseline nowcast for right-truncated epidemiological data","text":"provide range documentation, case studies, community spaces ask (answer!) questions: organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use baselinenowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Baseline nowcast for right-truncated epidemiological data","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request see contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"Contributing","what":"How to make a bug report or feature request","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please briefly describe problem output expect issue. See contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"Contributing","what":"Code of Conduct","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please note baselinenowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Baseline nowcast for right-truncated epidemiological data","text":"use baselinenowcast work, please consider citing citation(\"baselinenowcast\").","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"contributions project gratefully acknowledged using allcontributors package following allcontributors specification. Contributions kind welcome!","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Baseline nowcast for right-truncated epidemiological data","text":"kaitejohnson, seabbs, TimTaylor, sbfnk","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"issue-authors","dir":"","previous_headings":"Contributors","what":"Issue Authors","title":"Baseline nowcast for right-truncated epidemiological data","text":"jonathonmellor, swo","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"issue-contributors","dir":"","previous_headings":"Contributors","what":"Issue Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"jamesmbaazam, jbracher","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/allocate_reference_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocate training volume based on combination of defaults and user-specified values for training volume for delay and uncertainty estimation. — allocate_reference_times","title":"Allocate training volume based on combination of defaults and user-specified values for training volume for delay and uncertainty estimation. — allocate_reference_times","text":"Given reporting triangle, maximum delay, optionally user-specified scale factor max delay used total reference times proportion reference times used delay estimation, allocate reference times number used delay estimation number used retrospective nowcasts uncertainty estimation. function implements algorithm : specified number reference times (scale_factor x max delay) less equal number reference times available reporting triangle, split reference times delay uncertainty according prop_delay, ensuring minimum requirements delay uncertainty estimation met. specified number reference times greater number reference times available reporting triangle, use reference times available satisfy minimum requirement delay estimation split remainder according specified prop_delay, ensuring minimum reference times delay uncertainty estimation fulfilled. function errors minimum requirements delay uncertainty estimation possible number reference times reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/allocate_reference_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocate training volume based on combination of defaults and user-specified values for training volume for delay and uncertainty estimation. — allocate_reference_times","text":"","code":"allocate_reference_times(   reporting_triangle,   max_delay = ncol(reporting_triangle) - 1,   scale_factor = 3,   prop_delay = 0.5,   n_min_retro_nowcasts = 2 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/allocate_reference_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocate training volume based on combination of defaults and user-specified values for training volume for delay and uncertainty estimation. — allocate_reference_times","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. scale_factor Numeric value indicating multiplicative factor maximum delay used estimation delay uncertainty. Default 3. prop_delay Numeric value <1 indicating proportion reference times reporting triangle used delay estimation. Default 0.5. n_min_retro_nowcasts Integer indicating minimum number reference times needed uncertainty estimation. Default 2.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/allocate_reference_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocate training volume based on combination of defaults and user-specified values for training volume for delay and uncertainty estimation. — allocate_reference_times","text":"list n_history_delay n_retrospective_nowcasts","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/allocate_reference_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allocate training volume based on combination of defaults and user-specified values for training volume for delay and uncertainty estimation. — allocate_reference_times","text":"","code":"triangle <- matrix(   c(     100, 50, 30, 20,     40, 10, 20, 5,     80, 50, 25, 10,     100, 50, 30, 20,     40, 10, 20, 5,     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 10,   byrow = TRUE ) # Use the defaults ref_time_allocation_default <- allocate_reference_times(triangle) #> Warning: 0.5 reference times were specified for delay estimation but due to #> minimum requirements had to be reallocated. #> ℹ 0.444 of reference times used for delay estimation. ref_time_allocation_default #> $n_history_delay #> [1] 4 #>  #> $n_retrospective_nowcasts #> [1] 5 #>  # Modify to use less volume and redistribute ref_time_allocation_alt <- allocate_reference_times(   reporting_triangle = triangle,   scale_factor = 2,   prop_delay = 0.6 ) #> Warning: 0.6 reference times were specified for delay estimation but due to #> minimum requirements had to be reallocated. #> ℹ 0.667 of reference times used for delay estimation. ref_time_allocation_alt #> $n_history_delay #> [1] 4 #>  #> $n_retrospective_nowcasts #> [1] 2 #>"},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the delay to generate a point nowcast — apply_delay","title":"Apply the delay to generate a point nowcast — apply_delay","text":"Generate point estimate completed reporting square (rectangle) reporting triangle want complete nowcast delay PMF. element computed taking product expected number total cases assigned reference time $t$ proportion cases reported delay $d$. formula obtain expected number total cases function reporting delay previous observations derived elsewhere. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the delay to generate a point nowcast — apply_delay","text":"","code":"apply_delay(reporting_triangle, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the delay to generate a point nowcast — apply_delay","text":"reporting_triangle Matrix reporting triangle nowcasted, rows representing time points reference columns representing delays delay_pmf Vector delays assumed indexed starting first delay column rep_mat_to_nowcast","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the delay to generate a point nowcast — apply_delay","text":"point_nowcast_matrix Matrix number rows columns rep_mat_to_nowcast missing values filled point estimates","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the delay to generate a point nowcast — apply_delay","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- estimate_delay(   reporting_triangle = triangle,   max_delay = 3,   n = 4 ) point_nowcast_matrix <- apply_delay(   reporting_triangle = triangle,   delay_pmf = delay_pmf ) print(point_nowcast_matrix) #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 17.78889 #> [4,]   80 40.00000 23.20529 15.92281 #> [5,]   70 35.24853 20.35851 13.96745"},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine observed data with a single prediction draw — combine_obs_with_pred","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"Internally sums observed counts reporting triangle reference time adds predicted counts form single draw nowcast final counts reference time.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"","code":"combine_obs_with_pred(   predicted_counts,   reporting_triangle,   ref_time_aggregator = identity,   delay_aggregator = function(x) rowSums(x, na.rm = TRUE) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"predicted_counts Vector predicted counts reference time. Note using reference time delay aggregator function, assumed already aggregated. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). ref_time_aggregator Function operates along rows (reference times) retrospective point nowcast matrix aggregated across columns (delays). Default identity aggregate across reference times. delay_aggregator Function operates along columns (delays) retrospective point nowcast matrix aggregated across reference times. Default function(x) rowSums(x, na.rm = TRUE).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"vector predicted counts reference time","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/combine_obs_with_pred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine observed data with a single prediction draw — combine_obs_with_pred","text":"","code":"pred_counts <- c(10, 20, 30, 40) reporting_matrix <- matrix(   c(     7, 9, 4, 3,     1, 2, 3, 4,     5, 6, 7, 8,     9, 10, 11, 12   ),   nrow = 4,   byrow = TRUE ) reporting_triangle <- construct_triangle(reporting_matrix) combine_obs_with_pred(pred_counts, reporting_triangle) #> [1] 33 26 41 49 # Another example with rolling sum if (requireNamespace(\"zoo\", quietly = TRUE)) {   combine_obs_with_pred(pred_counts,     reporting_triangle,     ref_time_aggregator = function(x) zoo::rollsum(x, k = 2, align = \"right\")   ) } #> Warning: longer object length is not a multiple of shorter object length #> [1] 36 34 44 66"},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single retrospective reporting triangle — construct_triangle","title":"Generate a single retrospective reporting triangle — construct_triangle","text":"function generates single reporting triangle removing bottom right observations truncated reporting triangle matrix. singular version construct_triangles().","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single retrospective reporting triangle — construct_triangle","text":"","code":"construct_triangle(truncated_reporting_triangle, structure = 1)"},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single retrospective reporting triangle — construct_triangle","text":"truncated_reporting_triangle single truncated reporting triangle. May may contain NAs. structure Integer vector specifying reporting structure. integer, divides columns evenly integer (last possibly truncated).  vector, sum must greater equal number columns. Default 1 (standard triangular structure).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single retrospective reporting triangle — construct_triangle","text":"single retrospective reporting triangle matrix NAs appropriate positions.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a single retrospective reporting triangle — construct_triangle","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, 10,     82, 42, 6, NA,     70, 90, NA, NA   ),   nrow = 7,   byrow = TRUE )  # Standard triangular structure (default) rep_tri <- construct_triangle(triangle) rep_tri #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA #> [7,]   70   NA   NA   NA  # Ragged structure with 2 columns per delay period rep_ragged <- construct_triangle(triangle, 2) rep_ragged #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   10 #> [6,]   82   42    6   NA #> [7,]   70   90   NA   NA  # Custom structure with explicit column counts rep_custom <- construct_triangle(triangle, c(1, 2)) rep_custom #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   10 #> [6,]   82   42    6   NA #> [7,]   70   NA   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate retrospective reporting triangles — construct_triangles","title":"Generate retrospective reporting triangles — construct_triangles","text":"function ingests list truncated reporting triangles iteratively generates reporting triangle available maximum reference time. operates element list order (recent retrospective nowcast time oldest retrospective nowcast time).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate retrospective reporting triangles — construct_triangles","text":"","code":"construct_triangles(truncated_reporting_triangles, structure = 1)"},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate retrospective reporting triangles — construct_triangles","text":"truncated_reporting_triangles List n truncated reporting triangle matrices many rows available given truncation. structure Integer vector specifying reporting structure. integer, divides columns evenly integer (last possibly truncated).  vector, sum must greater equal number columns. Default 1 (standard triangular structure).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate retrospective reporting triangles — construct_triangles","text":"reporting_triangles List retrospective reporting triangles, generated removing bottom right observations truncated reporting triangle matrices.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/construct_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate retrospective reporting triangles — construct_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle, n = 2) retro_rts <- construct_triangles(trunc_rts)  # With custom structure retro_rts_custom <- construct_triangles(   trunc_rts,   structure = 2 ) retro_rts_custom #> [[1]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA #>  #> [[2]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   NA #> [5,]   95   45   NA   NA #>"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-apply_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply mask to extract the elements of the matrix that are both true — .apply_mask","title":"Apply mask to extract the elements of the matrix that are both true — .apply_mask","text":"Apply mask extract elements matrix true","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-apply_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply mask to extract the elements of the matrix that are both true — .apply_mask","text":"","code":".apply_mask(mat, indices_1, indices_2)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-apply_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply mask to extract the elements of the matrix that are both true — .apply_mask","text":"mat Matrix containing elements extraction. indices_1 Matrix booleans dimensions mat. indices_2 Matrix booleans dimensions mat","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-apply_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply mask to extract the elements of the matrix that are both true — .apply_mask","text":"Matrix dimensions mat overlapping TRUE elements .","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-assign_allocation_from_ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign number of reference times to delay and uncertainty from the sizes — .assign_allocation_from_ns","title":"Assign number of reference times to delay and uncertainty from the sizes — .assign_allocation_from_ns","text":"Assign number reference times delay uncertainty sizes","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-assign_allocation_from_ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign number of reference times to delay and uncertainty from the sizes — .assign_allocation_from_ns","text":"","code":".assign_allocation_from_ns(   n_used,   n_target,   n_min_delay,   n_min_retro_nowcasts,   n_required,   prop_delay )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-assign_allocation_from_ns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign number of reference times to delay and uncertainty from the sizes — .assign_allocation_from_ns","text":"n_used Integer indicating number reference times used. n_target Integer indicating target number reference times. n_min_delay Integer indicating number needed delay estimation. n_min_retro_nowcasts Integer indicating number needed uncertainty estimation. n_required Integer indicating number need delay uncertainty prop_delay Numeric value <1 indicating proportion reference times reporting triangle used delay estimation.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-assign_allocation_from_ns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign number of reference times to delay and uncertainty from the sizes — .assign_allocation_from_ns","text":"List number reference times use delay uncertainty","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"Calculate updated rows expected nowcasted triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"","code":".calc_expectation(index, expectation, delay_prob, delay_cdf_prev, n_rows)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"index Integer indicating delay index expectation Matrix incomplete reporting matrix delay_prob Scalar probability current delay delay_cdf_prev Scalar cumulative probability previous delay n_rows Number rows expectation matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"Matrix another set entries corresponding updated values specified rows column","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_n_retro_nowcast_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the number of retrospective nowcast times that can be used after aggregating — .calc_n_retro_nowcast_times","title":"Calculate the number of retrospective nowcast times that can be used after aggregating — .calc_n_retro_nowcast_times","text":"Calculate number retrospective nowcast times can used aggregating","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_n_retro_nowcast_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the number of retrospective nowcast times that can be used after aggregating — .calc_n_retro_nowcast_times","text":"","code":".calc_n_retro_nowcast_times(   list_of_obs,   n_possible_horizons,   ref_time_aggregator = identity )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_n_retro_nowcast_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the number of retrospective nowcast times that can be used after aggregating — .calc_n_retro_nowcast_times","text":"list_of_obs List matrices truncated reporting triangles n_possible_horizons Integer indicating number horizons retrospective reporting triangle. ref_time_aggregator Function operates along rows (reference times) retrospective point nowcast matrix aggregated across columns (delays). Default identity aggregate across reference times.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_n_retro_nowcast_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the number of retrospective nowcast times that can be used after aggregating — .calc_n_retro_nowcast_times","text":"n_iters Integer indicating number iterations, number retrospective nowcast times, sufficient data aggregated used generate retrospective point nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calculate_ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate various size requirements — .calculate_ns","title":"Helper function to calculate various size requirements — .calculate_ns","text":"Helper function calculate various size requirements","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calculate_ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate various size requirements — .calculate_ns","text":"","code":".calculate_ns(   reporting_triangle,   max_delay,   scale_factor,   n_min_retro_nowcasts )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calculate_ns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to calculate various size requirements — .calculate_ns","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. scale_factor Numeric value indicating multiplicative factor maximum delay used estimation delay uncertainty. Default 3. n_min_retro_nowcasts Integer indicating minimum number reference times needed uncertainty estimation. Default 2.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calculate_ns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to calculate various size requirements — .calculate_ns","text":"list integer sizes","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_against_requirements.html","id":null,"dir":"Reference","previous_headings":"","what":"Check target size against number of reference times available and the number required — .check_against_requirements","title":"Check target size against number of reference times available and the number required — .check_against_requirements","text":"Check target size number reference times available number required","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_against_requirements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check target size against number of reference times available and the number required — .check_against_requirements","text":"","code":".check_against_requirements(   n_ref_times,   n_required,   n_target,   n_min_delay,   n_min_retro_nowcasts,   scale_factor,   max_delay )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_against_requirements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check target size against number of reference times available and the number required — .check_against_requirements","text":"n_ref_times Integer indicating number reference times available n_required Integer indicating number need delay uncertainty n_target Integer indicating target number reference times. n_min_delay Integer indicating number needed delay estimation. n_min_retro_nowcasts Integer indicating number needed uncertainty estimation. scale_factor Numeric value indicating multiplicative factor maximum delay used estimation delay uncertainty. Default 3. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_against_requirements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check target size against number of reference times available and the number required — .check_against_requirements","text":"n_used Integer indicating many reference times used","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_lhs_not_only_zeros.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if there are non-zero-values on the LHS of NAs — .check_lhs_not_only_zeros","title":"Check if there are non-zero-values on the LHS of NAs — .check_lhs_not_only_zeros","text":"Check non-zero-values LHS NAs","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_lhs_not_only_zeros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if there are non-zero-values on the LHS of NAs — .check_lhs_not_only_zeros","text":"","code":".check_lhs_not_only_zeros(mat)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_lhs_not_only_zeros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if there are non-zero-values on the LHS of NAs — .check_lhs_not_only_zeros","text":"mat Matrix check","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_lhs_not_only_zeros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if there are non-zero-values on the LHS of NAs — .check_lhs_not_only_zeros","text":"Boolean indicating whether non-zero values LHS first NA (TRUE = non-zeros, FALSE = zeros)","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if matrix has valid NA pattern — .check_na_bottom_right","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"Check matrix valid NA pattern","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"","code":".check_na_bottom_right(mat)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"mat Matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"Boolean indicating whether matrix contains NAs bottom right (TRUE bottom right, FALSE elsewhere).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_obs_and_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Check observations and predictions are compatible — .check_obs_and_pred","title":"Check observations and predictions are compatible — .check_obs_and_pred","text":"Check observations predictions compatible","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_obs_and_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check observations and predictions are compatible — .check_obs_and_pred","text":"","code":".check_obs_and_pred(obs, pred)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_obs_and_pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check observations and predictions are compatible — .check_obs_and_pred","text":"obs Matrix vector observations. pred Matrix vector predictions.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_obs_and_pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check observations and predictions are compatible — .check_obs_and_pred","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_to_filter_to_max_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the reporting triangle contains the correct number of columns for the specified maximum delay — .check_to_filter_to_max_delay","title":"Check that the reporting triangle contains the correct number of columns for the specified maximum delay — .check_to_filter_to_max_delay","text":"Check reporting triangle contains correct number columns specified maximum delay","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_to_filter_to_max_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the reporting triangle contains the correct number of columns for the specified maximum delay — .check_to_filter_to_max_delay","text":"","code":".check_to_filter_to_max_delay(triangle, max_delay)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_to_filter_to_max_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that the reporting triangle contains the correct number of columns for the specified maximum delay — .check_to_filter_to_max_delay","text":"triangle Matrix values rows indicating time points columns indicating delays. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_to_filter_to_max_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that the reporting triangle contains the correct number of columns for the specified maximum delay — .check_to_filter_to_max_delay","text":"reporting_triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-extract_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract from one matrix only elements that are missing in another — .extract_predictions","title":"Extract from one matrix only elements that are missing in another — .extract_predictions","text":"Extract one matrix elements missing another","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-extract_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract from one matrix only elements that are missing in another — .extract_predictions","text":"","code":".extract_predictions(point_nowcast_matrix, reporting_triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-extract_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract from one matrix only elements that are missing in another — .extract_predictions","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-extract_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract from one matrix only elements that are missing in another — .extract_predictions","text":"Matrix containing elements point_nowcast_matrix elements missing reporting_triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-filter_to_recent_horizons.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter to recent horizons — .filter_to_recent_horizons","title":"Filter to recent horizons — .filter_to_recent_horizons","text":"Filter recent horizons","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-filter_to_recent_horizons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter to recent horizons — .filter_to_recent_horizons","text":"","code":".filter_to_recent_horizons(mat, n_possible_horizons)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-filter_to_recent_horizons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter to recent horizons — .filter_to_recent_horizons","text":"mat Matrix containing rows n_possible_horizons Number rows want starting final row","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-filter_to_recent_horizons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter to recent horizons — .filter_to_recent_horizons","text":"bottom_matrix Matrix containing last n_possible_horizons rows matrix.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Handle negative values reporting triangle Takes reporting triangle returns matrix format input triangle, negative values reporting handled via passing subsequent days (longer delay shorter). code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"","code":".handle_neg_vals(triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Matrix positive integers negative values reporting handled via passing subsequent days delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_target_exceeds_avail.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for when target exceeds available reference times — .handle_target_exceeds_avail","title":"Helper for when target exceeds available reference times — .handle_target_exceeds_avail","text":"Helper target exceeds available reference times","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_target_exceeds_avail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for when target exceeds available reference times — .handle_target_exceeds_avail","text":"","code":".handle_target_exceeds_avail(   n_ref_times,   n_required,   n_target,   n_min_delay,   n_min_retro_nowcasts )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_target_exceeds_avail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for when target exceeds available reference times — .handle_target_exceeds_avail","text":"n_ref_times Integer indicating number reference times available n_required Integer indicating number need delay uncertainty n_target Integer indicating target number reference times. n_min_delay Integer indicating number needed delay estimation. n_min_retro_nowcasts Integer indicating number needed uncertainty estimation.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_target_exceeds_avail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper for when target exceeds available reference times — .handle_target_exceeds_avail","text":"number reference times use NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-perform_allocation_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the allocation process — .perform_allocation_process","title":"Perform the allocation process — .perform_allocation_process","text":"Perform allocation process","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-perform_allocation_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the allocation process — .perform_allocation_process","text":"","code":".perform_allocation_process(   reporting_triangle,   max_delay,   scale_factor,   prop_delay,   n_min_retro_nowcasts )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-perform_allocation_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the allocation process — .perform_allocation_process","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. scale_factor Numeric value indicating multiplicative factor maximum delay used estimation delay uncertainty. Default 3. prop_delay Numeric value <1 indicating proportion reference times reporting triangle used delay estimation. Default 0.5. n_min_retro_nowcasts Integer indicating minimum number reference times needed uncertainty estimation. Default 2.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-perform_allocation_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform the allocation process — .perform_allocation_process","text":"list reference time allocations","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-safelydoesit.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe iterator — .safelydoesit","title":"Safe iterator — .safelydoesit","text":"Safe iterator","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-safelydoesit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe iterator — .safelydoesit","text":"","code":".safelydoesit(fun)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-safelydoesit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe iterator — .safelydoesit","text":"fun Function wrap around","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-safelydoesit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe iterator — .safelydoesit","text":"Function return NULL error occurs","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"Validate triangle nowcast delay PMF together Various checks make sure reporting triangle  delay PMF passed apply_delay() formatted properly compatible.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"","code":".validate_delay_and_triangle(triangle, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"triangle Matrix values rows indicating time points columns indicating delays. delay_pmf Vector length number delays indicating probability case reported given delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_inputs_allocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to validate allocation parameters — .validate_inputs_allocation","title":"Helper function to validate allocation parameters — .validate_inputs_allocation","text":"Helper function validate allocation parameters","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_inputs_allocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to validate allocation parameters — .validate_inputs_allocation","text":"","code":".validate_inputs_allocation(scale_factor, prop_delay, n_min_retro_nowcasts)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_inputs_allocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to validate allocation parameters — .validate_inputs_allocation","text":"scale_factor Numeric value indicating multiplicative factor maximum delay used estimation delay uncertainty. Default 3. prop_delay Numeric value <1 indicating proportion reference times reporting triangle used delay estimation. Default 0.5. n_min_retro_nowcasts Integer indicating minimum number reference times needed uncertainty estimation. Default 2.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_inputs_allocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to validate allocation parameters — .validate_inputs_allocation","text":"NULL invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_inputs_uncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the specified number of reference times meets the minimum requirements — .validate_inputs_uncertainty","title":"Validate the specified number of reference times meets the minimum requirements — .validate_inputs_uncertainty","text":"Validate specified number reference times meets minimum requirements","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_inputs_uncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the specified number of reference times meets the minimum requirements — .validate_inputs_uncertainty","text":"","code":".validate_inputs_uncertainty(   n_ref_times,   n_min_delay,   n_history_delay,   n_retrospective_nowcasts,   n_min_retro_nowcasts = 2 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_inputs_uncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the specified number of reference times meets the minimum requirements — .validate_inputs_uncertainty","text":"n_ref_times Integer indicating number reference times available. n_min_delay Integer indicating minimum number reference times needed delay estimation. n_history_delay Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. n_retrospective_nowcasts Integer indicating number retrospective nowcast times use uncertainty estimation. n_min_retro_nowcasts Integer indicating minimum number reference times needed uncertainty estimation. Default 2.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_inputs_uncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the specified number of reference times meets the minimum requirements — .validate_inputs_uncertainty","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_max_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the maximum delay is not too large, error if it is — .validate_max_delay","title":"Check that the maximum delay is not too large, error if it is — .validate_max_delay","text":"Check maximum delay large, error ","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_max_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the maximum delay is not too large, error if it is — .validate_max_delay","text":"","code":".validate_max_delay(triangle, max_delay)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_max_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that the maximum delay is not too large, error if it is — .validate_max_delay","text":"triangle Matrix values rows indicating time points columns indicating delays. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_max_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that the maximum delay is not too large, error if it is — .validate_max_delay","text":"NULL invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_multiple_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the inputs to estimate_and_apply_uncertainty() to ensure that the reporting triangle, point nowcast matrix, and specified maximum delay are correct. — .validate_multiple_inputs","title":"Validate the inputs to estimate_and_apply_uncertainty() to ensure that the reporting triangle, point nowcast matrix, and specified maximum delay are correct. — .validate_multiple_inputs","text":"Validate inputs estimate_and_apply_uncertainty() ensure reporting triangle, point nowcast matrix, specified maximum delay correct.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_multiple_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the inputs to estimate_and_apply_uncertainty() to ensure that the reporting triangle, point nowcast matrix, and specified maximum delay are correct. — .validate_multiple_inputs","text":"","code":".validate_multiple_inputs(point_nowcast_matrix, reporting_triangle, max_delay)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_multiple_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the inputs to estimate_and_apply_uncertainty() to ensure that the reporting triangle, point nowcast matrix, and specified maximum delay are correct. — .validate_multiple_inputs","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_multiple_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the inputs to estimate_and_apply_uncertainty() to ensure that the reporting triangle, point nowcast matrix, and specified maximum delay are correct. — .validate_multiple_inputs","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle Various checks to make sure that the reporting triangle passed in to estimate_delay() is formatted properly. — .validate_triangle","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to estimate_delay() is formatted properly. — .validate_triangle","text":"Validate triangle Various checks make sure reporting triangle passed estimate_delay() formatted properly.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to estimate_delay() is formatted properly. — .validate_triangle","text":"","code":".validate_triangle(   triangle,   max_delay = ncol(triangle) - 1,   n = nrow(triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to estimate_delay() is formatted properly. — .validate_triangle","text":"triangle Matrix values rows indicating time points columns indicating delays. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(reporting_triangle).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to estimate_delay() is formatted properly. — .validate_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate and apply delay from a reporting triangle — estimate_and_apply_delay","title":"Estimate and apply delay from a reporting triangle — estimate_and_apply_delay","text":"Estimate apply delay reporting triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate and apply delay from a reporting triangle — estimate_and_apply_delay","text":"","code":"estimate_and_apply_delay(   reporting_triangle,   max_delay = ncol(reporting_triangle) - 1,   ... )"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate and apply delay from a reporting triangle — estimate_and_apply_delay","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. ... Additional arguments passed estimate_delay function","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate and apply delay from a reporting triangle — estimate_and_apply_delay","text":"pt_nowcast_matrix Matrix point nowcasts","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate and apply delay from a reporting triangle — estimate_and_apply_delay","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) pt_nowcast_matrix <- estimate_and_apply_delay(   reporting_triangle = triangle,   max_delay = 3,   n = 4 ) pt_nowcast_matrix #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 17.78889 #> [4,]   80 40.00000 23.20529 15.92281 #> [5,]   70 35.24853 20.35851 13.96745"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_uncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate and apply uncertainty to a point nowcast matrix — estimate_and_apply_uncertainty","title":"Estimate and apply uncertainty to a point nowcast matrix — estimate_and_apply_uncertainty","text":"Estimate apply uncertainty point nowcast matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_uncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate and apply uncertainty to a point nowcast matrix — estimate_and_apply_uncertainty","text":"","code":"estimate_and_apply_uncertainty(   point_nowcast_matrix,   reporting_triangle,   n_history_delay,   n_retrospective_nowcasts,   max_delay = ncol(reporting_triangle) - 1,   draws = 1000,   uncertainty_model = fit_by_horizon,   uncertainty_sampler = sample_nb,   ... )"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_uncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate and apply uncertainty to a point nowcast matrix — estimate_and_apply_uncertainty","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). n_history_delay Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. n_retrospective_nowcasts Integer indicating number retrospective nowcast times use uncertainty estimation. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. draws Integer indicating number draws predicted nowcast vector generate. Default 1000. uncertainty_model Function ingests matrix observations matrix predictions returns vector can used apply uncertainty using error model. Default fit_by_horizon arguments obs matrix observations pred matrix predictions fits column (horizon) negative binomial observation model default. user can specify different fitting model replacing fit_model argument fit_by_horizon. uncertainty_sampler Function ingests vector matrix predictions vector uncertainty parameters generates draws observation model. Default sample_nb expects arguments pred vector predictions uncertainty parameters corresponding vector uncertainty parameters, draws negative binomial element vector. ... Additional arguments estimate_uncertainty() sample_prediction().","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_uncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate and apply uncertainty to a point nowcast matrix — estimate_and_apply_uncertainty","text":"nowcast_draws_df Dataframe containing draws combined observations probabilistic predictions reference time.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_and_apply_uncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate and apply uncertainty to a point nowcast matrix — estimate_and_apply_uncertainty","text":"","code":"triangle <- matrix(   c(     40, 10, 20, 5,     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 6,   byrow = TRUE ) pt_nowcast_matrix <- estimate_and_apply_delay(   reporting_triangle = triangle,   n = 4 ) # Need to tell uncertainty estimator to also use 4 reference times for # delay estimation, the remaining 2 will then be used for # uncertainty estimation. nowcast_draws_df <- estimate_and_apply_uncertainty(   pt_nowcast_matrix,   triangle,   n_history_delay = 4,   n_retrospective_nowcasts = 2 ) nowcast_draws_df #>      pred_count time draw #> 1            75    1    1 #> 2           165    2    1 #> 3           200    3    1 #> 4           169    4    1 #> 5           153    5    1 #> 6           139    6    1 #> 7            75    1    2 #> 8           165    2    2 #> 9           200    3    2 #> 10          172    4    2 #> 11          154    5    2 #> 12          128    6    2 #> 13           75    1    3 #> 14          165    2    3 #> 15          200    3    3 #> 16          191    4    3 #> 17          158    5    3 #> 18          134    6    3 #> 19           75    1    4 #> 20          165    2    4 #> 21          200    3    4 #> 22          178    4    4 #> 23          161    5    4 #> 24          138    6    4 #> 25           75    1    5 #> 26          165    2    5 #> 27          200    3    5 #> 28          170    4    5 #> 29          154    5    5 #> 30          135    6    5 #> 31           75    1    6 #> 32          165    2    6 #> 33          200    3    6 #> 34          196    4    6 #> 35          160    5    6 #> 36          142    6    6 #> 37           75    1    7 #> 38          165    2    7 #> 39          200    3    7 #> 40          172    4    7 #> 41          162    5    7 #> 42          134    6    7 #> 43           75    1    8 #> 44          165    2    8 #> 45          200    3    8 #> 46          182    4    8 #> 47          168    5    8 #> 48          128    6    8 #> 49           75    1    9 #> 50          165    2    9 #> 51          200    3    9 #> 52          185    4    9 #> 53          155    5    9 #> 54          128    6    9 #> 55           75    1   10 #> 56          165    2   10 #> 57          200    3   10 #> 58          183    4   10 #> 59          163    5   10 #> 60          133    6   10 #> 61           75    1   11 #> 62          165    2   11 #> 63          200    3   11 #> 64          196    4   11 #> 65          163    5   11 #> 66          132    6   11 #> 67           75    1   12 #> 68          165    2   12 #> 69          200    3   12 #> 70          175    4   12 #> 71          151    5   12 #> 72          141    6   12 #> 73           75    1   13 #> 74          165    2   13 #> 75          200    3   13 #> 76          187    4   13 #> 77          150    5   13 #> 78          152    6   13 #> 79           75    1   14 #> 80          165    2   14 #> 81          200    3   14 #> 82          166    4   14 #> 83          153    5   14 #> 84          160    6   14 #> 85           75    1   15 #> 86          165    2   15 #> 87          200    3   15 #> 88          184    4   15 #> 89          159    5   15 #> 90          148    6   15 #> 91           75    1   16 #> 92          165    2   16 #> 93          200    3   16 #> 94          166    4   16 #> 95          171    5   16 #> 96          152    6   16 #> 97           75    1   17 #> 98          165    2   17 #> 99          200    3   17 #> 100         179    4   17 #> 101         162    5   17 #> 102         125    6   17 #> 103          75    1   18 #> 104         165    2   18 #> 105         200    3   18 #> 106         173    4   18 #> 107         157    5   18 #> 108         133    6   18 #> 109          75    1   19 #> 110         165    2   19 #> 111         200    3   19 #> 112         172    4   19 #> 113         147    5   19 #> 114         149    6   19 #> 115          75    1   20 #> 116         165    2   20 #> 117         200    3   20 #> 118         179    4   20 #> 119         168    5   20 #> 120         141    6   20 #> 121          75    1   21 #> 122         165    2   21 #> 123         200    3   21 #> 124         178    4   21 #> 125         156    5   21 #> 126         120    6   21 #> 127          75    1   22 #> 128         165    2   22 #> 129         200    3   22 #> 130         183    4   22 #> 131         143    5   22 #> 132         137    6   22 #> 133          75    1   23 #> 134         165    2   23 #> 135         200    3   23 #> 136         187    4   23 #> 137         160    5   23 #> 138         137    6   23 #> 139          75    1   24 #> 140         165    2   24 #> 141         200    3   24 #> 142         177    4   24 #> 143         150    5   24 #> 144         135    6   24 #> 145          75    1   25 #> 146         165    2   25 #> 147         200    3   25 #> 148         189    4   25 #> 149         155    5   25 #> 150         151    6   25 #> 151          75    1   26 #> 152         165    2   26 #> 153         200    3   26 #> 154         180    4   26 #> 155         173    5   26 #> 156         152    6   26 #> 157          75    1   27 #> 158         165    2   27 #> 159         200    3   27 #> 160         178    4   27 #> 161         156    5   27 #> 162         142    6   27 #> 163          75    1   28 #> 164         165    2   28 #> 165         200    3   28 #> 166         167    4   28 #> 167         153    5   28 #> 168         130    6   28 #> 169          75    1   29 #> 170         165    2   29 #> 171         200    3   29 #> 172         174    4   29 #> 173         150    5   29 #> 174         141    6   29 #> 175          75    1   30 #> 176         165    2   30 #> 177         200    3   30 #> 178         170    4   30 #> 179         159    5   30 #> 180         143    6   30 #> 181          75    1   31 #> 182         165    2   31 #> 183         200    3   31 #> 184         168    4   31 #> 185         155    5   31 #> 186         134    6   31 #> 187          75    1   32 #> 188         165    2   32 #> 189         200    3   32 #> 190         176    4   32 #> 191         165    5   32 #> 192         147    6   32 #> 193          75    1   33 #> 194         165    2   33 #> 195         200    3   33 #> 196         173    4   33 #> 197         158    5   33 #> 198         141    6   33 #> 199          75    1   34 #> 200         165    2   34 #> 201         200    3   34 #> 202         181    4   34 #> 203         152    5   34 #> 204         136    6   34 #> 205          75    1   35 #> 206         165    2   35 #> 207         200    3   35 #> 208         175    4   35 #> 209         150    5   35 #> 210         130    6   35 #> 211          75    1   36 #> 212         165    2   36 #> 213         200    3   36 #> 214         180    4   36 #> 215         158    5   36 #> 216         121    6   36 #> 217          75    1   37 #> 218         165    2   37 #> 219         200    3   37 #> 220         188    4   37 #> 221         175    5   37 #> 222         147    6   37 #> 223          75    1   38 #> 224         165    2   38 #> 225         200    3   38 #> 226         174    4   38 #> 227         148    5   38 #> 228         149    6   38 #> 229          75    1   39 #> 230         165    2   39 #> 231         200    3   39 #> 232         175    4   39 #> 233         144    5   39 #> 234         124    6   39 #> 235          75    1   40 #> 236         165    2   40 #> 237         200    3   40 #> 238         203    4   40 #> 239         156    5   40 #> 240         142    6   40 #> 241          75    1   41 #> 242         165    2   41 #> 243         200    3   41 #> 244         179    4   41 #> 245         165    5   41 #> 246         123    6   41 #> 247          75    1   42 #> 248         165    2   42 #> 249         200    3   42 #> 250         179    4   42 #> 251         162    5   42 #> 252         149    6   42 #> 253          75    1   43 #> 254         165    2   43 #> 255         200    3   43 #> 256         174    4   43 #> 257         159    5   43 #> 258         143    6   43 #> 259          75    1   44 #> 260         165    2   44 #> 261         200    3   44 #> 262         182    4   44 #> 263         160    5   44 #> 264         149    6   44 #> 265          75    1   45 #> 266         165    2   45 #> 267         200    3   45 #> 268         168    4   45 #> 269         157    5   45 #> 270         141    6   45 #> 271          75    1   46 #> 272         165    2   46 #> 273         200    3   46 #> 274         174    4   46 #> 275         156    5   46 #> 276         141    6   46 #> 277          75    1   47 #> 278         165    2   47 #> 279         200    3   47 #> 280         179    4   47 #> 281         167    5   47 #> 282         135    6   47 #> 283          75    1   48 #> 284         165    2   48 #> 285         200    3   48 #> 286         174    4   48 #> 287         158    5   48 #> 288         134    6   48 #> 289          75    1   49 #> 290         165    2   49 #> 291         200    3   49 #> 292         178    4   49 #> 293         171    5   49 #> 294         124    6   49 #> 295          75    1   50 #> 296         165    2   50 #> 297         200    3   50 #> 298         167    4   50 #> 299         154    5   50 #> 300         136    6   50 #> 301          75    1   51 #> 302         165    2   51 #> 303         200    3   51 #> 304         171    4   51 #> 305         151    5   51 #> 306         130    6   51 #> 307          75    1   52 #> 308         165    2   52 #> 309         200    3   52 #> 310         179    4   52 #> 311         164    5   52 #> 312         151    6   52 #> 313          75    1   53 #> 314         165    2   53 #> 315         200    3   53 #> 316         174    4   53 #> 317         154    5   53 #> 318         148    6   53 #> 319          75    1   54 #> 320         165    2   54 #> 321         200    3   54 #> 322         183    4   54 #> 323         153    5   54 #> 324         118    6   54 #> 325          75    1   55 #> 326         165    2   55 #> 327         200    3   55 #> 328         187    4   55 #> 329         151    5   55 #> 330         152    6   55 #> 331          75    1   56 #> 332         165    2   56 #> 333         200    3   56 #> 334         171    4   56 #> 335         157    5   56 #> 336         155    6   56 #> 337          75    1   57 #> 338         165    2   57 #> 339         200    3   57 #> 340         185    4   57 #> 341         164    5   57 #> 342         146    6   57 #> 343          75    1   58 #> 344         165    2   58 #> 345         200    3   58 #> 346         175    4   58 #> 347         155    5   58 #> 348         142    6   58 #> 349          75    1   59 #> 350         165    2   59 #> 351         200    3   59 #> 352         189    4   59 #> 353         158    5   59 #> 354         135    6   59 #> 355          75    1   60 #> 356         165    2   60 #> 357         200    3   60 #> 358         174    4   60 #> 359         161    5   60 #> 360         141    6   60 #> 361          75    1   61 #> 362         165    2   61 #> 363         200    3   61 #> 364         172    4   61 #> 365         167    5   61 #> 366         146    6   61 #> 367          75    1   62 #> 368         165    2   62 #> 369         200    3   62 #> 370         180    4   62 #> 371         152    5   62 #> 372         133    6   62 #> 373          75    1   63 #> 374         165    2   63 #> 375         200    3   63 #> 376         172    4   63 #> 377         161    5   63 #> 378         153    6   63 #> 379          75    1   64 #> 380         165    2   64 #> 381         200    3   64 #> 382         166    4   64 #> 383         160    5   64 #> 384         132    6   64 #> 385          75    1   65 #> 386         165    2   65 #> 387         200    3   65 #> 388         185    4   65 #> 389         156    5   65 #> 390         149    6   65 #> 391          75    1   66 #> 392         165    2   66 #> 393         200    3   66 #> 394         168    4   66 #> 395         160    5   66 #> 396         143    6   66 #> 397          75    1   67 #> 398         165    2   67 #> 399         200    3   67 #> 400         179    4   67 #> 401         159    5   67 #> 402         142    6   67 #> 403          75    1   68 #> 404         165    2   68 #> 405         200    3   68 #> 406         171    4   68 #> 407         160    5   68 #> 408         147    6   68 #> 409          75    1   69 #> 410         165    2   69 #> 411         200    3   69 #> 412         174    4   69 #> 413         157    5   69 #> 414         143    6   69 #> 415          75    1   70 #> 416         165    2   70 #> 417         200    3   70 #> 418         191    4   70 #> 419         168    5   70 #> 420         142    6   70 #> 421          75    1   71 #> 422         165    2   71 #> 423         200    3   71 #> 424         177    4   71 #> 425         156    5   71 #> 426         141    6   71 #> 427          75    1   72 #> 428         165    2   72 #> 429         200    3   72 #> 430         187    4   72 #> 431         153    5   72 #> 432         135    6   72 #> 433          75    1   73 #> 434         165    2   73 #> 435         200    3   73 #> 436         183    4   73 #> 437         167    5   73 #> 438         127    6   73 #> 439          75    1   74 #> 440         165    2   74 #> 441         200    3   74 #> 442         174    4   74 #> 443         157    5   74 #> 444         147    6   74 #> 445          75    1   75 #> 446         165    2   75 #> 447         200    3   75 #> 448         171    4   75 #> 449         167    5   75 #> 450         151    6   75 #> 451          75    1   76 #> 452         165    2   76 #> 453         200    3   76 #> 454         182    4   76 #> 455         161    5   76 #> 456         131    6   76 #> 457          75    1   77 #> 458         165    2   77 #> 459         200    3   77 #> 460         171    4   77 #> 461         154    5   77 #> 462         140    6   77 #> 463          75    1   78 #> 464         165    2   78 #> 465         200    3   78 #> 466         171    4   78 #> 467         160    5   78 #> 468         139    6   78 #> 469          75    1   79 #> 470         165    2   79 #> 471         200    3   79 #> 472         185    4   79 #> 473         167    5   79 #> 474         150    6   79 #> 475          75    1   80 #> 476         165    2   80 #> 477         200    3   80 #> 478         180    4   80 #> 479         163    5   80 #> 480         134    6   80 #> 481          75    1   81 #> 482         165    2   81 #> 483         200    3   81 #> 484         187    4   81 #> 485         158    5   81 #> 486         140    6   81 #> 487          75    1   82 #> 488         165    2   82 #> 489         200    3   82 #> 490         173    4   82 #> 491         148    5   82 #> 492         138    6   82 #> 493          75    1   83 #> 494         165    2   83 #> 495         200    3   83 #> 496         180    4   83 #> 497         161    5   83 #> 498         149    6   83 #> 499          75    1   84 #> 500         165    2   84 #> 501         200    3   84 #> 502         174    4   84 #> 503         157    5   84 #> 504         146    6   84 #> 505          75    1   85 #> 506         165    2   85 #> 507         200    3   85 #> 508         177    4   85 #> 509         157    5   85 #> 510         139    6   85 #> 511          75    1   86 #> 512         165    2   86 #> 513         200    3   86 #> 514         176    4   86 #> 515         159    5   86 #> 516         134    6   86 #> 517          75    1   87 #> 518         165    2   87 #> 519         200    3   87 #> 520         169    4   87 #> 521         168    5   87 #> 522         144    6   87 #> 523          75    1   88 #> 524         165    2   88 #> 525         200    3   88 #> 526         180    4   88 #> 527         158    5   88 #> 528         148    6   88 #> 529          75    1   89 #> 530         165    2   89 #> 531         200    3   89 #> 532         171    4   89 #> 533         164    5   89 #> 534         147    6   89 #> 535          75    1   90 #> 536         165    2   90 #> 537         200    3   90 #> 538         172    4   90 #> 539         161    5   90 #> 540         126    6   90 #> 541          75    1   91 #> 542         165    2   91 #> 543         200    3   91 #> 544         173    4   91 #> 545         155    5   91 #> 546         140    6   91 #> 547          75    1   92 #> 548         165    2   92 #> 549         200    3   92 #> 550         181    4   92 #> 551         157    5   92 #> 552         135    6   92 #> 553          75    1   93 #> 554         165    2   93 #> 555         200    3   93 #> 556         173    4   93 #> 557         155    5   93 #> 558         144    6   93 #> 559          75    1   94 #> 560         165    2   94 #> 561         200    3   94 #> 562         175    4   94 #> 563         164    5   94 #> 564         160    6   94 #> 565          75    1   95 #> 566         165    2   95 #> 567         200    3   95 #> 568         170    4   95 #> 569         165    5   95 #> 570         159    6   95 #> 571          75    1   96 #> 572         165    2   96 #> 573         200    3   96 #> 574         169    4   96 #> 575         165    5   96 #> 576         138    6   96 #> 577          75    1   97 #> 578         165    2   97 #> 579         200    3   97 #> 580         177    4   97 #> 581         162    5   97 #> 582         143    6   97 #> 583          75    1   98 #> 584         165    2   98 #> 585         200    3   98 #> 586         172    4   98 #> 587         167    5   98 #> 588         148    6   98 #> 589          75    1   99 #> 590         165    2   99 #> 591         200    3   99 #> 592         183    4   99 #> 593         163    5   99 #> 594         137    6   99 #> 595          75    1  100 #> 596         165    2  100 #> 597         200    3  100 #> 598         182    4  100 #> 599         156    5  100 #> 600         141    6  100 #> 601          75    1  101 #> 602         165    2  101 #> 603         200    3  101 #> 604         173    4  101 #> 605         162    5  101 #> 606         140    6  101 #> 607          75    1  102 #> 608         165    2  102 #> 609         200    3  102 #> 610         168    4  102 #> 611         164    5  102 #> 612         149    6  102 #> 613          75    1  103 #> 614         165    2  103 #> 615         200    3  103 #> 616         176    4  103 #> 617         165    5  103 #> 618         139    6  103 #> 619          75    1  104 #> 620         165    2  104 #> 621         200    3  104 #> 622         191    4  104 #> 623         162    5  104 #> 624         128    6  104 #> 625          75    1  105 #> 626         165    2  105 #> 627         200    3  105 #> 628         179    4  105 #> 629         153    5  105 #> 630         140    6  105 #> 631          75    1  106 #> 632         165    2  106 #> 633         200    3  106 #> 634         169    4  106 #> 635         169    5  106 #> 636         147    6  106 #> 637          75    1  107 #> 638         165    2  107 #> 639         200    3  107 #> 640         190    4  107 #> 641         173    5  107 #> 642         151    6  107 #> 643          75    1  108 #> 644         165    2  108 #> 645         200    3  108 #> 646         172    4  108 #> 647         159    5  108 #> 648         135    6  108 #> 649          75    1  109 #> 650         165    2  109 #> 651         200    3  109 #> 652         187    4  109 #> 653         168    5  109 #> 654         134    6  109 #> 655          75    1  110 #> 656         165    2  110 #> 657         200    3  110 #> 658         178    4  110 #> 659         166    5  110 #> 660         139    6  110 #> 661          75    1  111 #> 662         165    2  111 #> 663         200    3  111 #> 664         173    4  111 #> 665         146    5  111 #> 666         141    6  111 #> 667          75    1  112 #> 668         165    2  112 #> 669         200    3  112 #> 670         174    4  112 #> 671         155    5  112 #> 672         135    6  112 #> 673          75    1  113 #> 674         165    2  113 #> 675         200    3  113 #> 676         171    4  113 #> 677         169    5  113 #> 678         146    6  113 #> 679          75    1  114 #> 680         165    2  114 #> 681         200    3  114 #> 682         170    4  114 #> 683         162    5  114 #> 684         143    6  114 #> 685          75    1  115 #> 686         165    2  115 #> 687         200    3  115 #> 688         170    4  115 #> 689         160    5  115 #> 690         130    6  115 #> 691          75    1  116 #> 692         165    2  116 #> 693         200    3  116 #> 694         172    4  116 #> 695         163    5  116 #> 696         145    6  116 #> 697          75    1  117 #> 698         165    2  117 #> 699         200    3  117 #> 700         175    4  117 #> 701         157    5  117 #> 702         133    6  117 #> 703          75    1  118 #> 704         165    2  118 #> 705         200    3  118 #> 706         174    4  118 #> 707         160    5  118 #> 708         130    6  118 #> 709          75    1  119 #> 710         165    2  119 #> 711         200    3  119 #> 712         187    4  119 #> 713         170    5  119 #> 714         145    6  119 #> 715          75    1  120 #> 716         165    2  120 #> 717         200    3  120 #> 718         171    4  120 #> 719         153    5  120 #> 720         136    6  120 #> 721          75    1  121 #> 722         165    2  121 #> 723         200    3  121 #> 724         180    4  121 #> 725         165    5  121 #> 726         148    6  121 #> 727          75    1  122 #> 728         165    2  122 #> 729         200    3  122 #> 730         187    4  122 #> 731         156    5  122 #> 732         143    6  122 #> 733          75    1  123 #> 734         165    2  123 #> 735         200    3  123 #> 736         171    4  123 #> 737         168    5  123 #> 738         150    6  123 #> 739          75    1  124 #> 740         165    2  124 #> 741         200    3  124 #> 742         173    4  124 #> 743         153    5  124 #> 744         131    6  124 #> 745          75    1  125 #> 746         165    2  125 #> 747         200    3  125 #> 748         178    4  125 #> 749         161    5  125 #> 750         155    6  125 #> 751          75    1  126 #> 752         165    2  126 #> 753         200    3  126 #> 754         180    4  126 #> 755         162    5  126 #> 756         140    6  126 #> 757          75    1  127 #> 758         165    2  127 #> 759         200    3  127 #> 760         185    4  127 #> 761         165    5  127 #> 762         143    6  127 #> 763          75    1  128 #> 764         165    2  128 #> 765         200    3  128 #> 766         173    4  128 #> 767         162    5  128 #> 768         144    6  128 #> 769          75    1  129 #> 770         165    2  129 #> 771         200    3  129 #> 772         179    4  129 #> 773         154    5  129 #> 774         132    6  129 #> 775          75    1  130 #> 776         165    2  130 #> 777         200    3  130 #> 778         175    4  130 #> 779         162    5  130 #> 780         141    6  130 #> 781          75    1  131 #> 782         165    2  131 #> 783         200    3  131 #> 784         197    4  131 #> 785         145    5  131 #> 786         149    6  131 #> 787          75    1  132 #> 788         165    2  132 #> 789         200    3  132 #> 790         179    4  132 #> 791         161    5  132 #> 792         130    6  132 #> 793          75    1  133 #> 794         165    2  133 #> 795         200    3  133 #> 796         167    4  133 #> 797         160    5  133 #> 798         136    6  133 #> 799          75    1  134 #> 800         165    2  134 #> 801         200    3  134 #> 802         175    4  134 #> 803         159    5  134 #> 804         140    6  134 #> 805          75    1  135 #> 806         165    2  135 #> 807         200    3  135 #> 808         168    4  135 #> 809         157    5  135 #> 810         125    6  135 #> 811          75    1  136 #> 812         165    2  136 #> 813         200    3  136 #> 814         167    4  136 #> 815         171    5  136 #> 816         142    6  136 #> 817          75    1  137 #> 818         165    2  137 #> 819         200    3  137 #> 820         174    4  137 #> 821         149    5  137 #> 822         138    6  137 #> 823          75    1  138 #> 824         165    2  138 #> 825         200    3  138 #> 826         174    4  138 #> 827         148    5  138 #> 828         143    6  138 #> 829          75    1  139 #> 830         165    2  139 #> 831         200    3  139 #> 832         167    4  139 #> 833         161    5  139 #> 834         136    6  139 #> 835          75    1  140 #> 836         165    2  140 #> 837         200    3  140 #> 838         189    4  140 #> 839         169    5  140 #> 840         140    6  140 #> 841          75    1  141 #> 842         165    2  141 #> 843         200    3  141 #> 844         180    4  141 #> 845         163    5  141 #> 846         140    6  141 #> 847          75    1  142 #> 848         165    2  142 #> 849         200    3  142 #> 850         188    4  142 #> 851         156    5  142 #> 852         147    6  142 #> 853          75    1  143 #> 854         165    2  143 #> 855         200    3  143 #> 856         172    4  143 #> 857         158    5  143 #> 858         137    6  143 #> 859          75    1  144 #> 860         165    2  144 #> 861         200    3  144 #> 862         175    4  144 #> 863         168    5  144 #> 864         130    6  144 #> 865          75    1  145 #> 866         165    2  145 #> 867         200    3  145 #> 868         186    4  145 #> 869         160    5  145 #> 870         141    6  145 #> 871          75    1  146 #> 872         165    2  146 #> 873         200    3  146 #> 874         182    4  146 #> 875         175    5  146 #> 876         143    6  146 #> 877          75    1  147 #> 878         165    2  147 #> 879         200    3  147 #> 880         175    4  147 #> 881         166    5  147 #> 882         125    6  147 #> 883          75    1  148 #> 884         165    2  148 #> 885         200    3  148 #> 886         184    4  148 #> 887         178    5  148 #> 888         141    6  148 #> 889          75    1  149 #> 890         165    2  149 #> 891         200    3  149 #> 892         181    4  149 #> 893         155    5  149 #> 894         137    6  149 #> 895          75    1  150 #> 896         165    2  150 #> 897         200    3  150 #> 898         175    4  150 #> 899         149    5  150 #> 900         129    6  150 #> 901          75    1  151 #> 902         165    2  151 #> 903         200    3  151 #> 904         170    4  151 #> 905         149    5  151 #> 906         148    6  151 #> 907          75    1  152 #> 908         165    2  152 #> 909         200    3  152 #> 910         184    4  152 #> 911         157    5  152 #> 912         141    6  152 #> 913          75    1  153 #> 914         165    2  153 #> 915         200    3  153 #> 916         184    4  153 #> 917         153    5  153 #> 918         141    6  153 #> 919          75    1  154 #> 920         165    2  154 #> 921         200    3  154 #> 922         168    4  154 #> 923         154    5  154 #> 924         146    6  154 #> 925          75    1  155 #> 926         165    2  155 #> 927         200    3  155 #> 928         179    4  155 #> 929         165    5  155 #> 930         143    6  155 #> 931          75    1  156 #> 932         165    2  156 #> 933         200    3  156 #> 934         181    4  156 #> 935         153    5  156 #> 936         137    6  156 #> 937          75    1  157 #> 938         165    2  157 #> 939         200    3  157 #> 940         177    4  157 #> 941         159    5  157 #> 942         134    6  157 #> 943          75    1  158 #> 944         165    2  158 #> 945         200    3  158 #> 946         173    4  158 #> 947         158    5  158 #> 948         153    6  158 #> 949          75    1  159 #> 950         165    2  159 #> 951         200    3  159 #> 952         169    4  159 #> 953         149    5  159 #> 954         147    6  159 #> 955          75    1  160 #> 956         165    2  160 #> 957         200    3  160 #> 958         169    4  160 #> 959         151    5  160 #> 960         143    6  160 #> 961          75    1  161 #> 962         165    2  161 #> 963         200    3  161 #> 964         172    4  161 #> 965         165    5  161 #> 966         142    6  161 #> 967          75    1  162 #> 968         165    2  162 #> 969         200    3  162 #> 970         177    4  162 #> 971         159    5  162 #> 972         141    6  162 #> 973          75    1  163 #> 974         165    2  163 #> 975         200    3  163 #> 976         183    4  163 #> 977         160    5  163 #> 978         138    6  163 #> 979          75    1  164 #> 980         165    2  164 #> 981         200    3  164 #> 982         186    4  164 #> 983         167    5  164 #> 984         142    6  164 #> 985          75    1  165 #> 986         165    2  165 #> 987         200    3  165 #> 988         170    4  165 #> 989         165    5  165 #> 990         128    6  165 #> 991          75    1  166 #> 992         165    2  166 #> 993         200    3  166 #> 994         177    4  166 #> 995         150    5  166 #> 996         127    6  166 #> 997          75    1  167 #> 998         165    2  167 #> 999         200    3  167 #> 1000        171    4  167 #> 1001        151    5  167 #> 1002        124    6  167 #> 1003         75    1  168 #> 1004        165    2  168 #> 1005        200    3  168 #> 1006        178    4  168 #> 1007        167    5  168 #> 1008        136    6  168 #> 1009         75    1  169 #> 1010        165    2  169 #> 1011        200    3  169 #> 1012        179    4  169 #> 1013        155    5  169 #> 1014        129    6  169 #> 1015         75    1  170 #> 1016        165    2  170 #> 1017        200    3  170 #> 1018        172    4  170 #> 1019        151    5  170 #> 1020        139    6  170 #> 1021         75    1  171 #> 1022        165    2  171 #> 1023        200    3  171 #> 1024        179    4  171 #> 1025        162    5  171 #> 1026        126    6  171 #> 1027         75    1  172 #> 1028        165    2  172 #> 1029        200    3  172 #> 1030        185    4  172 #> 1031        163    5  172 #> 1032        128    6  172 #> 1033         75    1  173 #> 1034        165    2  173 #> 1035        200    3  173 #> 1036        166    4  173 #> 1037        157    5  173 #> 1038        142    6  173 #> 1039         75    1  174 #> 1040        165    2  174 #> 1041        200    3  174 #> 1042        172    4  174 #> 1043        158    5  174 #> 1044        146    6  174 #> 1045         75    1  175 #> 1046        165    2  175 #> 1047        200    3  175 #> 1048        181    4  175 #> 1049        151    5  175 #> 1050        141    6  175 #> 1051         75    1  176 #> 1052        165    2  176 #> 1053        200    3  176 #> 1054        180    4  176 #> 1055        154    5  176 #> 1056        142    6  176 #> 1057         75    1  177 #> 1058        165    2  177 #> 1059        200    3  177 #> 1060        180    4  177 #> 1061        161    5  177 #> 1062        148    6  177 #> 1063         75    1  178 #> 1064        165    2  178 #> 1065        200    3  178 #> 1066        180    4  178 #> 1067        161    5  178 #> 1068        147    6  178 #> 1069         75    1  179 #> 1070        165    2  179 #> 1071        200    3  179 #> 1072        168    4  179 #> 1073        152    5  179 #> 1074        125    6  179 #> 1075         75    1  180 #> 1076        165    2  180 #> 1077        200    3  180 #> 1078        177    4  180 #> 1079        158    5  180 #> 1080        149    6  180 #> 1081         75    1  181 #> 1082        165    2  181 #> 1083        200    3  181 #> 1084        180    4  181 #> 1085        157    5  181 #> 1086        167    6  181 #> 1087         75    1  182 #> 1088        165    2  182 #> 1089        200    3  182 #> 1090        178    4  182 #> 1091        155    5  182 #> 1092        136    6  182 #> 1093         75    1  183 #> 1094        165    2  183 #> 1095        200    3  183 #> 1096        169    4  183 #> 1097        150    5  183 #> 1098        146    6  183 #> 1099         75    1  184 #> 1100        165    2  184 #> 1101        200    3  184 #> 1102        174    4  184 #> 1103        155    5  184 #> 1104        123    6  184 #> 1105         75    1  185 #> 1106        165    2  185 #> 1107        200    3  185 #> 1108        186    4  185 #> 1109        158    5  185 #> 1110        142    6  185 #> 1111         75    1  186 #> 1112        165    2  186 #> 1113        200    3  186 #> 1114        175    4  186 #> 1115        163    5  186 #> 1116        134    6  186 #> 1117         75    1  187 #> 1118        165    2  187 #> 1119        200    3  187 #> 1120        174    4  187 #> 1121        162    5  187 #> 1122        141    6  187 #> 1123         75    1  188 #> 1124        165    2  188 #> 1125        200    3  188 #> 1126        185    4  188 #> 1127        160    5  188 #> 1128        140    6  188 #> 1129         75    1  189 #> 1130        165    2  189 #> 1131        200    3  189 #> 1132        177    4  189 #> 1133        164    5  189 #> 1134        135    6  189 #> 1135         75    1  190 #> 1136        165    2  190 #> 1137        200    3  190 #> 1138        180    4  190 #> 1139        166    5  190 #> 1140        143    6  190 #> 1141         75    1  191 #> 1142        165    2  191 #> 1143        200    3  191 #> 1144        178    4  191 #> 1145        156    5  191 #> 1146        159    6  191 #> 1147         75    1  192 #> 1148        165    2  192 #> 1149        200    3  192 #> 1150        180    4  192 #> 1151        158    5  192 #> 1152        156    6  192 #> 1153         75    1  193 #> 1154        165    2  193 #> 1155        200    3  193 #> 1156        181    4  193 #> 1157        160    5  193 #> 1158        149    6  193 #> 1159         75    1  194 #> 1160        165    2  194 #> 1161        200    3  194 #> 1162        175    4  194 #> 1163        158    5  194 #> 1164        130    6  194 #> 1165         75    1  195 #> 1166        165    2  195 #> 1167        200    3  195 #> 1168        173    4  195 #> 1169        162    5  195 #> 1170        159    6  195 #> 1171         75    1  196 #> 1172        165    2  196 #> 1173        200    3  196 #> 1174        173    4  196 #> 1175        154    5  196 #> 1176        145    6  196 #> 1177         75    1  197 #> 1178        165    2  197 #> 1179        200    3  197 #> 1180        177    4  197 #> 1181        148    5  197 #> 1182        138    6  197 #> 1183         75    1  198 #> 1184        165    2  198 #> 1185        200    3  198 #> 1186        175    4  198 #> 1187        153    5  198 #> 1188        135    6  198 #> 1189         75    1  199 #> 1190        165    2  199 #> 1191        200    3  199 #> 1192        180    4  199 #> 1193        155    5  199 #> 1194        150    6  199 #> 1195         75    1  200 #> 1196        165    2  200 #> 1197        200    3  200 #> 1198        186    4  200 #> 1199        167    5  200 #> 1200        132    6  200 #> 1201         75    1  201 #> 1202        165    2  201 #> 1203        200    3  201 #> 1204        183    4  201 #> 1205        159    5  201 #> 1206        144    6  201 #> 1207         75    1  202 #> 1208        165    2  202 #> 1209        200    3  202 #> 1210        175    4  202 #> 1211        156    5  202 #> 1212        144    6  202 #> 1213         75    1  203 #> 1214        165    2  203 #> 1215        200    3  203 #> 1216        170    4  203 #> 1217        170    5  203 #> 1218        136    6  203 #> 1219         75    1  204 #> 1220        165    2  204 #> 1221        200    3  204 #> 1222        178    4  204 #> 1223        160    5  204 #> 1224        134    6  204 #> 1225         75    1  205 #> 1226        165    2  205 #> 1227        200    3  205 #> 1228        175    4  205 #> 1229        163    5  205 #> 1230        148    6  205 #> 1231         75    1  206 #> 1232        165    2  206 #> 1233        200    3  206 #> 1234        179    4  206 #> 1235        158    5  206 #> 1236        162    6  206 #> 1237         75    1  207 #> 1238        165    2  207 #> 1239        200    3  207 #> 1240        181    4  207 #> 1241        159    5  207 #> 1242        131    6  207 #> 1243         75    1  208 #> 1244        165    2  208 #> 1245        200    3  208 #> 1246        172    4  208 #> 1247        162    5  208 #> 1248        139    6  208 #> 1249         75    1  209 #> 1250        165    2  209 #> 1251        200    3  209 #> 1252        185    4  209 #> 1253        170    5  209 #> 1254        149    6  209 #> 1255         75    1  210 #> 1256        165    2  210 #> 1257        200    3  210 #> 1258        178    4  210 #> 1259        168    5  210 #> 1260        144    6  210 #> 1261         75    1  211 #> 1262        165    2  211 #> 1263        200    3  211 #> 1264        173    4  211 #> 1265        173    5  211 #> 1266        140    6  211 #> 1267         75    1  212 #> 1268        165    2  212 #> 1269        200    3  212 #> 1270        175    4  212 #> 1271        163    5  212 #> 1272        130    6  212 #> 1273         75    1  213 #> 1274        165    2  213 #> 1275        200    3  213 #> 1276        183    4  213 #> 1277        162    5  213 #> 1278        142    6  213 #> 1279         75    1  214 #> 1280        165    2  214 #> 1281        200    3  214 #> 1282        190    4  214 #> 1283        156    5  214 #> 1284        142    6  214 #> 1285         75    1  215 #> 1286        165    2  215 #> 1287        200    3  215 #> 1288        179    4  215 #> 1289        160    5  215 #> 1290        142    6  215 #> 1291         75    1  216 #> 1292        165    2  216 #> 1293        200    3  216 #> 1294        173    4  216 #> 1295        164    5  216 #> 1296        140    6  216 #> 1297         75    1  217 #> 1298        165    2  217 #> 1299        200    3  217 #> 1300        179    4  217 #> 1301        154    5  217 #> 1302        141    6  217 #> 1303         75    1  218 #> 1304        165    2  218 #> 1305        200    3  218 #> 1306        181    4  218 #> 1307        164    5  218 #> 1308        142    6  218 #> 1309         75    1  219 #> 1310        165    2  219 #> 1311        200    3  219 #> 1312        174    4  219 #> 1313        158    5  219 #> 1314        139    6  219 #> 1315         75    1  220 #> 1316        165    2  220 #> 1317        200    3  220 #> 1318        170    4  220 #> 1319        150    5  220 #> 1320        145    6  220 #> 1321         75    1  221 #> 1322        165    2  221 #> 1323        200    3  221 #> 1324        179    4  221 #> 1325        157    5  221 #> 1326        136    6  221 #> 1327         75    1  222 #> 1328        165    2  222 #> 1329        200    3  222 #> 1330        185    4  222 #> 1331        161    5  222 #> 1332        145    6  222 #> 1333         75    1  223 #> 1334        165    2  223 #> 1335        200    3  223 #> 1336        170    4  223 #> 1337        154    5  223 #> 1338        139    6  223 #> 1339         75    1  224 #> 1340        165    2  224 #> 1341        200    3  224 #> 1342        181    4  224 #> 1343        155    5  224 #> 1344        137    6  224 #> 1345         75    1  225 #> 1346        165    2  225 #> 1347        200    3  225 #> 1348        170    4  225 #> 1349        170    5  225 #> 1350        139    6  225 #> 1351         75    1  226 #> 1352        165    2  226 #> 1353        200    3  226 #> 1354        190    4  226 #> 1355        158    5  226 #> 1356        141    6  226 #> 1357         75    1  227 #> 1358        165    2  227 #> 1359        200    3  227 #> 1360        187    4  227 #> 1361        158    5  227 #> 1362        145    6  227 #> 1363         75    1  228 #> 1364        165    2  228 #> 1365        200    3  228 #> 1366        184    4  228 #> 1367        155    5  228 #> 1368        155    6  228 #> 1369         75    1  229 #> 1370        165    2  229 #> 1371        200    3  229 #> 1372        171    4  229 #> 1373        151    5  229 #> 1374        132    6  229 #> 1375         75    1  230 #> 1376        165    2  230 #> 1377        200    3  230 #> 1378        181    4  230 #> 1379        164    5  230 #> 1380        141    6  230 #> 1381         75    1  231 #> 1382        165    2  231 #> 1383        200    3  231 #> 1384        174    4  231 #> 1385        168    5  231 #> 1386        142    6  231 #> 1387         75    1  232 #> 1388        165    2  232 #> 1389        200    3  232 #> 1390        177    4  232 #> 1391        168    5  232 #> 1392        142    6  232 #> 1393         75    1  233 #> 1394        165    2  233 #> 1395        200    3  233 #> 1396        179    4  233 #> 1397        156    5  233 #> 1398        141    6  233 #> 1399         75    1  234 #> 1400        165    2  234 #> 1401        200    3  234 #> 1402        179    4  234 #> 1403        150    5  234 #> 1404        140    6  234 #> 1405         75    1  235 #> 1406        165    2  235 #> 1407        200    3  235 #> 1408        177    4  235 #> 1409        156    5  235 #> 1410        130    6  235 #> 1411         75    1  236 #> 1412        165    2  236 #> 1413        200    3  236 #> 1414        170    4  236 #> 1415        163    5  236 #> 1416        128    6  236 #> 1417         75    1  237 #> 1418        165    2  237 #> 1419        200    3  237 #> 1420        173    4  237 #> 1421        165    5  237 #> 1422        140    6  237 #> 1423         75    1  238 #> 1424        165    2  238 #> 1425        200    3  238 #> 1426        175    4  238 #> 1427        167    5  238 #> 1428        138    6  238 #> 1429         75    1  239 #> 1430        165    2  239 #> 1431        200    3  239 #> 1432        177    4  239 #> 1433        171    5  239 #> 1434        139    6  239 #> 1435         75    1  240 #> 1436        165    2  240 #> 1437        200    3  240 #> 1438        178    4  240 #> 1439        172    5  240 #> 1440        147    6  240 #> 1441         75    1  241 #> 1442        165    2  241 #> 1443        200    3  241 #> 1444        180    4  241 #> 1445        164    5  241 #> 1446        129    6  241 #> 1447         75    1  242 #> 1448        165    2  242 #> 1449        200    3  242 #> 1450        179    4  242 #> 1451        167    5  242 #> 1452        137    6  242 #> 1453         75    1  243 #> 1454        165    2  243 #> 1455        200    3  243 #> 1456        184    4  243 #> 1457        148    5  243 #> 1458        142    6  243 #> 1459         75    1  244 #> 1460        165    2  244 #> 1461        200    3  244 #> 1462        179    4  244 #> 1463        162    5  244 #> 1464        132    6  244 #> 1465         75    1  245 #> 1466        165    2  245 #> 1467        200    3  245 #> 1468        178    4  245 #> 1469        161    5  245 #> 1470        132    6  245 #> 1471         75    1  246 #> 1472        165    2  246 #> 1473        200    3  246 #> 1474        167    4  246 #> 1475        163    5  246 #> 1476        136    6  246 #> 1477         75    1  247 #> 1478        165    2  247 #> 1479        200    3  247 #> 1480        177    4  247 #> 1481        149    5  247 #> 1482        139    6  247 #> 1483         75    1  248 #> 1484        165    2  248 #> 1485        200    3  248 #> 1486        190    4  248 #> 1487        163    5  248 #> 1488        134    6  248 #> 1489         75    1  249 #> 1490        165    2  249 #> 1491        200    3  249 #> 1492        188    4  249 #> 1493        159    5  249 #> 1494        140    6  249 #> 1495         75    1  250 #> 1496        165    2  250 #> 1497        200    3  250 #> 1498        171    4  250 #> 1499        153    5  250 #> 1500        146    6  250 #> 1501         75    1  251 #> 1502        165    2  251 #> 1503        200    3  251 #> 1504        176    4  251 #> 1505        157    5  251 #> 1506        145    6  251 #> 1507         75    1  252 #> 1508        165    2  252 #> 1509        200    3  252 #> 1510        173    4  252 #> 1511        158    5  252 #> 1512        133    6  252 #> 1513         75    1  253 #> 1514        165    2  253 #> 1515        200    3  253 #> 1516        187    4  253 #> 1517        166    5  253 #> 1518        130    6  253 #> 1519         75    1  254 #> 1520        165    2  254 #> 1521        200    3  254 #> 1522        173    4  254 #> 1523        157    5  254 #> 1524        146    6  254 #> 1525         75    1  255 #> 1526        165    2  255 #> 1527        200    3  255 #> 1528        177    4  255 #> 1529        162    5  255 #> 1530        147    6  255 #> 1531         75    1  256 #> 1532        165    2  256 #> 1533        200    3  256 #> 1534        169    4  256 #> 1535        160    5  256 #> 1536        123    6  256 #> 1537         75    1  257 #> 1538        165    2  257 #> 1539        200    3  257 #> 1540        182    4  257 #> 1541        160    5  257 #> 1542        140    6  257 #> 1543         75    1  258 #> 1544        165    2  258 #> 1545        200    3  258 #> 1546        167    4  258 #> 1547        157    5  258 #> 1548        143    6  258 #> 1549         75    1  259 #> 1550        165    2  259 #> 1551        200    3  259 #> 1552        173    4  259 #> 1553        150    5  259 #> 1554        142    6  259 #> 1555         75    1  260 #> 1556        165    2  260 #> 1557        200    3  260 #> 1558        173    4  260 #> 1559        161    5  260 #> 1560        156    6  260 #> 1561         75    1  261 #> 1562        165    2  261 #> 1563        200    3  261 #> 1564        187    4  261 #> 1565        152    5  261 #> 1566        132    6  261 #> 1567         75    1  262 #> 1568        165    2  262 #> 1569        200    3  262 #> 1570        175    4  262 #> 1571        163    5  262 #> 1572        146    6  262 #> 1573         75    1  263 #> 1574        165    2  263 #> 1575        200    3  263 #> 1576        186    4  263 #> 1577        153    5  263 #> 1578        148    6  263 #> 1579         75    1  264 #> 1580        165    2  264 #> 1581        200    3  264 #> 1582        172    4  264 #> 1583        151    5  264 #> 1584        141    6  264 #> 1585         75    1  265 #> 1586        165    2  265 #> 1587        200    3  265 #> 1588        171    4  265 #> 1589        166    5  265 #> 1590        135    6  265 #> 1591         75    1  266 #> 1592        165    2  266 #> 1593        200    3  266 #> 1594        179    4  266 #> 1595        164    5  266 #> 1596        142    6  266 #> 1597         75    1  267 #> 1598        165    2  267 #> 1599        200    3  267 #> 1600        172    4  267 #> 1601        164    5  267 #> 1602        134    6  267 #> 1603         75    1  268 #> 1604        165    2  268 #> 1605        200    3  268 #> 1606        174    4  268 #> 1607        153    5  268 #> 1608        138    6  268 #> 1609         75    1  269 #> 1610        165    2  269 #> 1611        200    3  269 #> 1612        177    4  269 #> 1613        158    5  269 #> 1614        137    6  269 #> 1615         75    1  270 #> 1616        165    2  270 #> 1617        200    3  270 #> 1618        175    4  270 #> 1619        148    5  270 #> 1620        133    6  270 #> 1621         75    1  271 #> 1622        165    2  271 #> 1623        200    3  271 #> 1624        181    4  271 #> 1625        167    5  271 #> 1626        150    6  271 #> 1627         75    1  272 #> 1628        165    2  272 #> 1629        200    3  272 #> 1630        175    4  272 #> 1631        152    5  272 #> 1632        143    6  272 #> 1633         75    1  273 #> 1634        165    2  273 #> 1635        200    3  273 #> 1636        166    4  273 #> 1637        162    5  273 #> 1638        139    6  273 #> 1639         75    1  274 #> 1640        165    2  274 #> 1641        200    3  274 #> 1642        176    4  274 #> 1643        153    5  274 #> 1644        141    6  274 #> 1645         75    1  275 #> 1646        165    2  275 #> 1647        200    3  275 #> 1648        174    4  275 #> 1649        170    5  275 #> 1650        135    6  275 #> 1651         75    1  276 #> 1652        165    2  276 #> 1653        200    3  276 #> 1654        174    4  276 #> 1655        165    5  276 #> 1656        143    6  276 #> 1657         75    1  277 #> 1658        165    2  277 #> 1659        200    3  277 #> 1660        182    4  277 #> 1661        157    5  277 #> 1662        143    6  277 #> 1663         75    1  278 #> 1664        165    2  278 #> 1665        200    3  278 #> 1666        171    4  278 #> 1667        149    5  278 #> 1668        140    6  278 #> 1669         75    1  279 #> 1670        165    2  279 #> 1671        200    3  279 #> 1672        185    4  279 #> 1673        165    5  279 #> 1674        152    6  279 #> 1675         75    1  280 #> 1676        165    2  280 #> 1677        200    3  280 #> 1678        186    4  280 #> 1679        151    5  280 #> 1680        141    6  280 #> 1681         75    1  281 #> 1682        165    2  281 #> 1683        200    3  281 #> 1684        178    4  281 #> 1685        157    5  281 #> 1686        152    6  281 #> 1687         75    1  282 #> 1688        165    2  282 #> 1689        200    3  282 #> 1690        178    4  282 #> 1691        155    5  282 #> 1692        144    6  282 #> 1693         75    1  283 #> 1694        165    2  283 #> 1695        200    3  283 #> 1696        167    4  283 #> 1697        167    5  283 #> 1698        140    6  283 #> 1699         75    1  284 #> 1700        165    2  284 #> 1701        200    3  284 #> 1702        172    4  284 #> 1703        162    5  284 #> 1704        160    6  284 #> 1705         75    1  285 #> 1706        165    2  285 #> 1707        200    3  285 #> 1708        176    4  285 #> 1709        167    5  285 #> 1710        129    6  285 #> 1711         75    1  286 #> 1712        165    2  286 #> 1713        200    3  286 #> 1714        169    4  286 #> 1715        173    5  286 #> 1716        145    6  286 #> 1717         75    1  287 #> 1718        165    2  287 #> 1719        200    3  287 #> 1720        190    4  287 #> 1721        156    5  287 #> 1722        142    6  287 #> 1723         75    1  288 #> 1724        165    2  288 #> 1725        200    3  288 #> 1726        176    4  288 #> 1727        142    5  288 #> 1728        161    6  288 #> 1729         75    1  289 #> 1730        165    2  289 #> 1731        200    3  289 #> 1732        189    4  289 #> 1733        161    5  289 #> 1734        128    6  289 #> 1735         75    1  290 #> 1736        165    2  290 #> 1737        200    3  290 #> 1738        177    4  290 #> 1739        168    5  290 #> 1740        160    6  290 #> 1741         75    1  291 #> 1742        165    2  291 #> 1743        200    3  291 #> 1744        170    4  291 #> 1745        151    5  291 #> 1746        148    6  291 #> 1747         75    1  292 #> 1748        165    2  292 #> 1749        200    3  292 #> 1750        183    4  292 #> 1751        169    5  292 #> 1752        155    6  292 #> 1753         75    1  293 #> 1754        165    2  293 #> 1755        200    3  293 #> 1756        186    4  293 #> 1757        147    5  293 #> 1758        129    6  293 #> 1759         75    1  294 #> 1760        165    2  294 #> 1761        200    3  294 #> 1762        183    4  294 #> 1763        154    5  294 #> 1764        141    6  294 #> 1765         75    1  295 #> 1766        165    2  295 #> 1767        200    3  295 #> 1768        170    4  295 #> 1769        155    5  295 #> 1770        124    6  295 #> 1771         75    1  296 #> 1772        165    2  296 #> 1773        200    3  296 #> 1774        173    4  296 #> 1775        166    5  296 #> 1776        141    6  296 #> 1777         75    1  297 #> 1778        165    2  297 #> 1779        200    3  297 #> 1780        169    4  297 #> 1781        167    5  297 #> 1782        142    6  297 #> 1783         75    1  298 #> 1784        165    2  298 #> 1785        200    3  298 #> 1786        170    4  298 #> 1787        166    5  298 #> 1788        129    6  298 #> 1789         75    1  299 #> 1790        165    2  299 #> 1791        200    3  299 #> 1792        168    4  299 #> 1793        155    5  299 #> 1794        149    6  299 #> 1795         75    1  300 #> 1796        165    2  300 #> 1797        200    3  300 #> 1798        182    4  300 #> 1799        154    5  300 #> 1800        129    6  300 #> 1801         75    1  301 #> 1802        165    2  301 #> 1803        200    3  301 #> 1804        168    4  301 #> 1805        158    5  301 #> 1806        149    6  301 #> 1807         75    1  302 #> 1808        165    2  302 #> 1809        200    3  302 #> 1810        168    4  302 #> 1811        158    5  302 #> 1812        133    6  302 #> 1813         75    1  303 #> 1814        165    2  303 #> 1815        200    3  303 #> 1816        184    4  303 #> 1817        166    5  303 #> 1818        142    6  303 #> 1819         75    1  304 #> 1820        165    2  304 #> 1821        200    3  304 #> 1822        179    4  304 #> 1823        165    5  304 #> 1824        151    6  304 #> 1825         75    1  305 #> 1826        165    2  305 #> 1827        200    3  305 #> 1828        183    4  305 #> 1829        167    5  305 #> 1830        148    6  305 #> 1831         75    1  306 #> 1832        165    2  306 #> 1833        200    3  306 #> 1834        170    4  306 #> 1835        163    5  306 #> 1836        131    6  306 #> 1837         75    1  307 #> 1838        165    2  307 #> 1839        200    3  307 #> 1840        175    4  307 #> 1841        166    5  307 #> 1842        133    6  307 #> 1843         75    1  308 #> 1844        165    2  308 #> 1845        200    3  308 #> 1846        180    4  308 #> 1847        158    5  308 #> 1848        140    6  308 #> 1849         75    1  309 #> 1850        165    2  309 #> 1851        200    3  309 #> 1852        176    4  309 #> 1853        155    5  309 #> 1854        138    6  309 #> 1855         75    1  310 #> 1856        165    2  310 #> 1857        200    3  310 #> 1858        175    4  310 #> 1859        160    5  310 #> 1860        138    6  310 #> 1861         75    1  311 #> 1862        165    2  311 #> 1863        200    3  311 #> 1864        167    4  311 #> 1865        155    5  311 #> 1866        137    6  311 #> 1867         75    1  312 #> 1868        165    2  312 #> 1869        200    3  312 #> 1870        180    4  312 #> 1871        163    5  312 #> 1872        116    6  312 #> 1873         75    1  313 #> 1874        165    2  313 #> 1875        200    3  313 #> 1876        183    4  313 #> 1877        161    5  313 #> 1878        130    6  313 #> 1879         75    1  314 #> 1880        165    2  314 #> 1881        200    3  314 #> 1882        167    4  314 #> 1883        157    5  314 #> 1884        150    6  314 #> 1885         75    1  315 #> 1886        165    2  315 #> 1887        200    3  315 #> 1888        186    4  315 #> 1889        150    5  315 #> 1890        147    6  315 #> 1891         75    1  316 #> 1892        165    2  316 #> 1893        200    3  316 #> 1894        185    4  316 #> 1895        161    5  316 #> 1896        138    6  316 #> 1897         75    1  317 #> 1898        165    2  317 #> 1899        200    3  317 #> 1900        182    4  317 #> 1901        161    5  317 #> 1902        147    6  317 #> 1903         75    1  318 #> 1904        165    2  318 #> 1905        200    3  318 #> 1906        169    4  318 #> 1907        157    5  318 #> 1908        141    6  318 #> 1909         75    1  319 #> 1910        165    2  319 #> 1911        200    3  319 #> 1912        173    4  319 #> 1913        158    5  319 #> 1914        143    6  319 #> 1915         75    1  320 #> 1916        165    2  320 #> 1917        200    3  320 #> 1918        181    4  320 #> 1919        161    5  320 #> 1920        145    6  320 #> 1921         75    1  321 #> 1922        165    2  321 #> 1923        200    3  321 #> 1924        190    4  321 #> 1925        167    5  321 #> 1926        152    6  321 #> 1927         75    1  322 #> 1928        165    2  322 #> 1929        200    3  322 #> 1930        167    4  322 #> 1931        150    5  322 #> 1932        152    6  322 #> 1933         75    1  323 #> 1934        165    2  323 #> 1935        200    3  323 #> 1936        188    4  323 #> 1937        156    5  323 #> 1938        157    6  323 #> 1939         75    1  324 #> 1940        165    2  324 #> 1941        200    3  324 #> 1942        179    4  324 #> 1943        155    5  324 #> 1944        134    6  324 #> 1945         75    1  325 #> 1946        165    2  325 #> 1947        200    3  325 #> 1948        180    4  325 #> 1949        163    5  325 #> 1950        137    6  325 #> 1951         75    1  326 #> 1952        165    2  326 #> 1953        200    3  326 #> 1954        177    4  326 #> 1955        167    5  326 #> 1956        147    6  326 #> 1957         75    1  327 #> 1958        165    2  327 #> 1959        200    3  327 #> 1960        169    4  327 #> 1961        150    5  327 #> 1962        145    6  327 #> 1963         75    1  328 #> 1964        165    2  328 #> 1965        200    3  328 #> 1966        172    4  328 #> 1967        153    5  328 #> 1968        138    6  328 #> 1969         75    1  329 #> 1970        165    2  329 #> 1971        200    3  329 #> 1972        177    4  329 #> 1973        156    5  329 #> 1974        143    6  329 #> 1975         75    1  330 #> 1976        165    2  330 #> 1977        200    3  330 #> 1978        177    4  330 #> 1979        163    5  330 #> 1980        127    6  330 #> 1981         75    1  331 #> 1982        165    2  331 #> 1983        200    3  331 #> 1984        178    4  331 #> 1985        158    5  331 #> 1986        135    6  331 #> 1987         75    1  332 #> 1988        165    2  332 #> 1989        200    3  332 #> 1990        172    4  332 #> 1991        174    5  332 #> 1992        149    6  332 #> 1993         75    1  333 #> 1994        165    2  333 #> 1995        200    3  333 #> 1996        167    4  333 #> 1997        164    5  333 #> 1998        152    6  333 #> 1999         75    1  334 #> 2000        165    2  334 #> 2001        200    3  334 #> 2002        183    4  334 #> 2003        165    5  334 #> 2004        131    6  334 #> 2005         75    1  335 #> 2006        165    2  335 #> 2007        200    3  335 #> 2008        180    4  335 #> 2009        167    5  335 #> 2010        133    6  335 #> 2011         75    1  336 #> 2012        165    2  336 #> 2013        200    3  336 #> 2014        180    4  336 #> 2015        159    5  336 #> 2016        130    6  336 #> 2017         75    1  337 #> 2018        165    2  337 #> 2019        200    3  337 #> 2020        186    4  337 #> 2021        168    5  337 #> 2022        146    6  337 #> 2023         75    1  338 #> 2024        165    2  338 #> 2025        200    3  338 #> 2026        177    4  338 #> 2027        163    5  338 #> 2028        138    6  338 #> 2029         75    1  339 #> 2030        165    2  339 #> 2031        200    3  339 #> 2032        179    4  339 #> 2033        153    5  339 #> 2034        135    6  339 #> 2035         75    1  340 #> 2036        165    2  340 #> 2037        200    3  340 #> 2038        175    4  340 #> 2039        165    5  340 #> 2040        132    6  340 #> 2041         75    1  341 #> 2042        165    2  341 #> 2043        200    3  341 #> 2044        173    4  341 #> 2045        152    5  341 #> 2046        140    6  341 #> 2047         75    1  342 #> 2048        165    2  342 #> 2049        200    3  342 #> 2050        191    4  342 #> 2051        157    5  342 #> 2052        151    6  342 #> 2053         75    1  343 #> 2054        165    2  343 #> 2055        200    3  343 #> 2056        167    4  343 #> 2057        165    5  343 #> 2058        146    6  343 #> 2059         75    1  344 #> 2060        165    2  344 #> 2061        200    3  344 #> 2062        172    4  344 #> 2063        161    5  344 #> 2064        135    6  344 #> 2065         75    1  345 #> 2066        165    2  345 #> 2067        200    3  345 #> 2068        171    4  345 #> 2069        155    5  345 #> 2070        136    6  345 #> 2071         75    1  346 #> 2072        165    2  346 #> 2073        200    3  346 #> 2074        183    4  346 #> 2075        158    5  346 #> 2076        141    6  346 #> 2077         75    1  347 #> 2078        165    2  347 #> 2079        200    3  347 #> 2080        178    4  347 #> 2081        154    5  347 #> 2082        120    6  347 #> 2083         75    1  348 #> 2084        165    2  348 #> 2085        200    3  348 #> 2086        173    4  348 #> 2087        159    5  348 #> 2088        133    6  348 #> 2089         75    1  349 #> 2090        165    2  349 #> 2091        200    3  349 #> 2092        183    4  349 #> 2093        153    5  349 #> 2094        140    6  349 #> 2095         75    1  350 #> 2096        165    2  350 #> 2097        200    3  350 #> 2098        191    4  350 #> 2099        150    5  350 #> 2100        133    6  350 #> 2101         75    1  351 #> 2102        165    2  351 #> 2103        200    3  351 #> 2104        179    4  351 #> 2105        168    5  351 #> 2106        137    6  351 #> 2107         75    1  352 #> 2108        165    2  352 #> 2109        200    3  352 #> 2110        175    4  352 #> 2111        165    5  352 #> 2112        145    6  352 #> 2113         75    1  353 #> 2114        165    2  353 #> 2115        200    3  353 #> 2116        180    4  353 #> 2117        159    5  353 #> 2118        145    6  353 #> 2119         75    1  354 #> 2120        165    2  354 #> 2121        200    3  354 #> 2122        172    4  354 #> 2123        157    5  354 #> 2124        136    6  354 #> 2125         75    1  355 #> 2126        165    2  355 #> 2127        200    3  355 #> 2128        189    4  355 #> 2129        157    5  355 #> 2130        142    6  355 #> 2131         75    1  356 #> 2132        165    2  356 #> 2133        200    3  356 #> 2134        170    4  356 #> 2135        148    5  356 #> 2136        144    6  356 #> 2137         75    1  357 #> 2138        165    2  357 #> 2139        200    3  357 #> 2140        173    4  357 #> 2141        171    5  357 #> 2142        135    6  357 #> 2143         75    1  358 #> 2144        165    2  358 #> 2145        200    3  358 #> 2146        179    4  358 #> 2147        162    5  358 #> 2148        149    6  358 #> 2149         75    1  359 #> 2150        165    2  359 #> 2151        200    3  359 #> 2152        182    4  359 #> 2153        148    5  359 #> 2154        144    6  359 #> 2155         75    1  360 #> 2156        165    2  360 #> 2157        200    3  360 #> 2158        191    4  360 #> 2159        164    5  360 #> 2160        149    6  360 #> 2161         75    1  361 #> 2162        165    2  361 #> 2163        200    3  361 #> 2164        184    4  361 #> 2165        155    5  361 #> 2166        147    6  361 #> 2167         75    1  362 #> 2168        165    2  362 #> 2169        200    3  362 #> 2170        178    4  362 #> 2171        163    5  362 #> 2172        142    6  362 #> 2173         75    1  363 #> 2174        165    2  363 #> 2175        200    3  363 #> 2176        179    4  363 #> 2177        162    5  363 #> 2178        134    6  363 #> 2179         75    1  364 #> 2180        165    2  364 #> 2181        200    3  364 #> 2182        171    4  364 #> 2183        167    5  364 #> 2184        140    6  364 #> 2185         75    1  365 #> 2186        165    2  365 #> 2187        200    3  365 #> 2188        173    4  365 #> 2189        165    5  365 #> 2190        129    6  365 #> 2191         75    1  366 #> 2192        165    2  366 #> 2193        200    3  366 #> 2194        180    4  366 #> 2195        162    5  366 #> 2196        133    6  366 #> 2197         75    1  367 #> 2198        165    2  367 #> 2199        200    3  367 #> 2200        182    4  367 #> 2201        161    5  367 #> 2202        137    6  367 #> 2203         75    1  368 #> 2204        165    2  368 #> 2205        200    3  368 #> 2206        181    4  368 #> 2207        159    5  368 #> 2208        152    6  368 #> 2209         75    1  369 #> 2210        165    2  369 #> 2211        200    3  369 #> 2212        176    4  369 #> 2213        162    5  369 #> 2214        130    6  369 #> 2215         75    1  370 #> 2216        165    2  370 #> 2217        200    3  370 #> 2218        169    4  370 #> 2219        153    5  370 #> 2220        130    6  370 #> 2221         75    1  371 #> 2222        165    2  371 #> 2223        200    3  371 #> 2224        182    4  371 #> 2225        147    5  371 #> 2226        166    6  371 #> 2227         75    1  372 #> 2228        165    2  372 #> 2229        200    3  372 #> 2230        177    4  372 #> 2231        159    5  372 #> 2232        126    6  372 #> 2233         75    1  373 #> 2234        165    2  373 #> 2235        200    3  373 #> 2236        166    4  373 #> 2237        165    5  373 #> 2238        148    6  373 #> 2239         75    1  374 #> 2240        165    2  374 #> 2241        200    3  374 #> 2242        175    4  374 #> 2243        152    5  374 #> 2244        153    6  374 #> 2245         75    1  375 #> 2246        165    2  375 #> 2247        200    3  375 #> 2248        177    4  375 #> 2249        149    5  375 #> 2250        146    6  375 #> 2251         75    1  376 #> 2252        165    2  376 #> 2253        200    3  376 #> 2254        176    4  376 #> 2255        167    5  376 #> 2256        143    6  376 #> 2257         75    1  377 #> 2258        165    2  377 #> 2259        200    3  377 #> 2260        165    4  377 #> 2261        153    5  377 #> 2262        130    6  377 #> 2263         75    1  378 #> 2264        165    2  378 #> 2265        200    3  378 #> 2266        176    4  378 #> 2267        160    5  378 #> 2268        139    6  378 #> 2269         75    1  379 #> 2270        165    2  379 #> 2271        200    3  379 #> 2272        173    4  379 #> 2273        150    5  379 #> 2274        131    6  379 #> 2275         75    1  380 #> 2276        165    2  380 #> 2277        200    3  380 #> 2278        179    4  380 #> 2279        154    5  380 #> 2280        140    6  380 #> 2281         75    1  381 #> 2282        165    2  381 #> 2283        200    3  381 #> 2284        171    4  381 #> 2285        160    5  381 #> 2286        137    6  381 #> 2287         75    1  382 #> 2288        165    2  382 #> 2289        200    3  382 #> 2290        178    4  382 #> 2291        154    5  382 #> 2292        158    6  382 #> 2293         75    1  383 #> 2294        165    2  383 #> 2295        200    3  383 #> 2296        168    4  383 #> 2297        155    5  383 #> 2298        145    6  383 #> 2299         75    1  384 #> 2300        165    2  384 #> 2301        200    3  384 #> 2302        176    4  384 #> 2303        157    5  384 #> 2304        139    6  384 #> 2305         75    1  385 #> 2306        165    2  385 #> 2307        200    3  385 #> 2308        177    4  385 #> 2309        150    5  385 #> 2310        141    6  385 #> 2311         75    1  386 #> 2312        165    2  386 #> 2313        200    3  386 #> 2314        190    4  386 #> 2315        154    5  386 #> 2316        149    6  386 #> 2317         75    1  387 #> 2318        165    2  387 #> 2319        200    3  387 #> 2320        172    4  387 #> 2321        152    5  387 #> 2322        149    6  387 #> 2323         75    1  388 #> 2324        165    2  388 #> 2325        200    3  388 #> 2326        176    4  388 #> 2327        159    5  388 #> 2328        136    6  388 #> 2329         75    1  389 #> 2330        165    2  389 #> 2331        200    3  389 #> 2332        181    4  389 #> 2333        158    5  389 #> 2334        134    6  389 #> 2335         75    1  390 #> 2336        165    2  390 #> 2337        200    3  390 #> 2338        182    4  390 #> 2339        154    5  390 #> 2340        143    6  390 #> 2341         75    1  391 #> 2342        165    2  391 #> 2343        200    3  391 #> 2344        193    4  391 #> 2345        155    5  391 #> 2346        144    6  391 #> 2347         75    1  392 #> 2348        165    2  392 #> 2349        200    3  392 #> 2350        178    4  392 #> 2351        159    5  392 #> 2352        126    6  392 #> 2353         75    1  393 #> 2354        165    2  393 #> 2355        200    3  393 #> 2356        171    4  393 #> 2357        155    5  393 #> 2358        120    6  393 #> 2359         75    1  394 #> 2360        165    2  394 #> 2361        200    3  394 #> 2362        176    4  394 #> 2363        163    5  394 #> 2364        147    6  394 #> 2365         75    1  395 #> 2366        165    2  395 #> 2367        200    3  395 #> 2368        171    4  395 #> 2369        164    5  395 #> 2370        122    6  395 #> 2371         75    1  396 #> 2372        165    2  396 #> 2373        200    3  396 #> 2374        194    4  396 #> 2375        168    5  396 #> 2376        145    6  396 #> 2377         75    1  397 #> 2378        165    2  397 #> 2379        200    3  397 #> 2380        180    4  397 #> 2381        165    5  397 #> 2382        158    6  397 #> 2383         75    1  398 #> 2384        165    2  398 #> 2385        200    3  398 #> 2386        175    4  398 #> 2387        157    5  398 #> 2388        143    6  398 #> 2389         75    1  399 #> 2390        165    2  399 #> 2391        200    3  399 #> 2392        178    4  399 #> 2393        162    5  399 #> 2394        147    6  399 #> 2395         75    1  400 #> 2396        165    2  400 #> 2397        200    3  400 #> 2398        201    4  400 #> 2399        177    5  400 #> 2400        141    6  400 #> 2401         75    1  401 #> 2402        165    2  401 #> 2403        200    3  401 #> 2404        194    4  401 #> 2405        162    5  401 #> 2406        146    6  401 #> 2407         75    1  402 #> 2408        165    2  402 #> 2409        200    3  402 #> 2410        185    4  402 #> 2411        152    5  402 #> 2412        143    6  402 #> 2413         75    1  403 #> 2414        165    2  403 #> 2415        200    3  403 #> 2416        169    4  403 #> 2417        159    5  403 #> 2418        141    6  403 #> 2419         75    1  404 #> 2420        165    2  404 #> 2421        200    3  404 #> 2422        175    4  404 #> 2423        166    5  404 #> 2424        144    6  404 #> 2425         75    1  405 #> 2426        165    2  405 #> 2427        200    3  405 #> 2428        176    4  405 #> 2429        156    5  405 #> 2430        135    6  405 #> 2431         75    1  406 #> 2432        165    2  406 #> 2433        200    3  406 #> 2434        172    4  406 #> 2435        151    5  406 #> 2436        140    6  406 #> 2437         75    1  407 #> 2438        165    2  407 #> 2439        200    3  407 #> 2440        173    4  407 #> 2441        154    5  407 #> 2442        151    6  407 #> 2443         75    1  408 #> 2444        165    2  408 #> 2445        200    3  408 #> 2446        177    4  408 #> 2447        158    5  408 #> 2448        135    6  408 #> 2449         75    1  409 #> 2450        165    2  409 #> 2451        200    3  409 #> 2452        171    4  409 #> 2453        150    5  409 #> 2454        133    6  409 #> 2455         75    1  410 #> 2456        165    2  410 #> 2457        200    3  410 #> 2458        165    4  410 #> 2459        170    5  410 #> 2460        146    6  410 #> 2461         75    1  411 #> 2462        165    2  411 #> 2463        200    3  411 #> 2464        175    4  411 #> 2465        153    5  411 #> 2466        144    6  411 #> 2467         75    1  412 #> 2468        165    2  412 #> 2469        200    3  412 #> 2470        183    4  412 #> 2471        173    5  412 #> 2472        131    6  412 #> 2473         75    1  413 #> 2474        165    2  413 #> 2475        200    3  413 #> 2476        179    4  413 #> 2477        160    5  413 #> 2478        134    6  413 #> 2479         75    1  414 #> 2480        165    2  414 #> 2481        200    3  414 #> 2482        180    4  414 #> 2483        156    5  414 #> 2484        135    6  414 #> 2485         75    1  415 #> 2486        165    2  415 #> 2487        200    3  415 #> 2488        175    4  415 #> 2489        160    5  415 #> 2490        142    6  415 #> 2491         75    1  416 #> 2492        165    2  416 #> 2493        200    3  416 #> 2494        177    4  416 #> 2495        154    5  416 #> 2496        125    6  416 #> 2497         75    1  417 #> 2498        165    2  417 #> 2499        200    3  417 #> 2500        181    4  417 #> 2501        167    5  417 #> 2502        146    6  417 #> 2503         75    1  418 #> 2504        165    2  418 #> 2505        200    3  418 #> 2506        172    4  418 #> 2507        153    5  418 #> 2508        133    6  418 #> 2509         75    1  419 #> 2510        165    2  419 #> 2511        200    3  419 #> 2512        177    4  419 #> 2513        146    5  419 #> 2514        137    6  419 #> 2515         75    1  420 #> 2516        165    2  420 #> 2517        200    3  420 #> 2518        167    4  420 #> 2519        169    5  420 #> 2520        139    6  420 #> 2521         75    1  421 #> 2522        165    2  421 #> 2523        200    3  421 #> 2524        168    4  421 #> 2525        162    5  421 #> 2526        139    6  421 #> 2527         75    1  422 #> 2528        165    2  422 #> 2529        200    3  422 #> 2530        186    4  422 #> 2531        162    5  422 #> 2532        138    6  422 #> 2533         75    1  423 #> 2534        165    2  423 #> 2535        200    3  423 #> 2536        180    4  423 #> 2537        149    5  423 #> 2538        118    6  423 #> 2539         75    1  424 #> 2540        165    2  424 #> 2541        200    3  424 #> 2542        178    4  424 #> 2543        156    5  424 #> 2544        135    6  424 #> 2545         75    1  425 #> 2546        165    2  425 #> 2547        200    3  425 #> 2548        172    4  425 #> 2549        166    5  425 #> 2550        139    6  425 #> 2551         75    1  426 #> 2552        165    2  426 #> 2553        200    3  426 #> 2554        172    4  426 #> 2555        162    5  426 #> 2556        123    6  426 #> 2557         75    1  427 #> 2558        165    2  427 #> 2559        200    3  427 #> 2560        169    4  427 #> 2561        165    5  427 #> 2562        140    6  427 #> 2563         75    1  428 #> 2564        165    2  428 #> 2565        200    3  428 #> 2566        179    4  428 #> 2567        150    5  428 #> 2568        138    6  428 #> 2569         75    1  429 #> 2570        165    2  429 #> 2571        200    3  429 #> 2572        175    4  429 #> 2573        151    5  429 #> 2574        151    6  429 #> 2575         75    1  430 #> 2576        165    2  430 #> 2577        200    3  430 #> 2578        184    4  430 #> 2579        147    5  430 #> 2580        139    6  430 #> 2581         75    1  431 #> 2582        165    2  431 #> 2583        200    3  431 #> 2584        176    4  431 #> 2585        165    5  431 #> 2586        123    6  431 #> 2587         75    1  432 #> 2588        165    2  432 #> 2589        200    3  432 #> 2590        175    4  432 #> 2591        160    5  432 #> 2592        133    6  432 #> 2593         75    1  433 #> 2594        165    2  433 #> 2595        200    3  433 #> 2596        175    4  433 #> 2597        167    5  433 #> 2598        123    6  433 #> 2599         75    1  434 #> 2600        165    2  434 #> 2601        200    3  434 #> 2602        194    4  434 #> 2603        162    5  434 #> 2604        150    6  434 #> 2605         75    1  435 #> 2606        165    2  435 #> 2607        200    3  435 #> 2608        174    4  435 #> 2609        157    5  435 #> 2610        140    6  435 #> 2611         75    1  436 #> 2612        165    2  436 #> 2613        200    3  436 #> 2614        188    4  436 #> 2615        159    5  436 #> 2616        144    6  436 #> 2617         75    1  437 #> 2618        165    2  437 #> 2619        200    3  437 #> 2620        177    4  437 #> 2621        164    5  437 #> 2622        140    6  437 #> 2623         75    1  438 #> 2624        165    2  438 #> 2625        200    3  438 #> 2626        168    4  438 #> 2627        158    5  438 #> 2628        147    6  438 #> 2629         75    1  439 #> 2630        165    2  439 #> 2631        200    3  439 #> 2632        184    4  439 #> 2633        159    5  439 #> 2634        132    6  439 #> 2635         75    1  440 #> 2636        165    2  440 #> 2637        200    3  440 #> 2638        179    4  440 #> 2639        150    5  440 #> 2640        147    6  440 #> 2641         75    1  441 #> 2642        165    2  441 #> 2643        200    3  441 #> 2644        177    4  441 #> 2645        159    5  441 #> 2646        130    6  441 #> 2647         75    1  442 #> 2648        165    2  442 #> 2649        200    3  442 #> 2650        181    4  442 #> 2651        164    5  442 #> 2652        129    6  442 #> 2653         75    1  443 #> 2654        165    2  443 #> 2655        200    3  443 #> 2656        175    4  443 #> 2657        152    5  443 #> 2658        130    6  443 #> 2659         75    1  444 #> 2660        165    2  444 #> 2661        200    3  444 #> 2662        168    4  444 #> 2663        158    5  444 #> 2664        143    6  444 #> 2665         75    1  445 #> 2666        165    2  445 #> 2667        200    3  445 #> 2668        207    4  445 #> 2669        164    5  445 #> 2670        144    6  445 #> 2671         75    1  446 #> 2672        165    2  446 #> 2673        200    3  446 #> 2674        177    4  446 #> 2675        161    5  446 #> 2676        150    6  446 #> 2677         75    1  447 #> 2678        165    2  447 #> 2679        200    3  447 #> 2680        171    4  447 #> 2681        151    5  447 #> 2682        152    6  447 #> 2683         75    1  448 #> 2684        165    2  448 #> 2685        200    3  448 #> 2686        187    4  448 #> 2687        155    5  448 #> 2688        129    6  448 #> 2689         75    1  449 #> 2690        165    2  449 #> 2691        200    3  449 #> 2692        180    4  449 #> 2693        151    5  449 #> 2694        146    6  449 #> 2695         75    1  450 #> 2696        165    2  450 #> 2697        200    3  450 #> 2698        178    4  450 #> 2699        155    5  450 #> 2700        143    6  450 #> 2701         75    1  451 #> 2702        165    2  451 #> 2703        200    3  451 #> 2704        171    4  451 #> 2705        156    5  451 #> 2706        136    6  451 #> 2707         75    1  452 #> 2708        165    2  452 #> 2709        200    3  452 #> 2710        175    4  452 #> 2711        145    5  452 #> 2712        131    6  452 #> 2713         75    1  453 #> 2714        165    2  453 #> 2715        200    3  453 #> 2716        187    4  453 #> 2717        164    5  453 #> 2718        133    6  453 #> 2719         75    1  454 #> 2720        165    2  454 #> 2721        200    3  454 #> 2722        166    4  454 #> 2723        163    5  454 #> 2724        155    6  454 #> 2725         75    1  455 #> 2726        165    2  455 #> 2727        200    3  455 #> 2728        183    4  455 #> 2729        153    5  455 #> 2730        129    6  455 #> 2731         75    1  456 #> 2732        165    2  456 #> 2733        200    3  456 #> 2734        169    4  456 #> 2735        163    5  456 #> 2736        143    6  456 #> 2737         75    1  457 #> 2738        165    2  457 #> 2739        200    3  457 #> 2740        179    4  457 #> 2741        166    5  457 #> 2742        142    6  457 #> 2743         75    1  458 #> 2744        165    2  458 #> 2745        200    3  458 #> 2746        164    4  458 #> 2747        157    5  458 #> 2748        145    6  458 #> 2749         75    1  459 #> 2750        165    2  459 #> 2751        200    3  459 #> 2752        171    4  459 #> 2753        158    5  459 #> 2754        144    6  459 #> 2755         75    1  460 #> 2756        165    2  460 #> 2757        200    3  460 #> 2758        168    4  460 #> 2759        162    5  460 #> 2760        132    6  460 #> 2761         75    1  461 #> 2762        165    2  461 #> 2763        200    3  461 #> 2764        181    4  461 #> 2765        159    5  461 #> 2766        137    6  461 #> 2767         75    1  462 #> 2768        165    2  462 #> 2769        200    3  462 #> 2770        167    4  462 #> 2771        165    5  462 #> 2772        134    6  462 #> 2773         75    1  463 #> 2774        165    2  463 #> 2775        200    3  463 #> 2776        173    4  463 #> 2777        148    5  463 #> 2778        146    6  463 #> 2779         75    1  464 #> 2780        165    2  464 #> 2781        200    3  464 #> 2782        167    4  464 #> 2783        157    5  464 #> 2784        140    6  464 #> 2785         75    1  465 #> 2786        165    2  465 #> 2787        200    3  465 #> 2788        186    4  465 #> 2789        160    5  465 #> 2790        145    6  465 #> 2791         75    1  466 #> 2792        165    2  466 #> 2793        200    3  466 #> 2794        176    4  466 #> 2795        165    5  466 #> 2796        127    6  466 #> 2797         75    1  467 #> 2798        165    2  467 #> 2799        200    3  467 #> 2800        182    4  467 #> 2801        155    5  467 #> 2802        127    6  467 #> 2803         75    1  468 #> 2804        165    2  468 #> 2805        200    3  468 #> 2806        180    4  468 #> 2807        169    5  468 #> 2808        146    6  468 #> 2809         75    1  469 #> 2810        165    2  469 #> 2811        200    3  469 #> 2812        185    4  469 #> 2813        163    5  469 #> 2814        137    6  469 #> 2815         75    1  470 #> 2816        165    2  470 #> 2817        200    3  470 #> 2818        178    4  470 #> 2819        157    5  470 #> 2820        132    6  470 #> 2821         75    1  471 #> 2822        165    2  471 #> 2823        200    3  471 #> 2824        185    4  471 #> 2825        166    5  471 #> 2826        140    6  471 #> 2827         75    1  472 #> 2828        165    2  472 #> 2829        200    3  472 #> 2830        176    4  472 #> 2831        155    5  472 #> 2832        152    6  472 #> 2833         75    1  473 #> 2834        165    2  473 #> 2835        200    3  473 #> 2836        171    4  473 #> 2837        163    5  473 #> 2838        138    6  473 #> 2839         75    1  474 #> 2840        165    2  474 #> 2841        200    3  474 #> 2842        183    4  474 #> 2843        148    5  474 #> 2844        134    6  474 #> 2845         75    1  475 #> 2846        165    2  475 #> 2847        200    3  475 #> 2848        172    4  475 #> 2849        169    5  475 #> 2850        143    6  475 #> 2851         75    1  476 #> 2852        165    2  476 #> 2853        200    3  476 #> 2854        167    4  476 #> 2855        175    5  476 #> 2856        145    6  476 #> 2857         75    1  477 #> 2858        165    2  477 #> 2859        200    3  477 #> 2860        174    4  477 #> 2861        163    5  477 #> 2862        139    6  477 #> 2863         75    1  478 #> 2864        165    2  478 #> 2865        200    3  478 #> 2866        182    4  478 #> 2867        156    5  478 #> 2868        143    6  478 #> 2869         75    1  479 #> 2870        165    2  479 #> 2871        200    3  479 #> 2872        181    4  479 #> 2873        157    5  479 #> 2874        149    6  479 #> 2875         75    1  480 #> 2876        165    2  480 #> 2877        200    3  480 #> 2878        177    4  480 #> 2879        160    5  480 #> 2880        156    6  480 #> 2881         75    1  481 #> 2882        165    2  481 #> 2883        200    3  481 #> 2884        174    4  481 #> 2885        159    5  481 #> 2886        145    6  481 #> 2887         75    1  482 #> 2888        165    2  482 #> 2889        200    3  482 #> 2890        179    4  482 #> 2891        160    5  482 #> 2892        150    6  482 #> 2893         75    1  483 #> 2894        165    2  483 #> 2895        200    3  483 #> 2896        190    4  483 #> 2897        158    5  483 #> 2898        138    6  483 #> 2899         75    1  484 #> 2900        165    2  484 #> 2901        200    3  484 #> 2902        176    4  484 #> 2903        161    5  484 #> 2904        135    6  484 #> 2905         75    1  485 #> 2906        165    2  485 #> 2907        200    3  485 #> 2908        183    4  485 #> 2909        154    5  485 #> 2910        148    6  485 #> 2911         75    1  486 #> 2912        165    2  486 #> 2913        200    3  486 #> 2914        171    4  486 #> 2915        158    5  486 #> 2916        129    6  486 #> 2917         75    1  487 #> 2918        165    2  487 #> 2919        200    3  487 #> 2920        178    4  487 #> 2921        158    5  487 #> 2922        154    6  487 #> 2923         75    1  488 #> 2924        165    2  488 #> 2925        200    3  488 #> 2926        182    4  488 #> 2927        163    5  488 #> 2928        129    6  488 #> 2929         75    1  489 #> 2930        165    2  489 #> 2931        200    3  489 #> 2932        169    4  489 #> 2933        149    5  489 #> 2934        141    6  489 #> 2935         75    1  490 #> 2936        165    2  490 #> 2937        200    3  490 #> 2938        172    4  490 #> 2939        162    5  490 #> 2940        124    6  490 #> 2941         75    1  491 #> 2942        165    2  491 #> 2943        200    3  491 #> 2944        176    4  491 #> 2945        165    5  491 #> 2946        131    6  491 #> 2947         75    1  492 #> 2948        165    2  492 #> 2949        200    3  492 #> 2950        179    4  492 #> 2951        166    5  492 #> 2952        143    6  492 #> 2953         75    1  493 #> 2954        165    2  493 #> 2955        200    3  493 #> 2956        175    4  493 #> 2957        154    5  493 #> 2958        150    6  493 #> 2959         75    1  494 #> 2960        165    2  494 #> 2961        200    3  494 #> 2962        180    4  494 #> 2963        155    5  494 #> 2964        145    6  494 #> 2965         75    1  495 #> 2966        165    2  495 #> 2967        200    3  495 #> 2968        182    4  495 #> 2969        155    5  495 #> 2970        141    6  495 #> 2971         75    1  496 #> 2972        165    2  496 #> 2973        200    3  496 #> 2974        182    4  496 #> 2975        158    5  496 #> 2976        130    6  496 #> 2977         75    1  497 #> 2978        165    2  497 #> 2979        200    3  497 #> 2980        178    4  497 #> 2981        157    5  497 #> 2982        142    6  497 #> 2983         75    1  498 #> 2984        165    2  498 #> 2985        200    3  498 #> 2986        185    4  498 #> 2987        141    5  498 #> 2988        131    6  498 #> 2989         75    1  499 #> 2990        165    2  499 #> 2991        200    3  499 #> 2992        179    4  499 #> 2993        163    5  499 #> 2994        121    6  499 #> 2995         75    1  500 #> 2996        165    2  500 #> 2997        200    3  500 #> 2998        175    4  500 #> 2999        160    5  500 #> 3000        138    6  500 #> 3001         75    1  501 #> 3002        165    2  501 #> 3003        200    3  501 #> 3004        179    4  501 #> 3005        166    5  501 #> 3006        135    6  501 #> 3007         75    1  502 #> 3008        165    2  502 #> 3009        200    3  502 #> 3010        183    4  502 #> 3011        167    5  502 #> 3012        140    6  502 #> 3013         75    1  503 #> 3014        165    2  503 #> 3015        200    3  503 #> 3016        180    4  503 #> 3017        156    5  503 #> 3018        140    6  503 #> 3019         75    1  504 #> 3020        165    2  504 #> 3021        200    3  504 #> 3022        176    4  504 #> 3023        165    5  504 #> 3024        123    6  504 #> 3025         75    1  505 #> 3026        165    2  505 #> 3027        200    3  505 #> 3028        177    4  505 #> 3029        164    5  505 #> 3030        132    6  505 #> 3031         75    1  506 #> 3032        165    2  506 #> 3033        200    3  506 #> 3034        176    4  506 #> 3035        162    5  506 #> 3036        137    6  506 #> 3037         75    1  507 #> 3038        165    2  507 #> 3039        200    3  507 #> 3040        189    4  507 #> 3041        173    5  507 #> 3042        134    6  507 #> 3043         75    1  508 #> 3044        165    2  508 #> 3045        200    3  508 #> 3046        178    4  508 #> 3047        167    5  508 #> 3048        138    6  508 #> 3049         75    1  509 #> 3050        165    2  509 #> 3051        200    3  509 #> 3052        172    4  509 #> 3053        165    5  509 #> 3054        129    6  509 #> 3055         75    1  510 #> 3056        165    2  510 #> 3057        200    3  510 #> 3058        175    4  510 #> 3059        153    5  510 #> 3060        147    6  510 #> 3061         75    1  511 #> 3062        165    2  511 #> 3063        200    3  511 #> 3064        175    4  511 #> 3065        153    5  511 #> 3066        136    6  511 #> 3067         75    1  512 #> 3068        165    2  512 #> 3069        200    3  512 #> 3070        193    4  512 #> 3071        152    5  512 #> 3072        120    6  512 #> 3073         75    1  513 #> 3074        165    2  513 #> 3075        200    3  513 #> 3076        175    4  513 #> 3077        155    5  513 #> 3078        122    6  513 #> 3079         75    1  514 #> 3080        165    2  514 #> 3081        200    3  514 #> 3082        177    4  514 #> 3083        157    5  514 #> 3084        136    6  514 #> 3085         75    1  515 #> 3086        165    2  515 #> 3087        200    3  515 #> 3088        171    4  515 #> 3089        144    5  515 #> 3090        136    6  515 #> 3091         75    1  516 #> 3092        165    2  516 #> 3093        200    3  516 #> 3094        170    4  516 #> 3095        159    5  516 #> 3096        146    6  516 #> 3097         75    1  517 #> 3098        165    2  517 #> 3099        200    3  517 #> 3100        178    4  517 #> 3101        158    5  517 #> 3102        150    6  517 #> 3103         75    1  518 #> 3104        165    2  518 #> 3105        200    3  518 #> 3106        179    4  518 #> 3107        153    5  518 #> 3108        151    6  518 #> 3109         75    1  519 #> 3110        165    2  519 #> 3111        200    3  519 #> 3112        171    4  519 #> 3113        154    5  519 #> 3114        127    6  519 #> 3115         75    1  520 #> 3116        165    2  520 #> 3117        200    3  520 #> 3118        182    4  520 #> 3119        161    5  520 #> 3120        128    6  520 #> 3121         75    1  521 #> 3122        165    2  521 #> 3123        200    3  521 #> 3124        180    4  521 #> 3125        164    5  521 #> 3126        128    6  521 #> 3127         75    1  522 #> 3128        165    2  522 #> 3129        200    3  522 #> 3130        177    4  522 #> 3131        167    5  522 #> 3132        140    6  522 #> 3133         75    1  523 #> 3134        165    2  523 #> 3135        200    3  523 #> 3136        168    4  523 #> 3137        149    5  523 #> 3138        138    6  523 #> 3139         75    1  524 #> 3140        165    2  524 #> 3141        200    3  524 #> 3142        188    4  524 #> 3143        165    5  524 #> 3144        150    6  524 #> 3145         75    1  525 #> 3146        165    2  525 #> 3147        200    3  525 #> 3148        175    4  525 #> 3149        162    5  525 #> 3150        148    6  525 #> 3151         75    1  526 #> 3152        165    2  526 #> 3153        200    3  526 #> 3154        170    4  526 #> 3155        161    5  526 #> 3156        145    6  526 #> 3157         75    1  527 #> 3158        165    2  527 #> 3159        200    3  527 #> 3160        195    4  527 #> 3161        165    5  527 #> 3162        125    6  527 #> 3163         75    1  528 #> 3164        165    2  528 #> 3165        200    3  528 #> 3166        181    4  528 #> 3167        161    5  528 #> 3168        135    6  528 #> 3169         75    1  529 #> 3170        165    2  529 #> 3171        200    3  529 #> 3172        177    4  529 #> 3173        159    5  529 #> 3174        141    6  529 #> 3175         75    1  530 #> 3176        165    2  530 #> 3177        200    3  530 #> 3178        168    4  530 #> 3179        159    5  530 #> 3180        133    6  530 #> 3181         75    1  531 #> 3182        165    2  531 #> 3183        200    3  531 #> 3184        178    4  531 #> 3185        158    5  531 #> 3186        140    6  531 #> 3187         75    1  532 #> 3188        165    2  532 #> 3189        200    3  532 #> 3190        184    4  532 #> 3191        164    5  532 #> 3192        137    6  532 #> 3193         75    1  533 #> 3194        165    2  533 #> 3195        200    3  533 #> 3196        178    4  533 #> 3197        158    5  533 #> 3198        166    6  533 #> 3199         75    1  534 #> 3200        165    2  534 #> 3201        200    3  534 #> 3202        171    4  534 #> 3203        161    5  534 #> 3204        138    6  534 #> 3205         75    1  535 #> 3206        165    2  535 #> 3207        200    3  535 #> 3208        189    4  535 #> 3209        166    5  535 #> 3210        141    6  535 #> 3211         75    1  536 #> 3212        165    2  536 #> 3213        200    3  536 #> 3214        180    4  536 #> 3215        162    5  536 #> 3216        167    6  536 #> 3217         75    1  537 #> 3218        165    2  537 #> 3219        200    3  537 #> 3220        180    4  537 #> 3221        168    5  537 #> 3222        127    6  537 #> 3223         75    1  538 #> 3224        165    2  538 #> 3225        200    3  538 #> 3226        175    4  538 #> 3227        152    5  538 #> 3228        140    6  538 #> 3229         75    1  539 #> 3230        165    2  539 #> 3231        200    3  539 #> 3232        180    4  539 #> 3233        163    5  539 #> 3234        147    6  539 #> 3235         75    1  540 #> 3236        165    2  540 #> 3237        200    3  540 #> 3238        193    4  540 #> 3239        155    5  540 #> 3240        133    6  540 #> 3241         75    1  541 #> 3242        165    2  541 #> 3243        200    3  541 #> 3244        186    4  541 #> 3245        167    5  541 #> 3246        140    6  541 #> 3247         75    1  542 #> 3248        165    2  542 #> 3249        200    3  542 #> 3250        166    4  542 #> 3251        151    5  542 #> 3252        131    6  542 #> 3253         75    1  543 #> 3254        165    2  543 #> 3255        200    3  543 #> 3256        174    4  543 #> 3257        159    5  543 #> 3258        121    6  543 #> 3259         75    1  544 #> 3260        165    2  544 #> 3261        200    3  544 #> 3262        172    4  544 #> 3263        164    5  544 #> 3264        139    6  544 #> 3265         75    1  545 #> 3266        165    2  545 #> 3267        200    3  545 #> 3268        183    4  545 #> 3269        156    5  545 #> 3270        130    6  545 #> 3271         75    1  546 #> 3272        165    2  546 #> 3273        200    3  546 #> 3274        186    4  546 #> 3275        165    5  546 #> 3276        139    6  546 #> 3277         75    1  547 #> 3278        165    2  547 #> 3279        200    3  547 #> 3280        175    4  547 #> 3281        168    5  547 #> 3282        139    6  547 #> 3283         75    1  548 #> 3284        165    2  548 #> 3285        200    3  548 #> 3286        184    4  548 #> 3287        164    5  548 #> 3288        127    6  548 #> 3289         75    1  549 #> 3290        165    2  549 #> 3291        200    3  549 #> 3292        184    4  549 #> 3293        151    5  549 #> 3294        132    6  549 #> 3295         75    1  550 #> 3296        165    2  550 #> 3297        200    3  550 #> 3298        177    4  550 #> 3299        165    5  550 #> 3300        141    6  550 #> 3301         75    1  551 #> 3302        165    2  551 #> 3303        200    3  551 #> 3304        174    4  551 #> 3305        162    5  551 #> 3306        128    6  551 #> 3307         75    1  552 #> 3308        165    2  552 #> 3309        200    3  552 #> 3310        188    4  552 #> 3311        152    5  552 #> 3312        122    6  552 #> 3313         75    1  553 #> 3314        165    2  553 #> 3315        200    3  553 #> 3316        174    4  553 #> 3317        166    5  553 #> 3318        145    6  553 #> 3319         75    1  554 #> 3320        165    2  554 #> 3321        200    3  554 #> 3322        184    4  554 #> 3323        162    5  554 #> 3324        140    6  554 #> 3325         75    1  555 #> 3326        165    2  555 #> 3327        200    3  555 #> 3328        171    4  555 #> 3329        150    5  555 #> 3330        151    6  555 #> 3331         75    1  556 #> 3332        165    2  556 #> 3333        200    3  556 #> 3334        181    4  556 #> 3335        165    5  556 #> 3336        142    6  556 #> 3337         75    1  557 #> 3338        165    2  557 #> 3339        200    3  557 #> 3340        182    4  557 #> 3341        164    5  557 #> 3342        137    6  557 #> 3343         75    1  558 #> 3344        165    2  558 #> 3345        200    3  558 #> 3346        178    4  558 #> 3347        168    5  558 #> 3348        142    6  558 #> 3349         75    1  559 #> 3350        165    2  559 #> 3351        200    3  559 #> 3352        178    4  559 #> 3353        162    5  559 #> 3354        138    6  559 #> 3355         75    1  560 #> 3356        165    2  560 #> 3357        200    3  560 #> 3358        180    4  560 #> 3359        154    5  560 #> 3360        138    6  560 #> 3361         75    1  561 #> 3362        165    2  561 #> 3363        200    3  561 #> 3364        186    4  561 #> 3365        159    5  561 #> 3366        133    6  561 #> 3367         75    1  562 #> 3368        165    2  562 #> 3369        200    3  562 #> 3370        178    4  562 #> 3371        157    5  562 #> 3372        150    6  562 #> 3373         75    1  563 #> 3374        165    2  563 #> 3375        200    3  563 #> 3376        174    4  563 #> 3377        147    5  563 #> 3378        134    6  563 #> 3379         75    1  564 #> 3380        165    2  564 #> 3381        200    3  564 #> 3382        182    4  564 #> 3383        170    5  564 #> 3384        149    6  564 #> 3385         75    1  565 #> 3386        165    2  565 #> 3387        200    3  565 #> 3388        183    4  565 #> 3389        156    5  565 #> 3390        136    6  565 #> 3391         75    1  566 #> 3392        165    2  566 #> 3393        200    3  566 #> 3394        169    4  566 #> 3395        172    5  566 #> 3396        136    6  566 #> 3397         75    1  567 #> 3398        165    2  567 #> 3399        200    3  567 #> 3400        188    4  567 #> 3401        158    5  567 #> 3402        133    6  567 #> 3403         75    1  568 #> 3404        165    2  568 #> 3405        200    3  568 #> 3406        189    4  568 #> 3407        163    5  568 #> 3408        136    6  568 #> 3409         75    1  569 #> 3410        165    2  569 #> 3411        200    3  569 #> 3412        180    4  569 #> 3413        155    5  569 #> 3414        131    6  569 #> 3415         75    1  570 #> 3416        165    2  570 #> 3417        200    3  570 #> 3418        179    4  570 #> 3419        160    5  570 #> 3420        147    6  570 #> 3421         75    1  571 #> 3422        165    2  571 #> 3423        200    3  571 #> 3424        170    4  571 #> 3425        162    5  571 #> 3426        136    6  571 #> 3427         75    1  572 #> 3428        165    2  572 #> 3429        200    3  572 #> 3430        168    4  572 #> 3431        150    5  572 #> 3432        140    6  572 #> 3433         75    1  573 #> 3434        165    2  573 #> 3435        200    3  573 #> 3436        173    4  573 #> 3437        166    5  573 #> 3438        141    6  573 #> 3439         75    1  574 #> 3440        165    2  574 #> 3441        200    3  574 #> 3442        185    4  574 #> 3443        155    5  574 #> 3444        158    6  574 #> 3445         75    1  575 #> 3446        165    2  575 #> 3447        200    3  575 #> 3448        183    4  575 #> 3449        158    5  575 #> 3450        142    6  575 #> 3451         75    1  576 #> 3452        165    2  576 #> 3453        200    3  576 #> 3454        173    4  576 #> 3455        155    5  576 #> 3456        138    6  576 #> 3457         75    1  577 #> 3458        165    2  577 #> 3459        200    3  577 #> 3460        171    4  577 #> 3461        166    5  577 #> 3462        135    6  577 #> 3463         75    1  578 #> 3464        165    2  578 #> 3465        200    3  578 #> 3466        177    4  578 #> 3467        155    5  578 #> 3468        147    6  578 #> 3469         75    1  579 #> 3470        165    2  579 #> 3471        200    3  579 #> 3472        170    4  579 #> 3473        152    5  579 #> 3474        144    6  579 #> 3475         75    1  580 #> 3476        165    2  580 #> 3477        200    3  580 #> 3478        177    4  580 #> 3479        158    5  580 #> 3480        152    6  580 #> 3481         75    1  581 #> 3482        165    2  581 #> 3483        200    3  581 #> 3484        171    4  581 #> 3485        161    5  581 #> 3486        140    6  581 #> 3487         75    1  582 #> 3488        165    2  582 #> 3489        200    3  582 #> 3490        173    4  582 #> 3491        161    5  582 #> 3492        132    6  582 #> 3493         75    1  583 #> 3494        165    2  583 #> 3495        200    3  583 #> 3496        175    4  583 #> 3497        168    5  583 #> 3498        140    6  583 #> 3499         75    1  584 #> 3500        165    2  584 #> 3501        200    3  584 #> 3502        176    4  584 #> 3503        157    5  584 #> 3504        135    6  584 #> 3505         75    1  585 #> 3506        165    2  585 #> 3507        200    3  585 #> 3508        173    4  585 #> 3509        165    5  585 #> 3510        132    6  585 #> 3511         75    1  586 #> 3512        165    2  586 #> 3513        200    3  586 #> 3514        177    4  586 #> 3515        170    5  586 #> 3516        157    6  586 #> 3517         75    1  587 #> 3518        165    2  587 #> 3519        200    3  587 #> 3520        176    4  587 #> 3521        153    5  587 #> 3522        146    6  587 #> 3523         75    1  588 #> 3524        165    2  588 #> 3525        200    3  588 #> 3526        173    4  588 #> 3527        166    5  588 #> 3528        142    6  588 #> 3529         75    1  589 #> 3530        165    2  589 #> 3531        200    3  589 #> 3532        191    4  589 #> 3533        150    5  589 #> 3534        143    6  589 #> 3535         75    1  590 #> 3536        165    2  590 #> 3537        200    3  590 #> 3538        176    4  590 #> 3539        153    5  590 #> 3540        133    6  590 #> 3541         75    1  591 #> 3542        165    2  591 #> 3543        200    3  591 #> 3544        170    4  591 #> 3545        164    5  591 #> 3546        163    6  591 #> 3547         75    1  592 #> 3548        165    2  592 #> 3549        200    3  592 #> 3550        194    4  592 #> 3551        146    5  592 #> 3552        135    6  592 #> 3553         75    1  593 #> 3554        165    2  593 #> 3555        200    3  593 #> 3556        187    4  593 #> 3557        165    5  593 #> 3558        130    6  593 #> 3559         75    1  594 #> 3560        165    2  594 #> 3561        200    3  594 #> 3562        176    4  594 #> 3563        154    5  594 #> 3564        132    6  594 #> 3565         75    1  595 #> 3566        165    2  595 #> 3567        200    3  595 #> 3568        185    4  595 #> 3569        155    5  595 #> 3570        143    6  595 #> 3571         75    1  596 #> 3572        165    2  596 #> 3573        200    3  596 #> 3574        187    4  596 #> 3575        166    5  596 #> 3576        141    6  596 #> 3577         75    1  597 #> 3578        165    2  597 #> 3579        200    3  597 #> 3580        182    4  597 #> 3581        162    5  597 #> 3582        143    6  597 #> 3583         75    1  598 #> 3584        165    2  598 #> 3585        200    3  598 #> 3586        183    4  598 #> 3587        156    5  598 #> 3588        138    6  598 #> 3589         75    1  599 #> 3590        165    2  599 #> 3591        200    3  599 #> 3592        175    4  599 #> 3593        159    5  599 #> 3594        132    6  599 #> 3595         75    1  600 #> 3596        165    2  600 #> 3597        200    3  600 #> 3598        172    4  600 #> 3599        155    5  600 #> 3600        148    6  600 #> 3601         75    1  601 #> 3602        165    2  601 #> 3603        200    3  601 #> 3604        183    4  601 #> 3605        162    5  601 #> 3606        139    6  601 #> 3607         75    1  602 #> 3608        165    2  602 #> 3609        200    3  602 #> 3610        179    4  602 #> 3611        157    5  602 #> 3612        150    6  602 #> 3613         75    1  603 #> 3614        165    2  603 #> 3615        200    3  603 #> 3616        181    4  603 #> 3617        171    5  603 #> 3618        158    6  603 #> 3619         75    1  604 #> 3620        165    2  604 #> 3621        200    3  604 #> 3622        168    4  604 #> 3623        159    5  604 #> 3624        132    6  604 #> 3625         75    1  605 #> 3626        165    2  605 #> 3627        200    3  605 #> 3628        179    4  605 #> 3629        152    5  605 #> 3630        154    6  605 #> 3631         75    1  606 #> 3632        165    2  606 #> 3633        200    3  606 #> 3634        179    4  606 #> 3635        168    5  606 #> 3636        142    6  606 #> 3637         75    1  607 #> 3638        165    2  607 #> 3639        200    3  607 #> 3640        184    4  607 #> 3641        167    5  607 #> 3642        143    6  607 #> 3643         75    1  608 #> 3644        165    2  608 #> 3645        200    3  608 #> 3646        181    4  608 #> 3647        168    5  608 #> 3648        129    6  608 #> 3649         75    1  609 #> 3650        165    2  609 #> 3651        200    3  609 #> 3652        178    4  609 #> 3653        155    5  609 #> 3654        145    6  609 #> 3655         75    1  610 #> 3656        165    2  610 #> 3657        200    3  610 #> 3658        168    4  610 #> 3659        161    5  610 #> 3660        137    6  610 #> 3661         75    1  611 #> 3662        165    2  611 #> 3663        200    3  611 #> 3664        180    4  611 #> 3665        166    5  611 #> 3666        140    6  611 #> 3667         75    1  612 #> 3668        165    2  612 #> 3669        200    3  612 #> 3670        188    4  612 #> 3671        156    5  612 #> 3672        137    6  612 #> 3673         75    1  613 #> 3674        165    2  613 #> 3675        200    3  613 #> 3676        167    4  613 #> 3677        168    5  613 #> 3678        150    6  613 #> 3679         75    1  614 #> 3680        165    2  614 #> 3681        200    3  614 #> 3682        192    4  614 #> 3683        163    5  614 #> 3684        138    6  614 #> 3685         75    1  615 #> 3686        165    2  615 #> 3687        200    3  615 #> 3688        167    4  615 #> 3689        167    5  615 #> 3690        140    6  615 #> 3691         75    1  616 #> 3692        165    2  616 #> 3693        200    3  616 #> 3694        174    4  616 #> 3695        159    5  616 #> 3696        135    6  616 #> 3697         75    1  617 #> 3698        165    2  617 #> 3699        200    3  617 #> 3700        180    4  617 #> 3701        163    5  617 #> 3702        135    6  617 #> 3703         75    1  618 #> 3704        165    2  618 #> 3705        200    3  618 #> 3706        170    4  618 #> 3707        154    5  618 #> 3708        139    6  618 #> 3709         75    1  619 #> 3710        165    2  619 #> 3711        200    3  619 #> 3712        178    4  619 #> 3713        173    5  619 #> 3714        124    6  619 #> 3715         75    1  620 #> 3716        165    2  620 #> 3717        200    3  620 #> 3718        182    4  620 #> 3719        147    5  620 #> 3720        150    6  620 #> 3721         75    1  621 #> 3722        165    2  621 #> 3723        200    3  621 #> 3724        186    4  621 #> 3725        156    5  621 #> 3726        147    6  621 #> 3727         75    1  622 #> 3728        165    2  622 #> 3729        200    3  622 #> 3730        179    4  622 #> 3731        155    5  622 #> 3732        127    6  622 #> 3733         75    1  623 #> 3734        165    2  623 #> 3735        200    3  623 #> 3736        180    4  623 #> 3737        149    5  623 #> 3738        155    6  623 #> 3739         75    1  624 #> 3740        165    2  624 #> 3741        200    3  624 #> 3742        175    4  624 #> 3743        168    5  624 #> 3744        129    6  624 #> 3745         75    1  625 #> 3746        165    2  625 #> 3747        200    3  625 #> 3748        175    4  625 #> 3749        151    5  625 #> 3750        144    6  625 #> 3751         75    1  626 #> 3752        165    2  626 #> 3753        200    3  626 #> 3754        180    4  626 #> 3755        153    5  626 #> 3756        132    6  626 #> 3757         75    1  627 #> 3758        165    2  627 #> 3759        200    3  627 #> 3760        174    4  627 #> 3761        173    5  627 #> 3762        119    6  627 #> 3763         75    1  628 #> 3764        165    2  628 #> 3765        200    3  628 #> 3766        187    4  628 #> 3767        173    5  628 #> 3768        136    6  628 #> 3769         75    1  629 #> 3770        165    2  629 #> 3771        200    3  629 #> 3772        181    4  629 #> 3773        156    5  629 #> 3774        139    6  629 #> 3775         75    1  630 #> 3776        165    2  630 #> 3777        200    3  630 #> 3778        174    4  630 #> 3779        154    5  630 #> 3780        138    6  630 #> 3781         75    1  631 #> 3782        165    2  631 #> 3783        200    3  631 #> 3784        178    4  631 #> 3785        159    5  631 #> 3786        150    6  631 #> 3787         75    1  632 #> 3788        165    2  632 #> 3789        200    3  632 #> 3790        183    4  632 #> 3791        162    5  632 #> 3792        138    6  632 #> 3793         75    1  633 #> 3794        165    2  633 #> 3795        200    3  633 #> 3796        181    4  633 #> 3797        157    5  633 #> 3798        121    6  633 #> 3799         75    1  634 #> 3800        165    2  634 #> 3801        200    3  634 #> 3802        178    4  634 #> 3803        169    5  634 #> 3804        140    6  634 #> 3805         75    1  635 #> 3806        165    2  635 #> 3807        200    3  635 #> 3808        180    4  635 #> 3809        158    5  635 #> 3810        135    6  635 #> 3811         75    1  636 #> 3812        165    2  636 #> 3813        200    3  636 #> 3814        177    4  636 #> 3815        167    5  636 #> 3816        120    6  636 #> 3817         75    1  637 #> 3818        165    2  637 #> 3819        200    3  637 #> 3820        189    4  637 #> 3821        167    5  637 #> 3822        130    6  637 #> 3823         75    1  638 #> 3824        165    2  638 #> 3825        200    3  638 #> 3826        195    4  638 #> 3827        165    5  638 #> 3828        138    6  638 #> 3829         75    1  639 #> 3830        165    2  639 #> 3831        200    3  639 #> 3832        174    4  639 #> 3833        158    5  639 #> 3834        141    6  639 #> 3835         75    1  640 #> 3836        165    2  640 #> 3837        200    3  640 #> 3838        168    4  640 #> 3839        160    5  640 #> 3840        142    6  640 #> 3841         75    1  641 #> 3842        165    2  641 #> 3843        200    3  641 #> 3844        170    4  641 #> 3845        153    5  641 #> 3846        137    6  641 #> 3847         75    1  642 #> 3848        165    2  642 #> 3849        200    3  642 #> 3850        179    4  642 #> 3851        179    5  642 #> 3852        125    6  642 #> 3853         75    1  643 #> 3854        165    2  643 #> 3855        200    3  643 #> 3856        172    4  643 #> 3857        160    5  643 #> 3858        139    6  643 #> 3859         75    1  644 #> 3860        165    2  644 #> 3861        200    3  644 #> 3862        180    4  644 #> 3863        164    5  644 #> 3864        143    6  644 #> 3865         75    1  645 #> 3866        165    2  645 #> 3867        200    3  645 #> 3868        173    4  645 #> 3869        171    5  645 #> 3870        127    6  645 #> 3871         75    1  646 #> 3872        165    2  646 #> 3873        200    3  646 #> 3874        167    4  646 #> 3875        163    5  646 #> 3876        139    6  646 #> 3877         75    1  647 #> 3878        165    2  647 #> 3879        200    3  647 #> 3880        189    4  647 #> 3881        156    5  647 #> 3882        147    6  647 #> 3883         75    1  648 #> 3884        165    2  648 #> 3885        200    3  648 #> 3886        185    4  648 #> 3887        146    5  648 #> 3888        150    6  648 #> 3889         75    1  649 #> 3890        165    2  649 #> 3891        200    3  649 #> 3892        176    4  649 #> 3893        162    5  649 #> 3894        139    6  649 #> 3895         75    1  650 #> 3896        165    2  650 #> 3897        200    3  650 #> 3898        169    4  650 #> 3899        151    5  650 #> 3900        138    6  650 #> 3901         75    1  651 #> 3902        165    2  651 #> 3903        200    3  651 #> 3904        182    4  651 #> 3905        160    5  651 #> 3906        151    6  651 #> 3907         75    1  652 #> 3908        165    2  652 #> 3909        200    3  652 #> 3910        177    4  652 #> 3911        150    5  652 #> 3912        124    6  652 #> 3913         75    1  653 #> 3914        165    2  653 #> 3915        200    3  653 #> 3916        167    4  653 #> 3917        165    5  653 #> 3918        142    6  653 #> 3919         75    1  654 #> 3920        165    2  654 #> 3921        200    3  654 #> 3922        174    4  654 #> 3923        163    5  654 #> 3924        156    6  654 #> 3925         75    1  655 #> 3926        165    2  655 #> 3927        200    3  655 #> 3928        193    4  655 #> 3929        160    5  655 #> 3930        139    6  655 #> 3931         75    1  656 #> 3932        165    2  656 #> 3933        200    3  656 #> 3934        181    4  656 #> 3935        176    5  656 #> 3936        136    6  656 #> 3937         75    1  657 #> 3938        165    2  657 #> 3939        200    3  657 #> 3940        171    4  657 #> 3941        143    5  657 #> 3942        148    6  657 #> 3943         75    1  658 #> 3944        165    2  658 #> 3945        200    3  658 #> 3946        178    4  658 #> 3947        159    5  658 #> 3948        154    6  658 #> 3949         75    1  659 #> 3950        165    2  659 #> 3951        200    3  659 #> 3952        180    4  659 #> 3953        158    5  659 #> 3954        156    6  659 #> 3955         75    1  660 #> 3956        165    2  660 #> 3957        200    3  660 #> 3958        174    4  660 #> 3959        162    5  660 #> 3960        152    6  660 #> 3961         75    1  661 #> 3962        165    2  661 #> 3963        200    3  661 #> 3964        176    4  661 #> 3965        167    5  661 #> 3966        154    6  661 #> 3967         75    1  662 #> 3968        165    2  662 #> 3969        200    3  662 #> 3970        176    4  662 #> 3971        151    5  662 #> 3972        127    6  662 #> 3973         75    1  663 #> 3974        165    2  663 #> 3975        200    3  663 #> 3976        173    4  663 #> 3977        150    5  663 #> 3978        146    6  663 #> 3979         75    1  664 #> 3980        165    2  664 #> 3981        200    3  664 #> 3982        171    4  664 #> 3983        157    5  664 #> 3984        129    6  664 #> 3985         75    1  665 #> 3986        165    2  665 #> 3987        200    3  665 #> 3988        174    4  665 #> 3989        164    5  665 #> 3990        145    6  665 #> 3991         75    1  666 #> 3992        165    2  666 #> 3993        200    3  666 #> 3994        177    4  666 #> 3995        161    5  666 #> 3996        132    6  666 #> 3997         75    1  667 #> 3998        165    2  667 #> 3999        200    3  667 #> 4000        170    4  667 #> 4001        149    5  667 #> 4002        158    6  667 #> 4003         75    1  668 #> 4004        165    2  668 #> 4005        200    3  668 #> 4006        178    4  668 #> 4007        152    5  668 #> 4008        124    6  668 #> 4009         75    1  669 #> 4010        165    2  669 #> 4011        200    3  669 #> 4012        180    4  669 #> 4013        156    5  669 #> 4014        156    6  669 #> 4015         75    1  670 #> 4016        165    2  670 #> 4017        200    3  670 #> 4018        177    4  670 #> 4019        147    5  670 #> 4020        139    6  670 #> 4021         75    1  671 #> 4022        165    2  671 #> 4023        200    3  671 #> 4024        176    4  671 #> 4025        162    5  671 #> 4026        126    6  671 #> 4027         75    1  672 #> 4028        165    2  672 #> 4029        200    3  672 #> 4030        169    4  672 #> 4031        163    5  672 #> 4032        144    6  672 #> 4033         75    1  673 #> 4034        165    2  673 #> 4035        200    3  673 #> 4036        176    4  673 #> 4037        149    5  673 #> 4038        147    6  673 #> 4039         75    1  674 #> 4040        165    2  674 #> 4041        200    3  674 #> 4042        177    4  674 #> 4043        172    5  674 #> 4044        147    6  674 #> 4045         75    1  675 #> 4046        165    2  675 #> 4047        200    3  675 #> 4048        177    4  675 #> 4049        170    5  675 #> 4050        129    6  675 #> 4051         75    1  676 #> 4052        165    2  676 #> 4053        200    3  676 #> 4054        182    4  676 #> 4055        156    5  676 #> 4056        146    6  676 #> 4057         75    1  677 #> 4058        165    2  677 #> 4059        200    3  677 #> 4060        173    4  677 #> 4061        170    5  677 #> 4062        144    6  677 #> 4063         75    1  678 #> 4064        165    2  678 #> 4065        200    3  678 #> 4066        173    4  678 #> 4067        156    5  678 #> 4068        140    6  678 #> 4069         75    1  679 #> 4070        165    2  679 #> 4071        200    3  679 #> 4072        183    4  679 #> 4073        159    5  679 #> 4074        137    6  679 #> 4075         75    1  680 #> 4076        165    2  680 #> 4077        200    3  680 #> 4078        181    4  680 #> 4079        156    5  680 #> 4080        130    6  680 #> 4081         75    1  681 #> 4082        165    2  681 #> 4083        200    3  681 #> 4084        176    4  681 #> 4085        152    5  681 #> 4086        132    6  681 #> 4087         75    1  682 #> 4088        165    2  682 #> 4089        200    3  682 #> 4090        187    4  682 #> 4091        172    5  682 #> 4092        151    6  682 #> 4093         75    1  683 #> 4094        165    2  683 #> 4095        200    3  683 #> 4096        184    4  683 #> 4097        157    5  683 #> 4098        127    6  683 #> 4099         75    1  684 #> 4100        165    2  684 #> 4101        200    3  684 #> 4102        179    4  684 #> 4103        154    5  684 #> 4104        147    6  684 #> 4105         75    1  685 #> 4106        165    2  685 #> 4107        200    3  685 #> 4108        175    4  685 #> 4109        148    5  685 #> 4110        128    6  685 #> 4111         75    1  686 #> 4112        165    2  686 #> 4113        200    3  686 #> 4114        171    4  686 #> 4115        150    5  686 #> 4116        149    6  686 #> 4117         75    1  687 #> 4118        165    2  687 #> 4119        200    3  687 #> 4120        178    4  687 #> 4121        154    5  687 #> 4122        146    6  687 #> 4123         75    1  688 #> 4124        165    2  688 #> 4125        200    3  688 #> 4126        177    4  688 #> 4127        162    5  688 #> 4128        128    6  688 #> 4129         75    1  689 #> 4130        165    2  689 #> 4131        200    3  689 #> 4132        178    4  689 #> 4133        159    5  689 #> 4134        143    6  689 #> 4135         75    1  690 #> 4136        165    2  690 #> 4137        200    3  690 #> 4138        186    4  690 #> 4139        157    5  690 #> 4140        145    6  690 #> 4141         75    1  691 #> 4142        165    2  691 #> 4143        200    3  691 #> 4144        176    4  691 #> 4145        162    5  691 #> 4146        136    6  691 #> 4147         75    1  692 #> 4148        165    2  692 #> 4149        200    3  692 #> 4150        189    4  692 #> 4151        172    5  692 #> 4152        122    6  692 #> 4153         75    1  693 #> 4154        165    2  693 #> 4155        200    3  693 #> 4156        179    4  693 #> 4157        161    5  693 #> 4158        146    6  693 #> 4159         75    1  694 #> 4160        165    2  694 #> 4161        200    3  694 #> 4162        179    4  694 #> 4163        159    5  694 #> 4164        170    6  694 #> 4165         75    1  695 #> 4166        165    2  695 #> 4167        200    3  695 #> 4168        176    4  695 #> 4169        160    5  695 #> 4170        136    6  695 #> 4171         75    1  696 #> 4172        165    2  696 #> 4173        200    3  696 #> 4174        173    4  696 #> 4175        168    5  696 #> 4176        152    6  696 #> 4177         75    1  697 #> 4178        165    2  697 #> 4179        200    3  697 #> 4180        171    4  697 #> 4181        153    5  697 #> 4182        130    6  697 #> 4183         75    1  698 #> 4184        165    2  698 #> 4185        200    3  698 #> 4186        181    4  698 #> 4187        153    5  698 #> 4188        130    6  698 #> 4189         75    1  699 #> 4190        165    2  699 #> 4191        200    3  699 #> 4192        174    4  699 #> 4193        156    5  699 #> 4194        140    6  699 #> 4195         75    1  700 #> 4196        165    2  700 #> 4197        200    3  700 #> 4198        179    4  700 #> 4199        158    5  700 #> 4200        140    6  700 #> 4201         75    1  701 #> 4202        165    2  701 #> 4203        200    3  701 #> 4204        168    4  701 #> 4205        163    5  701 #> 4206        145    6  701 #> 4207         75    1  702 #> 4208        165    2  702 #> 4209        200    3  702 #> 4210        186    4  702 #> 4211        157    5  702 #> 4212        148    6  702 #> 4213         75    1  703 #> 4214        165    2  703 #> 4215        200    3  703 #> 4216        164    4  703 #> 4217        154    5  703 #> 4218        129    6  703 #> 4219         75    1  704 #> 4220        165    2  704 #> 4221        200    3  704 #> 4222        169    4  704 #> 4223        157    5  704 #> 4224        152    6  704 #> 4225         75    1  705 #> 4226        165    2  705 #> 4227        200    3  705 #> 4228        182    4  705 #> 4229        169    5  705 #> 4230        143    6  705 #> 4231         75    1  706 #> 4232        165    2  706 #> 4233        200    3  706 #> 4234        174    4  706 #> 4235        160    5  706 #> 4236        157    6  706 #> 4237         75    1  707 #> 4238        165    2  707 #> 4239        200    3  707 #> 4240        170    4  707 #> 4241        177    5  707 #> 4242        138    6  707 #> 4243         75    1  708 #> 4244        165    2  708 #> 4245        200    3  708 #> 4246        180    4  708 #> 4247        166    5  708 #> 4248        150    6  708 #> 4249         75    1  709 #> 4250        165    2  709 #> 4251        200    3  709 #> 4252        169    4  709 #> 4253        157    5  709 #> 4254        137    6  709 #> 4255         75    1  710 #> 4256        165    2  710 #> 4257        200    3  710 #> 4258        167    4  710 #> 4259        157    5  710 #> 4260        147    6  710 #> 4261         75    1  711 #> 4262        165    2  711 #> 4263        200    3  711 #> 4264        171    4  711 #> 4265        155    5  711 #> 4266        157    6  711 #> 4267         75    1  712 #> 4268        165    2  712 #> 4269        200    3  712 #> 4270        174    4  712 #> 4271        152    5  712 #> 4272        147    6  712 #> 4273         75    1  713 #> 4274        165    2  713 #> 4275        200    3  713 #> 4276        181    4  713 #> 4277        159    5  713 #> 4278        140    6  713 #> 4279         75    1  714 #> 4280        165    2  714 #> 4281        200    3  714 #> 4282        185    4  714 #> 4283        167    5  714 #> 4284        144    6  714 #> 4285         75    1  715 #> 4286        165    2  715 #> 4287        200    3  715 #> 4288        180    4  715 #> 4289        152    5  715 #> 4290        135    6  715 #> 4291         75    1  716 #> 4292        165    2  716 #> 4293        200    3  716 #> 4294        177    4  716 #> 4295        147    5  716 #> 4296        138    6  716 #> 4297         75    1  717 #> 4298        165    2  717 #> 4299        200    3  717 #> 4300        185    4  717 #> 4301        159    5  717 #> 4302        146    6  717 #> 4303         75    1  718 #> 4304        165    2  718 #> 4305        200    3  718 #> 4306        189    4  718 #> 4307        146    5  718 #> 4308        135    6  718 #> 4309         75    1  719 #> 4310        165    2  719 #> 4311        200    3  719 #> 4312        199    4  719 #> 4313        157    5  719 #> 4314        133    6  719 #> 4315         75    1  720 #> 4316        165    2  720 #> 4317        200    3  720 #> 4318        177    4  720 #> 4319        156    5  720 #> 4320        146    6  720 #> 4321         75    1  721 #> 4322        165    2  721 #> 4323        200    3  721 #> 4324        181    4  721 #> 4325        155    5  721 #> 4326        134    6  721 #> 4327         75    1  722 #> 4328        165    2  722 #> 4329        200    3  722 #> 4330        178    4  722 #> 4331        161    5  722 #> 4332        141    6  722 #> 4333         75    1  723 #> 4334        165    2  723 #> 4335        200    3  723 #> 4336        168    4  723 #> 4337        158    5  723 #> 4338        138    6  723 #> 4339         75    1  724 #> 4340        165    2  724 #> 4341        200    3  724 #> 4342        169    4  724 #> 4343        154    5  724 #> 4344        138    6  724 #> 4345         75    1  725 #> 4346        165    2  725 #> 4347        200    3  725 #> 4348        176    4  725 #> 4349        152    5  725 #> 4350        151    6  725 #> 4351         75    1  726 #> 4352        165    2  726 #> 4353        200    3  726 #> 4354        192    4  726 #> 4355        157    5  726 #> 4356        131    6  726 #> 4357         75    1  727 #> 4358        165    2  727 #> 4359        200    3  727 #> 4360        180    4  727 #> 4361        158    5  727 #> 4362        159    6  727 #> 4363         75    1  728 #> 4364        165    2  728 #> 4365        200    3  728 #> 4366        177    4  728 #> 4367        167    5  728 #> 4368        147    6  728 #> 4369         75    1  729 #> 4370        165    2  729 #> 4371        200    3  729 #> 4372        183    4  729 #> 4373        148    5  729 #> 4374        139    6  729 #> 4375         75    1  730 #> 4376        165    2  730 #> 4377        200    3  730 #> 4378        170    4  730 #> 4379        163    5  730 #> 4380        143    6  730 #> 4381         75    1  731 #> 4382        165    2  731 #> 4383        200    3  731 #> 4384        178    4  731 #> 4385        161    5  731 #> 4386        154    6  731 #> 4387         75    1  732 #> 4388        165    2  732 #> 4389        200    3  732 #> 4390        171    4  732 #> 4391        154    5  732 #> 4392        130    6  732 #> 4393         75    1  733 #> 4394        165    2  733 #> 4395        200    3  733 #> 4396        177    4  733 #> 4397        157    5  733 #> 4398        129    6  733 #> 4399         75    1  734 #> 4400        165    2  734 #> 4401        200    3  734 #> 4402        178    4  734 #> 4403        161    5  734 #> 4404        140    6  734 #> 4405         75    1  735 #> 4406        165    2  735 #> 4407        200    3  735 #> 4408        177    4  735 #> 4409        162    5  735 #> 4410        131    6  735 #> 4411         75    1  736 #> 4412        165    2  736 #> 4413        200    3  736 #> 4414        197    4  736 #> 4415        166    5  736 #> 4416        143    6  736 #> 4417         75    1  737 #> 4418        165    2  737 #> 4419        200    3  737 #> 4420        188    4  737 #> 4421        170    5  737 #> 4422        148    6  737 #> 4423         75    1  738 #> 4424        165    2  738 #> 4425        200    3  738 #> 4426        183    4  738 #> 4427        162    5  738 #> 4428        137    6  738 #> 4429         75    1  739 #> 4430        165    2  739 #> 4431        200    3  739 #> 4432        176    4  739 #> 4433        161    5  739 #> 4434        128    6  739 #> 4435         75    1  740 #> 4436        165    2  740 #> 4437        200    3  740 #> 4438        179    4  740 #> 4439        165    5  740 #> 4440        145    6  740 #> 4441         75    1  741 #> 4442        165    2  741 #> 4443        200    3  741 #> 4444        172    4  741 #> 4445        161    5  741 #> 4446        143    6  741 #> 4447         75    1  742 #> 4448        165    2  742 #> 4449        200    3  742 #> 4450        182    4  742 #> 4451        159    5  742 #> 4452        140    6  742 #> 4453         75    1  743 #> 4454        165    2  743 #> 4455        200    3  743 #> 4456        176    4  743 #> 4457        168    5  743 #> 4458        152    6  743 #> 4459         75    1  744 #> 4460        165    2  744 #> 4461        200    3  744 #> 4462        182    4  744 #> 4463        148    5  744 #> 4464        160    6  744 #> 4465         75    1  745 #> 4466        165    2  745 #> 4467        200    3  745 #> 4468        169    4  745 #> 4469        154    5  745 #> 4470        137    6  745 #> 4471         75    1  746 #> 4472        165    2  746 #> 4473        200    3  746 #> 4474        177    4  746 #> 4475        149    5  746 #> 4476        129    6  746 #> 4477         75    1  747 #> 4478        165    2  747 #> 4479        200    3  747 #> 4480        165    4  747 #> 4481        159    5  747 #> 4482        136    6  747 #> 4483         75    1  748 #> 4484        165    2  748 #> 4485        200    3  748 #> 4486        179    4  748 #> 4487        162    5  748 #> 4488        137    6  748 #> 4489         75    1  749 #> 4490        165    2  749 #> 4491        200    3  749 #> 4492        192    4  749 #> 4493        165    5  749 #> 4494        135    6  749 #> 4495         75    1  750 #> 4496        165    2  750 #> 4497        200    3  750 #> 4498        183    4  750 #> 4499        152    5  750 #> 4500        121    6  750 #> 4501         75    1  751 #> 4502        165    2  751 #> 4503        200    3  751 #> 4504        176    4  751 #> 4505        154    5  751 #> 4506        132    6  751 #> 4507         75    1  752 #> 4508        165    2  752 #> 4509        200    3  752 #> 4510        170    4  752 #> 4511        161    5  752 #> 4512        148    6  752 #> 4513         75    1  753 #> 4514        165    2  753 #> 4515        200    3  753 #> 4516        171    4  753 #> 4517        160    5  753 #> 4518        142    6  753 #> 4519         75    1  754 #> 4520        165    2  754 #> 4521        200    3  754 #> 4522        176    4  754 #> 4523        164    5  754 #> 4524        136    6  754 #> 4525         75    1  755 #> 4526        165    2  755 #> 4527        200    3  755 #> 4528        168    4  755 #> 4529        161    5  755 #> 4530        149    6  755 #> 4531         75    1  756 #> 4532        165    2  756 #> 4533        200    3  756 #> 4534        188    4  756 #> 4535        166    5  756 #> 4536        145    6  756 #> 4537         75    1  757 #> 4538        165    2  757 #> 4539        200    3  757 #> 4540        178    4  757 #> 4541        158    5  757 #> 4542        139    6  757 #> 4543         75    1  758 #> 4544        165    2  758 #> 4545        200    3  758 #> 4546        169    4  758 #> 4547        158    5  758 #> 4548        152    6  758 #> 4549         75    1  759 #> 4550        165    2  759 #> 4551        200    3  759 #> 4552        167    4  759 #> 4553        157    5  759 #> 4554        167    6  759 #> 4555         75    1  760 #> 4556        165    2  760 #> 4557        200    3  760 #> 4558        174    4  760 #> 4559        155    5  760 #> 4560        137    6  760 #> 4561         75    1  761 #> 4562        165    2  761 #> 4563        200    3  761 #> 4564        175    4  761 #> 4565        155    5  761 #> 4566        135    6  761 #> 4567         75    1  762 #> 4568        165    2  762 #> 4569        200    3  762 #> 4570        173    4  762 #> 4571        155    5  762 #> 4572        138    6  762 #> 4573         75    1  763 #> 4574        165    2  763 #> 4575        200    3  763 #> 4576        181    4  763 #> 4577        168    5  763 #> 4578        150    6  763 #> 4579         75    1  764 #> 4580        165    2  764 #> 4581        200    3  764 #> 4582        177    4  764 #> 4583        155    5  764 #> 4584        148    6  764 #> 4585         75    1  765 #> 4586        165    2  765 #> 4587        200    3  765 #> 4588        176    4  765 #> 4589        160    5  765 #> 4590        136    6  765 #> 4591         75    1  766 #> 4592        165    2  766 #> 4593        200    3  766 #> 4594        176    4  766 #> 4595        160    5  766 #> 4596        140    6  766 #> 4597         75    1  767 #> 4598        165    2  767 #> 4599        200    3  767 #> 4600        178    4  767 #> 4601        153    5  767 #> 4602        134    6  767 #> 4603         75    1  768 #> 4604        165    2  768 #> 4605        200    3  768 #> 4606        171    4  768 #> 4607        152    5  768 #> 4608        139    6  768 #> 4609         75    1  769 #> 4610        165    2  769 #> 4611        200    3  769 #> 4612        179    4  769 #> 4613        162    5  769 #> 4614        139    6  769 #> 4615         75    1  770 #> 4616        165    2  770 #> 4617        200    3  770 #> 4618        181    4  770 #> 4619        154    5  770 #> 4620        138    6  770 #> 4621         75    1  771 #> 4622        165    2  771 #> 4623        200    3  771 #> 4624        182    4  771 #> 4625        171    5  771 #> 4626        129    6  771 #> 4627         75    1  772 #> 4628        165    2  772 #> 4629        200    3  772 #> 4630        180    4  772 #> 4631        159    5  772 #> 4632        112    6  772 #> 4633         75    1  773 #> 4634        165    2  773 #> 4635        200    3  773 #> 4636        178    4  773 #> 4637        153    5  773 #> 4638        143    6  773 #> 4639         75    1  774 #> 4640        165    2  774 #> 4641        200    3  774 #> 4642        172    4  774 #> 4643        157    5  774 #> 4644        131    6  774 #> 4645         75    1  775 #> 4646        165    2  775 #> 4647        200    3  775 #> 4648        177    4  775 #> 4649        158    5  775 #> 4650        116    6  775 #> 4651         75    1  776 #> 4652        165    2  776 #> 4653        200    3  776 #> 4654        188    4  776 #> 4655        157    5  776 #> 4656        134    6  776 #> 4657         75    1  777 #> 4658        165    2  777 #> 4659        200    3  777 #> 4660        172    4  777 #> 4661        150    5  777 #> 4662        143    6  777 #> 4663         75    1  778 #> 4664        165    2  778 #> 4665        200    3  778 #> 4666        180    4  778 #> 4667        160    5  778 #> 4668        149    6  778 #> 4669         75    1  779 #> 4670        165    2  779 #> 4671        200    3  779 #> 4672        178    4  779 #> 4673        157    5  779 #> 4674        125    6  779 #> 4675         75    1  780 #> 4676        165    2  780 #> 4677        200    3  780 #> 4678        170    4  780 #> 4679        177    5  780 #> 4680        139    6  780 #> 4681         75    1  781 #> 4682        165    2  781 #> 4683        200    3  781 #> 4684        185    4  781 #> 4685        150    5  781 #> 4686        142    6  781 #> 4687         75    1  782 #> 4688        165    2  782 #> 4689        200    3  782 #> 4690        187    4  782 #> 4691        152    5  782 #> 4692        142    6  782 #> 4693         75    1  783 #> 4694        165    2  783 #> 4695        200    3  783 #> 4696        179    4  783 #> 4697        156    5  783 #> 4698        120    6  783 #> 4699         75    1  784 #> 4700        165    2  784 #> 4701        200    3  784 #> 4702        182    4  784 #> 4703        151    5  784 #> 4704        141    6  784 #> 4705         75    1  785 #> 4706        165    2  785 #> 4707        200    3  785 #> 4708        184    4  785 #> 4709        151    5  785 #> 4710        132    6  785 #> 4711         75    1  786 #> 4712        165    2  786 #> 4713        200    3  786 #> 4714        192    4  786 #> 4715        159    5  786 #> 4716        152    6  786 #> 4717         75    1  787 #> 4718        165    2  787 #> 4719        200    3  787 #> 4720        179    4  787 #> 4721        158    5  787 #> 4722        145    6  787 #> 4723         75    1  788 #> 4724        165    2  788 #> 4725        200    3  788 #> 4726        182    4  788 #> 4727        154    5  788 #> 4728        129    6  788 #> 4729         75    1  789 #> 4730        165    2  789 #> 4731        200    3  789 #> 4732        167    4  789 #> 4733        159    5  789 #> 4734        125    6  789 #> 4735         75    1  790 #> 4736        165    2  790 #> 4737        200    3  790 #> 4738        179    4  790 #> 4739        157    5  790 #> 4740        142    6  790 #> 4741         75    1  791 #> 4742        165    2  791 #> 4743        200    3  791 #> 4744        187    4  791 #> 4745        172    5  791 #> 4746        135    6  791 #> 4747         75    1  792 #> 4748        165    2  792 #> 4749        200    3  792 #> 4750        178    4  792 #> 4751        165    5  792 #> 4752        136    6  792 #> 4753         75    1  793 #> 4754        165    2  793 #> 4755        200    3  793 #> 4756        176    4  793 #> 4757        170    5  793 #> 4758        149    6  793 #> 4759         75    1  794 #> 4760        165    2  794 #> 4761        200    3  794 #> 4762        186    4  794 #> 4763        153    5  794 #> 4764        145    6  794 #> 4765         75    1  795 #> 4766        165    2  795 #> 4767        200    3  795 #> 4768        165    4  795 #> 4769        151    5  795 #> 4770        136    6  795 #> 4771         75    1  796 #> 4772        165    2  796 #> 4773        200    3  796 #> 4774        182    4  796 #> 4775        160    5  796 #> 4776        138    6  796 #> 4777         75    1  797 #> 4778        165    2  797 #> 4779        200    3  797 #> 4780        168    4  797 #> 4781        151    5  797 #> 4782        137    6  797 #> 4783         75    1  798 #> 4784        165    2  798 #> 4785        200    3  798 #> 4786        174    4  798 #> 4787        161    5  798 #> 4788        150    6  798 #> 4789         75    1  799 #> 4790        165    2  799 #> 4791        200    3  799 #> 4792        203    4  799 #> 4793        156    5  799 #> 4794        135    6  799 #> 4795         75    1  800 #> 4796        165    2  800 #> 4797        200    3  800 #> 4798        168    4  800 #> 4799        152    5  800 #> 4800        133    6  800 #> 4801         75    1  801 #> 4802        165    2  801 #> 4803        200    3  801 #> 4804        184    4  801 #> 4805        157    5  801 #> 4806        136    6  801 #> 4807         75    1  802 #> 4808        165    2  802 #> 4809        200    3  802 #> 4810        164    4  802 #> 4811        164    5  802 #> 4812        151    6  802 #> 4813         75    1  803 #> 4814        165    2  803 #> 4815        200    3  803 #> 4816        188    4  803 #> 4817        158    5  803 #> 4818        151    6  803 #> 4819         75    1  804 #> 4820        165    2  804 #> 4821        200    3  804 #> 4822        187    4  804 #> 4823        163    5  804 #> 4824        154    6  804 #> 4825         75    1  805 #> 4826        165    2  805 #> 4827        200    3  805 #> 4828        183    4  805 #> 4829        158    5  805 #> 4830        135    6  805 #> 4831         75    1  806 #> 4832        165    2  806 #> 4833        200    3  806 #> 4834        181    4  806 #> 4835        153    5  806 #> 4836        138    6  806 #> 4837         75    1  807 #> 4838        165    2  807 #> 4839        200    3  807 #> 4840        176    4  807 #> 4841        147    5  807 #> 4842        131    6  807 #> 4843         75    1  808 #> 4844        165    2  808 #> 4845        200    3  808 #> 4846        182    4  808 #> 4847        159    5  808 #> 4848        160    6  808 #> 4849         75    1  809 #> 4850        165    2  809 #> 4851        200    3  809 #> 4852        173    4  809 #> 4853        161    5  809 #> 4854        149    6  809 #> 4855         75    1  810 #> 4856        165    2  810 #> 4857        200    3  810 #> 4858        174    4  810 #> 4859        159    5  810 #> 4860        148    6  810 #> 4861         75    1  811 #> 4862        165    2  811 #> 4863        200    3  811 #> 4864        175    4  811 #> 4865        169    5  811 #> 4866        138    6  811 #> 4867         75    1  812 #> 4868        165    2  812 #> 4869        200    3  812 #> 4870        170    4  812 #> 4871        159    5  812 #> 4872        138    6  812 #> 4873         75    1  813 #> 4874        165    2  813 #> 4875        200    3  813 #> 4876        173    4  813 #> 4877        156    5  813 #> 4878        129    6  813 #> 4879         75    1  814 #> 4880        165    2  814 #> 4881        200    3  814 #> 4882        177    4  814 #> 4883        157    5  814 #> 4884        137    6  814 #> 4885         75    1  815 #> 4886        165    2  815 #> 4887        200    3  815 #> 4888        176    4  815 #> 4889        149    5  815 #> 4890        131    6  815 #> 4891         75    1  816 #> 4892        165    2  816 #> 4893        200    3  816 #> 4894        172    4  816 #> 4895        172    5  816 #> 4896        149    6  816 #> 4897         75    1  817 #> 4898        165    2  817 #> 4899        200    3  817 #> 4900        169    4  817 #> 4901        151    5  817 #> 4902        140    6  817 #> 4903         75    1  818 #> 4904        165    2  818 #> 4905        200    3  818 #> 4906        171    4  818 #> 4907        160    5  818 #> 4908        145    6  818 #> 4909         75    1  819 #> 4910        165    2  819 #> 4911        200    3  819 #> 4912        177    4  819 #> 4913        167    5  819 #> 4914        155    6  819 #> 4915         75    1  820 #> 4916        165    2  820 #> 4917        200    3  820 #> 4918        184    4  820 #> 4919        155    5  820 #> 4920        163    6  820 #> 4921         75    1  821 #> 4922        165    2  821 #> 4923        200    3  821 #> 4924        175    4  821 #> 4925        172    5  821 #> 4926        128    6  821 #> 4927         75    1  822 #> 4928        165    2  822 #> 4929        200    3  822 #> 4930        170    4  822 #> 4931        159    5  822 #> 4932        139    6  822 #> 4933         75    1  823 #> 4934        165    2  823 #> 4935        200    3  823 #> 4936        169    4  823 #> 4937        165    5  823 #> 4938        152    6  823 #> 4939         75    1  824 #> 4940        165    2  824 #> 4941        200    3  824 #> 4942        168    4  824 #> 4943        155    5  824 #> 4944        143    6  824 #> 4945         75    1  825 #> 4946        165    2  825 #> 4947        200    3  825 #> 4948        169    4  825 #> 4949        164    5  825 #> 4950        135    6  825 #> 4951         75    1  826 #> 4952        165    2  826 #> 4953        200    3  826 #> 4954        184    4  826 #> 4955        160    5  826 #> 4956        140    6  826 #> 4957         75    1  827 #> 4958        165    2  827 #> 4959        200    3  827 #> 4960        185    4  827 #> 4961        159    5  827 #> 4962        134    6  827 #> 4963         75    1  828 #> 4964        165    2  828 #> 4965        200    3  828 #> 4966        170    4  828 #> 4967        170    5  828 #> 4968        135    6  828 #> 4969         75    1  829 #> 4970        165    2  829 #> 4971        200    3  829 #> 4972        171    4  829 #> 4973        173    5  829 #> 4974        134    6  829 #> 4975         75    1  830 #> 4976        165    2  830 #> 4977        200    3  830 #> 4978        174    4  830 #> 4979        159    5  830 #> 4980        143    6  830 #> 4981         75    1  831 #> 4982        165    2  831 #> 4983        200    3  831 #> 4984        168    4  831 #> 4985        164    5  831 #> 4986        125    6  831 #> 4987         75    1  832 #> 4988        165    2  832 #> 4989        200    3  832 #> 4990        182    4  832 #> 4991        163    5  832 #> 4992        132    6  832 #> 4993         75    1  833 #> 4994        165    2  833 #> 4995        200    3  833 #> 4996        178    4  833 #> 4997        165    5  833 #> 4998        140    6  833 #> 4999         75    1  834 #> 5000        165    2  834 #> 5001        200    3  834 #> 5002        172    4  834 #> 5003        153    5  834 #> 5004        143    6  834 #> 5005         75    1  835 #> 5006        165    2  835 #> 5007        200    3  835 #> 5008        179    4  835 #> 5009        158    5  835 #> 5010        134    6  835 #> 5011         75    1  836 #> 5012        165    2  836 #> 5013        200    3  836 #> 5014        176    4  836 #> 5015        166    5  836 #> 5016        152    6  836 #> 5017         75    1  837 #> 5018        165    2  837 #> 5019        200    3  837 #> 5020        178    4  837 #> 5021        159    5  837 #> 5022        134    6  837 #> 5023         75    1  838 #> 5024        165    2  838 #> 5025        200    3  838 #> 5026        175    4  838 #> 5027        162    5  838 #> 5028        132    6  838 #> 5029         75    1  839 #> 5030        165    2  839 #> 5031        200    3  839 #> 5032        188    4  839 #> 5033        144    5  839 #> 5034        143    6  839 #> 5035         75    1  840 #> 5036        165    2  840 #> 5037        200    3  840 #> 5038        177    4  840 #> 5039        162    5  840 #> 5040        148    6  840 #> 5041         75    1  841 #> 5042        165    2  841 #> 5043        200    3  841 #> 5044        177    4  841 #> 5045        161    5  841 #> 5046        133    6  841 #> 5047         75    1  842 #> 5048        165    2  842 #> 5049        200    3  842 #> 5050        171    4  842 #> 5051        163    5  842 #> 5052        137    6  842 #> 5053         75    1  843 #> 5054        165    2  843 #> 5055        200    3  843 #> 5056        175    4  843 #> 5057        162    5  843 #> 5058        147    6  843 #> 5059         75    1  844 #> 5060        165    2  844 #> 5061        200    3  844 #> 5062        181    4  844 #> 5063        159    5  844 #> 5064        124    6  844 #> 5065         75    1  845 #> 5066        165    2  845 #> 5067        200    3  845 #> 5068        176    4  845 #> 5069        159    5  845 #> 5070        137    6  845 #> 5071         75    1  846 #> 5072        165    2  846 #> 5073        200    3  846 #> 5074        174    4  846 #> 5075        159    5  846 #> 5076        132    6  846 #> 5077         75    1  847 #> 5078        165    2  847 #> 5079        200    3  847 #> 5080        180    4  847 #> 5081        160    5  847 #> 5082        158    6  847 #> 5083         75    1  848 #> 5084        165    2  848 #> 5085        200    3  848 #> 5086        188    4  848 #> 5087        158    5  848 #> 5088        131    6  848 #> 5089         75    1  849 #> 5090        165    2  849 #> 5091        200    3  849 #> 5092        179    4  849 #> 5093        153    5  849 #> 5094        158    6  849 #> 5095         75    1  850 #> 5096        165    2  850 #> 5097        200    3  850 #> 5098        185    4  850 #> 5099        166    5  850 #> 5100        148    6  850 #> 5101         75    1  851 #> 5102        165    2  851 #> 5103        200    3  851 #> 5104        170    4  851 #> 5105        167    5  851 #> 5106        143    6  851 #> 5107         75    1  852 #> 5108        165    2  852 #> 5109        200    3  852 #> 5110        184    4  852 #> 5111        161    5  852 #> 5112        138    6  852 #> 5113         75    1  853 #> 5114        165    2  853 #> 5115        200    3  853 #> 5116        174    4  853 #> 5117        168    5  853 #> 5118        128    6  853 #> 5119         75    1  854 #> 5120        165    2  854 #> 5121        200    3  854 #> 5122        177    4  854 #> 5123        159    5  854 #> 5124        134    6  854 #> 5125         75    1  855 #> 5126        165    2  855 #> 5127        200    3  855 #> 5128        173    4  855 #> 5129        154    5  855 #> 5130        134    6  855 #> 5131         75    1  856 #> 5132        165    2  856 #> 5133        200    3  856 #> 5134        175    4  856 #> 5135        161    5  856 #> 5136        124    6  856 #> 5137         75    1  857 #> 5138        165    2  857 #> 5139        200    3  857 #> 5140        192    4  857 #> 5141        163    5  857 #> 5142        133    6  857 #> 5143         75    1  858 #> 5144        165    2  858 #> 5145        200    3  858 #> 5146        180    4  858 #> 5147        163    5  858 #> 5148        140    6  858 #> 5149         75    1  859 #> 5150        165    2  859 #> 5151        200    3  859 #> 5152        180    4  859 #> 5153        166    5  859 #> 5154        140    6  859 #> 5155         75    1  860 #> 5156        165    2  860 #> 5157        200    3  860 #> 5158        182    4  860 #> 5159        167    5  860 #> 5160        132    6  860 #> 5161         75    1  861 #> 5162        165    2  861 #> 5163        200    3  861 #> 5164        184    4  861 #> 5165        169    5  861 #> 5166        150    6  861 #> 5167         75    1  862 #> 5168        165    2  862 #> 5169        200    3  862 #> 5170        175    4  862 #> 5171        164    5  862 #> 5172        143    6  862 #> 5173         75    1  863 #> 5174        165    2  863 #> 5175        200    3  863 #> 5176        183    4  863 #> 5177        167    5  863 #> 5178        139    6  863 #> 5179         75    1  864 #> 5180        165    2  864 #> 5181        200    3  864 #> 5182        188    4  864 #> 5183        159    5  864 #> 5184        136    6  864 #> 5185         75    1  865 #> 5186        165    2  865 #> 5187        200    3  865 #> 5188        171    4  865 #> 5189        164    5  865 #> 5190        145    6  865 #> 5191         75    1  866 #> 5192        165    2  866 #> 5193        200    3  866 #> 5194        180    4  866 #> 5195        156    5  866 #> 5196        145    6  866 #> 5197         75    1  867 #> 5198        165    2  867 #> 5199        200    3  867 #> 5200        177    4  867 #> 5201        158    5  867 #> 5202        136    6  867 #> 5203         75    1  868 #> 5204        165    2  868 #> 5205        200    3  868 #> 5206        184    4  868 #> 5207        161    5  868 #> 5208        136    6  868 #> 5209         75    1  869 #> 5210        165    2  869 #> 5211        200    3  869 #> 5212        192    4  869 #> 5213        152    5  869 #> 5214        137    6  869 #> 5215         75    1  870 #> 5216        165    2  870 #> 5217        200    3  870 #> 5218        173    4  870 #> 5219        149    5  870 #> 5220        127    6  870 #> 5221         75    1  871 #> 5222        165    2  871 #> 5223        200    3  871 #> 5224        188    4  871 #> 5225        157    5  871 #> 5226        126    6  871 #> 5227         75    1  872 #> 5228        165    2  872 #> 5229        200    3  872 #> 5230        171    4  872 #> 5231        153    5  872 #> 5232        132    6  872 #> 5233         75    1  873 #> 5234        165    2  873 #> 5235        200    3  873 #> 5236        182    4  873 #> 5237        163    5  873 #> 5238        139    6  873 #> 5239         75    1  874 #> 5240        165    2  874 #> 5241        200    3  874 #> 5242        174    4  874 #> 5243        156    5  874 #> 5244        150    6  874 #> 5245         75    1  875 #> 5246        165    2  875 #> 5247        200    3  875 #> 5248        180    4  875 #> 5249        173    5  875 #> 5250        137    6  875 #> 5251         75    1  876 #> 5252        165    2  876 #> 5253        200    3  876 #> 5254        179    4  876 #> 5255        159    5  876 #> 5256        144    6  876 #> 5257         75    1  877 #> 5258        165    2  877 #> 5259        200    3  877 #> 5260        174    4  877 #> 5261        165    5  877 #> 5262        134    6  877 #> 5263         75    1  878 #> 5264        165    2  878 #> 5265        200    3  878 #> 5266        175    4  878 #> 5267        153    5  878 #> 5268        147    6  878 #> 5269         75    1  879 #> 5270        165    2  879 #> 5271        200    3  879 #> 5272        179    4  879 #> 5273        152    5  879 #> 5274        131    6  879 #> 5275         75    1  880 #> 5276        165    2  880 #> 5277        200    3  880 #> 5278        177    4  880 #> 5279        163    5  880 #> 5280        133    6  880 #> 5281         75    1  881 #> 5282        165    2  881 #> 5283        200    3  881 #> 5284        187    4  881 #> 5285        166    5  881 #> 5286        127    6  881 #> 5287         75    1  882 #> 5288        165    2  882 #> 5289        200    3  882 #> 5290        172    4  882 #> 5291        153    5  882 #> 5292        157    6  882 #> 5293         75    1  883 #> 5294        165    2  883 #> 5295        200    3  883 #> 5296        181    4  883 #> 5297        173    5  883 #> 5298        139    6  883 #> 5299         75    1  884 #> 5300        165    2  884 #> 5301        200    3  884 #> 5302        178    4  884 #> 5303        167    5  884 #> 5304        132    6  884 #> 5305         75    1  885 #> 5306        165    2  885 #> 5307        200    3  885 #> 5308        190    4  885 #> 5309        165    5  885 #> 5310        146    6  885 #> 5311         75    1  886 #> 5312        165    2  886 #> 5313        200    3  886 #> 5314        182    4  886 #> 5315        158    5  886 #> 5316        130    6  886 #> 5317         75    1  887 #> 5318        165    2  887 #> 5319        200    3  887 #> 5320        178    4  887 #> 5321        156    5  887 #> 5322        135    6  887 #> 5323         75    1  888 #> 5324        165    2  888 #> 5325        200    3  888 #> 5326        172    4  888 #> 5327        157    5  888 #> 5328        143    6  888 #> 5329         75    1  889 #> 5330        165    2  889 #> 5331        200    3  889 #> 5332        182    4  889 #> 5333        157    5  889 #> 5334        146    6  889 #> 5335         75    1  890 #> 5336        165    2  890 #> 5337        200    3  890 #> 5338        183    4  890 #> 5339        157    5  890 #> 5340        144    6  890 #> 5341         75    1  891 #> 5342        165    2  891 #> 5343        200    3  891 #> 5344        179    4  891 #> 5345        166    5  891 #> 5346        138    6  891 #> 5347         75    1  892 #> 5348        165    2  892 #> 5349        200    3  892 #> 5350        174    4  892 #> 5351        144    5  892 #> 5352        154    6  892 #> 5353         75    1  893 #> 5354        165    2  893 #> 5355        200    3  893 #> 5356        169    4  893 #> 5357        147    5  893 #> 5358        125    6  893 #> 5359         75    1  894 #> 5360        165    2  894 #> 5361        200    3  894 #> 5362        178    4  894 #> 5363        157    5  894 #> 5364        143    6  894 #> 5365         75    1  895 #> 5366        165    2  895 #> 5367        200    3  895 #> 5368        177    4  895 #> 5369        166    5  895 #> 5370        137    6  895 #> 5371         75    1  896 #> 5372        165    2  896 #> 5373        200    3  896 #> 5374        171    4  896 #> 5375        152    5  896 #> 5376        147    6  896 #> 5377         75    1  897 #> 5378        165    2  897 #> 5379        200    3  897 #> 5380        184    4  897 #> 5381        157    5  897 #> 5382        135    6  897 #> 5383         75    1  898 #> 5384        165    2  898 #> 5385        200    3  898 #> 5386        167    4  898 #> 5387        162    5  898 #> 5388        142    6  898 #> 5389         75    1  899 #> 5390        165    2  899 #> 5391        200    3  899 #> 5392        201    4  899 #> 5393        165    5  899 #> 5394        146    6  899 #> 5395         75    1  900 #> 5396        165    2  900 #> 5397        200    3  900 #> 5398        188    4  900 #> 5399        162    5  900 #> 5400        136    6  900 #> 5401         75    1  901 #> 5402        165    2  901 #> 5403        200    3  901 #> 5404        184    4  901 #> 5405        157    5  901 #> 5406        136    6  901 #> 5407         75    1  902 #> 5408        165    2  902 #> 5409        200    3  902 #> 5410        171    4  902 #> 5411        157    5  902 #> 5412        140    6  902 #> 5413         75    1  903 #> 5414        165    2  903 #> 5415        200    3  903 #> 5416        176    4  903 #> 5417        152    5  903 #> 5418        139    6  903 #> 5419         75    1  904 #> 5420        165    2  904 #> 5421        200    3  904 #> 5422        171    4  904 #> 5423        159    5  904 #> 5424        130    6  904 #> 5425         75    1  905 #> 5426        165    2  905 #> 5427        200    3  905 #> 5428        184    4  905 #> 5429        166    5  905 #> 5430        147    6  905 #> 5431         75    1  906 #> 5432        165    2  906 #> 5433        200    3  906 #> 5434        176    4  906 #> 5435        147    5  906 #> 5436        132    6  906 #> 5437         75    1  907 #> 5438        165    2  907 #> 5439        200    3  907 #> 5440        177    4  907 #> 5441        161    5  907 #> 5442        126    6  907 #> 5443         75    1  908 #> 5444        165    2  908 #> 5445        200    3  908 #> 5446        177    4  908 #> 5447        163    5  908 #> 5448        136    6  908 #> 5449         75    1  909 #> 5450        165    2  909 #> 5451        200    3  909 #> 5452        174    4  909 #> 5453        165    5  909 #> 5454        134    6  909 #> 5455         75    1  910 #> 5456        165    2  910 #> 5457        200    3  910 #> 5458        186    4  910 #> 5459        167    5  910 #> 5460        132    6  910 #> 5461         75    1  911 #> 5462        165    2  911 #> 5463        200    3  911 #> 5464        180    4  911 #> 5465        157    5  911 #> 5466        141    6  911 #> 5467         75    1  912 #> 5468        165    2  912 #> 5469        200    3  912 #> 5470        174    4  912 #> 5471        163    5  912 #> 5472        143    6  912 #> 5473         75    1  913 #> 5474        165    2  913 #> 5475        200    3  913 #> 5476        177    4  913 #> 5477        158    5  913 #> 5478        137    6  913 #> 5479         75    1  914 #> 5480        165    2  914 #> 5481        200    3  914 #> 5482        175    4  914 #> 5483        162    5  914 #> 5484        163    6  914 #> 5485         75    1  915 #> 5486        165    2  915 #> 5487        200    3  915 #> 5488        188    4  915 #> 5489        159    5  915 #> 5490        132    6  915 #> 5491         75    1  916 #> 5492        165    2  916 #> 5493        200    3  916 #> 5494        183    4  916 #> 5495        160    5  916 #> 5496        142    6  916 #> 5497         75    1  917 #> 5498        165    2  917 #> 5499        200    3  917 #> 5500        167    4  917 #> 5501        159    5  917 #> 5502        131    6  917 #> 5503         75    1  918 #> 5504        165    2  918 #> 5505        200    3  918 #> 5506        185    4  918 #> 5507        161    5  918 #> 5508        149    6  918 #> 5509         75    1  919 #> 5510        165    2  919 #> 5511        200    3  919 #> 5512        176    4  919 #> 5513        165    5  919 #> 5514        129    6  919 #> 5515         75    1  920 #> 5516        165    2  920 #> 5517        200    3  920 #> 5518        172    4  920 #> 5519        152    5  920 #> 5520        137    6  920 #> 5521         75    1  921 #> 5522        165    2  921 #> 5523        200    3  921 #> 5524        183    4  921 #> 5525        163    5  921 #> 5526        128    6  921 #> 5527         75    1  922 #> 5528        165    2  922 #> 5529        200    3  922 #> 5530        182    4  922 #> 5531        164    5  922 #> 5532        155    6  922 #> 5533         75    1  923 #> 5534        165    2  923 #> 5535        200    3  923 #> 5536        179    4  923 #> 5537        167    5  923 #> 5538        144    6  923 #> 5539         75    1  924 #> 5540        165    2  924 #> 5541        200    3  924 #> 5542        187    4  924 #> 5543        148    5  924 #> 5544        134    6  924 #> 5545         75    1  925 #> 5546        165    2  925 #> 5547        200    3  925 #> 5548        169    4  925 #> 5549        158    5  925 #> 5550        129    6  925 #> 5551         75    1  926 #> 5552        165    2  926 #> 5553        200    3  926 #> 5554        170    4  926 #> 5555        157    5  926 #> 5556        130    6  926 #> 5557         75    1  927 #> 5558        165    2  927 #> 5559        200    3  927 #> 5560        171    4  927 #> 5561        155    5  927 #> 5562        135    6  927 #> 5563         75    1  928 #> 5564        165    2  928 #> 5565        200    3  928 #> 5566        179    4  928 #> 5567        157    5  928 #> 5568        131    6  928 #> 5569         75    1  929 #> 5570        165    2  929 #> 5571        200    3  929 #> 5572        176    4  929 #> 5573        166    5  929 #> 5574        136    6  929 #> 5575         75    1  930 #> 5576        165    2  930 #> 5577        200    3  930 #> 5578        173    4  930 #> 5579        158    5  930 #> 5580        141    6  930 #> 5581         75    1  931 #> 5582        165    2  931 #> 5583        200    3  931 #> 5584        172    4  931 #> 5585        144    5  931 #> 5586        145    6  931 #> 5587         75    1  932 #> 5588        165    2  932 #> 5589        200    3  932 #> 5590        189    4  932 #> 5591        162    5  932 #> 5592        140    6  932 #> 5593         75    1  933 #> 5594        165    2  933 #> 5595        200    3  933 #> 5596        175    4  933 #> 5597        164    5  933 #> 5598        139    6  933 #> 5599         75    1  934 #> 5600        165    2  934 #> 5601        200    3  934 #> 5602        181    4  934 #> 5603        163    5  934 #> 5604        129    6  934 #> 5605         75    1  935 #> 5606        165    2  935 #> 5607        200    3  935 #> 5608        176    4  935 #> 5609        153    5  935 #> 5610        142    6  935 #> 5611         75    1  936 #> 5612        165    2  936 #> 5613        200    3  936 #> 5614        172    4  936 #> 5615        160    5  936 #> 5616        149    6  936 #> 5617         75    1  937 #> 5618        165    2  937 #> 5619        200    3  937 #> 5620        172    4  937 #> 5621        161    5  937 #> 5622        125    6  937 #> 5623         75    1  938 #> 5624        165    2  938 #> 5625        200    3  938 #> 5626        191    4  938 #> 5627        165    5  938 #> 5628        142    6  938 #> 5629         75    1  939 #> 5630        165    2  939 #> 5631        200    3  939 #> 5632        174    4  939 #> 5633        164    5  939 #> 5634        129    6  939 #> 5635         75    1  940 #> 5636        165    2  940 #> 5637        200    3  940 #> 5638        175    4  940 #> 5639        161    5  940 #> 5640        138    6  940 #> 5641         75    1  941 #> 5642        165    2  941 #> 5643        200    3  941 #> 5644        170    4  941 #> 5645        160    5  941 #> 5646        124    6  941 #> 5647         75    1  942 #> 5648        165    2  942 #> 5649        200    3  942 #> 5650        167    4  942 #> 5651        158    5  942 #> 5652        136    6  942 #> 5653         75    1  943 #> 5654        165    2  943 #> 5655        200    3  943 #> 5656        169    4  943 #> 5657        154    5  943 #> 5658        138    6  943 #> 5659         75    1  944 #> 5660        165    2  944 #> 5661        200    3  944 #> 5662        163    4  944 #> 5663        159    5  944 #> 5664        127    6  944 #> 5665         75    1  945 #> 5666        165    2  945 #> 5667        200    3  945 #> 5668        177    4  945 #> 5669        156    5  945 #> 5670        136    6  945 #> 5671         75    1  946 #> 5672        165    2  946 #> 5673        200    3  946 #> 5674        180    4  946 #> 5675        160    5  946 #> 5676        145    6  946 #> 5677         75    1  947 #> 5678        165    2  947 #> 5679        200    3  947 #> 5680        172    4  947 #> 5681        154    5  947 #> 5682        138    6  947 #> 5683         75    1  948 #> 5684        165    2  948 #> 5685        200    3  948 #> 5686        180    4  948 #> 5687        151    5  948 #> 5688        135    6  948 #> 5689         75    1  949 #> 5690        165    2  949 #> 5691        200    3  949 #> 5692        176    4  949 #> 5693        155    5  949 #> 5694        126    6  949 #> 5695         75    1  950 #> 5696        165    2  950 #> 5697        200    3  950 #> 5698        180    4  950 #> 5699        147    5  950 #> 5700        132    6  950 #> 5701         75    1  951 #> 5702        165    2  951 #> 5703        200    3  951 #> 5704        174    4  951 #> 5705        163    5  951 #> 5706        139    6  951 #> 5707         75    1  952 #> 5708        165    2  952 #> 5709        200    3  952 #> 5710        174    4  952 #> 5711        151    5  952 #> 5712        152    6  952 #> 5713         75    1  953 #> 5714        165    2  953 #> 5715        200    3  953 #> 5716        169    4  953 #> 5717        157    5  953 #> 5718        126    6  953 #> 5719         75    1  954 #> 5720        165    2  954 #> 5721        200    3  954 #> 5722        168    4  954 #> 5723        180    5  954 #> 5724        138    6  954 #> 5725         75    1  955 #> 5726        165    2  955 #> 5727        200    3  955 #> 5728        180    4  955 #> 5729        170    5  955 #> 5730        137    6  955 #> 5731         75    1  956 #> 5732        165    2  956 #> 5733        200    3  956 #> 5734        172    4  956 #> 5735        165    5  956 #> 5736        134    6  956 #> 5737         75    1  957 #> 5738        165    2  957 #> 5739        200    3  957 #> 5740        176    4  957 #> 5741        161    5  957 #> 5742        134    6  957 #> 5743         75    1  958 #> 5744        165    2  958 #> 5745        200    3  958 #> 5746        175    4  958 #> 5747        171    5  958 #> 5748        131    6  958 #> 5749         75    1  959 #> 5750        165    2  959 #> 5751        200    3  959 #> 5752        177    4  959 #> 5753        161    5  959 #> 5754        139    6  959 #> 5755         75    1  960 #> 5756        165    2  960 #> 5757        200    3  960 #> 5758        178    4  960 #> 5759        164    5  960 #> 5760        139    6  960 #> 5761         75    1  961 #> 5762        165    2  961 #> 5763        200    3  961 #> 5764        190    4  961 #> 5765        161    5  961 #> 5766        146    6  961 #> 5767         75    1  962 #> 5768        165    2  962 #> 5769        200    3  962 #> 5770        177    4  962 #> 5771        152    5  962 #> 5772        158    6  962 #> 5773         75    1  963 #> 5774        165    2  963 #> 5775        200    3  963 #> 5776        180    4  963 #> 5777        156    5  963 #> 5778        137    6  963 #> 5779         75    1  964 #> 5780        165    2  964 #> 5781        200    3  964 #> 5782        183    4  964 #> 5783        162    5  964 #> 5784        127    6  964 #> 5785         75    1  965 #> 5786        165    2  965 #> 5787        200    3  965 #> 5788        177    4  965 #> 5789        158    5  965 #> 5790        135    6  965 #> 5791         75    1  966 #> 5792        165    2  966 #> 5793        200    3  966 #> 5794        170    4  966 #> 5795        147    5  966 #> 5796        129    6  966 #> 5797         75    1  967 #> 5798        165    2  967 #> 5799        200    3  967 #> 5800        167    4  967 #> 5801        152    5  967 #> 5802        136    6  967 #> 5803         75    1  968 #> 5804        165    2  968 #> 5805        200    3  968 #> 5806        178    4  968 #> 5807        167    5  968 #> 5808        134    6  968 #> 5809         75    1  969 #> 5810        165    2  969 #> 5811        200    3  969 #> 5812        171    4  969 #> 5813        166    5  969 #> 5814        134    6  969 #> 5815         75    1  970 #> 5816        165    2  970 #> 5817        200    3  970 #> 5818        177    4  970 #> 5819        172    5  970 #> 5820        134    6  970 #> 5821         75    1  971 #> 5822        165    2  971 #> 5823        200    3  971 #> 5824        177    4  971 #> 5825        153    5  971 #> 5826        147    6  971 #> 5827         75    1  972 #> 5828        165    2  972 #> 5829        200    3  972 #> 5830        190    4  972 #> 5831        164    5  972 #> 5832        145    6  972 #> 5833         75    1  973 #> 5834        165    2  973 #> 5835        200    3  973 #> 5836        178    4  973 #> 5837        158    5  973 #> 5838        125    6  973 #> 5839         75    1  974 #> 5840        165    2  974 #> 5841        200    3  974 #> 5842        184    4  974 #> 5843        147    5  974 #> 5844        136    6  974 #> 5845         75    1  975 #> 5846        165    2  975 #> 5847        200    3  975 #> 5848        188    4  975 #> 5849        164    5  975 #> 5850        122    6  975 #> 5851         75    1  976 #> 5852        165    2  976 #> 5853        200    3  976 #> 5854        173    4  976 #> 5855        168    5  976 #> 5856        144    6  976 #> 5857         75    1  977 #> 5858        165    2  977 #> 5859        200    3  977 #> 5860        184    4  977 #> 5861        159    5  977 #> 5862        134    6  977 #> 5863         75    1  978 #> 5864        165    2  978 #> 5865        200    3  978 #> 5866        174    4  978 #> 5867        155    5  978 #> 5868        143    6  978 #> 5869         75    1  979 #> 5870        165    2  979 #> 5871        200    3  979 #> 5872        172    4  979 #> 5873        164    5  979 #> 5874        155    6  979 #> 5875         75    1  980 #> 5876        165    2  980 #> 5877        200    3  980 #> 5878        178    4  980 #> 5879        146    5  980 #> 5880        139    6  980 #> 5881         75    1  981 #> 5882        165    2  981 #> 5883        200    3  981 #> 5884        184    4  981 #> 5885        159    5  981 #> 5886        137    6  981 #> 5887         75    1  982 #> 5888        165    2  982 #> 5889        200    3  982 #> 5890        173    4  982 #> 5891        152    5  982 #> 5892        135    6  982 #> 5893         75    1  983 #> 5894        165    2  983 #> 5895        200    3  983 #> 5896        185    4  983 #> 5897        148    5  983 #> 5898        137    6  983 #> 5899         75    1  984 #> 5900        165    2  984 #> 5901        200    3  984 #> 5902        190    4  984 #> 5903        157    5  984 #> 5904        140    6  984 #> 5905         75    1  985 #> 5906        165    2  985 #> 5907        200    3  985 #> 5908        177    4  985 #> 5909        165    5  985 #> 5910        140    6  985 #> 5911         75    1  986 #> 5912        165    2  986 #> 5913        200    3  986 #> 5914        173    4  986 #> 5915        165    5  986 #> 5916        142    6  986 #> 5917         75    1  987 #> 5918        165    2  987 #> 5919        200    3  987 #> 5920        169    4  987 #> 5921        158    5  987 #> 5922        123    6  987 #> 5923         75    1  988 #> 5924        165    2  988 #> 5925        200    3  988 #> 5926        179    4  988 #> 5927        152    5  988 #> 5928        150    6  988 #> 5929         75    1  989 #> 5930        165    2  989 #> 5931        200    3  989 #> 5932        173    4  989 #> 5933        153    5  989 #> 5934        143    6  989 #> 5935         75    1  990 #> 5936        165    2  990 #> 5937        200    3  990 #> 5938        170    4  990 #> 5939        157    5  990 #> 5940        147    6  990 #> 5941         75    1  991 #> 5942        165    2  991 #> 5943        200    3  991 #> 5944        177    4  991 #> 5945        152    5  991 #> 5946        122    6  991 #> 5947         75    1  992 #> 5948        165    2  992 #> 5949        200    3  992 #> 5950        181    4  992 #> 5951        157    5  992 #> 5952        136    6  992 #> 5953         75    1  993 #> 5954        165    2  993 #> 5955        200    3  993 #> 5956        170    4  993 #> 5957        159    5  993 #> 5958        150    6  993 #> 5959         75    1  994 #> 5960        165    2  994 #> 5961        200    3  994 #> 5962        184    4  994 #> 5963        160    5  994 #> 5964        143    6  994 #> 5965         75    1  995 #> 5966        165    2  995 #> 5967        200    3  995 #> 5968        186    4  995 #> 5969        161    5  995 #> 5970        140    6  995 #> 5971         75    1  996 #> 5972        165    2  996 #> 5973        200    3  996 #> 5974        176    4  996 #> 5975        179    5  996 #> 5976        129    6  996 #> 5977         75    1  997 #> 5978        165    2  997 #> 5979        200    3  997 #> 5980        180    4  997 #> 5981        163    5  997 #> 5982        130    6  997 #> 5983         75    1  998 #> 5984        165    2  998 #> 5985        200    3  998 #> 5986        186    4  998 #> 5987        161    5  998 #> 5988        141    6  998 #> 5989         75    1  999 #> 5990        165    2  999 #> 5991        200    3  999 #> 5992        184    4  999 #> 5993        162    5  999 #> 5994        136    6  999 #> 5995         75    1 1000 #> 5996        165    2 1000 #> 5997        200    3 1000 #> 5998        176    4 1000 #> 5999        164    5 1000 #> 6000        136    6 1000"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a delay distribution from a reporting triangle — estimate_delay","title":"Estimate a delay distribution from a reporting triangle — estimate_delay","text":"Provides estimate reporting delay function delay, based reporting triangle specified maximum delay number reference date observations used estimation. point estimate delay computed empirically, using iterative algorithm starting recent observations. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a delay distribution from a reporting triangle — estimate_delay","text":"","code":"estimate_delay(   reporting_triangle,   max_delay = ncol(reporting_triangle) - 1,   n = nrow(reporting_triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a delay distribution from a reporting triangle — estimate_delay","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(reporting_triangle).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a delay distribution from a reporting triangle — estimate_delay","text":"Vector indexed 0 length max_delay + 1 columns indicating point estimate empirical probability mass delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a delay distribution from a reporting triangle — estimate_delay","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- estimate_delay(   reporting_triangle = triangle,   max_delay = 3,   n = 4 ) delay_pmf #> [1] 0.5029412 0.2514706 0.1455882 0.1000000"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate uncertainty parameters — estimate_uncertainty","title":"Estimate uncertainty parameters — estimate_uncertainty","text":"function ingests list point nowcast matrices corresponding list truncated reporting matrices uses estimate vector uncertainty parameters observations estimates horizon, starting 0 max delay number horizons.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate uncertainty parameters — estimate_uncertainty","text":"","code":"estimate_uncertainty(   point_nowcast_matrices,   truncated_reporting_triangles,   retro_reporting_triangles,   n = length(point_nowcast_matrices),   uncertainty_model = fit_by_horizon,   ref_time_aggregator = identity,   delay_aggregator = function(x) rowSums(x, na.rm = TRUE) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate uncertainty parameters — estimate_uncertainty","text":"point_nowcast_matrices List point nowcast matrices rows represent reference time points columns represent delays. truncated_reporting_triangles List truncated reporting matrices, containing observations latest reference time. Elements list paired elements point_nowcast_matrices. retro_reporting_triangles List n truncated reporting triangle matrices many rows available given truncation. n Integer indicating number reporting matrices use estimate uncertainty parameters. uncertainty_model Function ingests matrix observations matrix predictions returns vector can used apply uncertainty using error model. Default fit_by_horizon arguments obs matrix observations pred matrix predictions fits column (horizon) negative binomial observation model default. user can specify different fitting model replacing fit_model argument fit_by_horizon. ref_time_aggregator Function operates along rows (reference times) retrospective point nowcast matrix aggregated across columns (delays). Default identity aggregate across reference times. delay_aggregator Function operates along columns (delays) retrospective point nowcast matrix aggregated across reference times. Default function(x) rowSums(x, na.rm = TRUE).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate uncertainty parameters — estimate_uncertainty","text":"uncertainty_params Vector length number horizons, element representing estimate uncertainty parameter horizon. specific parameter type depends chosen error model.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate uncertainty parameters — estimate_uncertainty","text":"","code":"triangle <- matrix(   c(     78, 40, 24, 9,     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 8,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle, n = 3) retro_rts <- construct_triangles(trunc_rts)  retro_nowcasts <- fill_triangles(retro_rts, n = 5) # Estimate dispersion parameters using default (negative binomial error # model on the sums) disp_params <- estimate_uncertainty(   point_nowcast_matrices = retro_nowcasts,   truncated_reporting_triangles = trunc_rts,   retro_reporting_triangles = retro_rts ) disp_params #> [1] 999.999942   4.995964   3.937042  # Estimate dispersion parameters from rolling sum on the reference times if (requireNamespace(\"zoo\", quietly = TRUE)) {   disp_params_agg <- estimate_uncertainty(     point_nowcast_matrices = retro_nowcasts,     truncated_reporting_triangles = trunc_rts,     retro_reporting_triangles = retro_rts,     ref_time_aggregator = function(x) zoo::rollsum(x, k = 2, align = \"right\")   )   disp_params_agg } #> [1] 333.84093  10.32929  16.76673"},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate point nowcast — fill_triangle","title":"Generate point nowcast — fill_triangle","text":"function ingests reporting triangle matrix optionally, delay distribution, returns completed reporting square represents point nowcast. delay distribution specified, used generate nowcast, otherwise, delay distribution estimated reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate point nowcast — fill_triangle","text":"","code":"fill_triangle(   reporting_triangle,   max_delay = ncol(reporting_triangle) - 1,   n = nrow(reporting_triangle),   delay_pmf = NULL )"},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate point nowcast — fill_triangle","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(reporting_triangle). delay_pmf Vector delays assumed indexed starting first delay column reporting_triangle. Default NULL, estimate delay reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate point nowcast — fill_triangle","text":"point_nowcast_matrix Matrix number rows columns reporting_triangle missing values filled point estimates.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate point nowcast — fill_triangle","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) point_nowcast_matrix <- fill_triangle(   reporting_triangle = triangle ) point_nowcast_matrix #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 14.33572 #> [4,]   80 40.00000 23.17697 12.82918 #> [5,]   70 37.26249 20.72155 11.46862"},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate retrospective nowcasts — fill_triangles","title":"Generate retrospective nowcasts — fill_triangles","text":"function ingests list incomplete reporting triangles generates list point nowcast matrices, based delay estimated triangle corresponding delay passed . uses specified n number reference times estimate delay retrospective reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate retrospective nowcasts — fill_triangles","text":"","code":"fill_triangles(   retro_reporting_triangles,   max_delay = min(sapply(retro_reporting_triangles, ncol)) - 1,   n = min(sapply(retro_reporting_triangles, nrow)),   delay_pmf = NULL )"},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate retrospective nowcasts — fill_triangles","text":"retro_reporting_triangles List n truncated reporting triangle matrices many rows available given truncation. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(reporting_triangle) -1. n Integer indicating number reference times (number rows) use estimate delay distribution reporting triangle. Default minimum number rows matrices list_of_rts. delay_pmf Vector list vectors delays assumed indexed starting first delay column matrices retro_reporting_triangles. list, must length retro_reporting_triangles, elements aligning. Default NULL","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate retrospective nowcasts — fill_triangles","text":"point_nowcast_matrices List number elements input retro_reporting_trianglesbut reporting triangle filled based delay estimated reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fill_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate retrospective nowcasts — fill_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle) retro_rts <- construct_triangles(trunc_rts) retro_pt_nowcast_mat_list <- fill_triangles(retro_rts) retro_pt_nowcast_mat_list[1:3] #> [[1]] #>      [,1]     [,2]     [,3]     [,4] #> [1,]   65 46.00000 21.00000  7.00000 #> [2,]   70 40.00000 20.00000  5.00000 #> [3,]   80 50.00000 10.00000 10.00000 #> [4,]  100 40.00000 31.00000 12.21905 #> [5,]   95 45.00000 21.28807 11.52534 #> [6,]   82 40.47865 18.62742 10.08377 #>  #> [[2]] #>      [,1]     [,2]    [,3]     [,4] #> [1,]   65 46.00000 21.0000 7.000000 #> [2,]   70 40.00000 20.0000 5.000000 #> [3,]   80 50.00000 10.0000 5.386040 #> [4,]  100 40.00000 17.5180 6.059809 #> [5,]   95 49.62717 18.0964 6.260023 #>  #> [[3]] #>      [,1]   [,2]     [,3]      [,4] #> [1,]   65 46.000 21.00000  7.000000 #> [2,]   70 40.000 20.00000  6.896610 #> [3,]   80 50.000 24.15456  8.177534 #> [4,]  100 63.578 30.38396 10.288532 #>"},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_by_horizon.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function that fits its each column of the matrix (horizon) to an observation model. — fit_by_horizon","title":"Helper function that fits its each column of the matrix (horizon) to an observation model. — fit_by_horizon","text":"Helper function fits column matrix (horizon) observation model.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_by_horizon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function that fits its each column of the matrix (horizon) to an observation model. — fit_by_horizon","text":"","code":"fit_by_horizon(obs, pred, fit_model = fit_nb)"},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_by_horizon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function that fits its each column of the matrix (horizon) to an observation model. — fit_by_horizon","text":"obs Matrix vector observations. pred Matrix vector predictions. fit_model Function ingests observations expectations returns uncertainty parameters, default fit_nb.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_by_horizon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function that fits its each column of the matrix (horizon) to an observation model. — fit_by_horizon","text":"Vector uncertainty parameters length number columns obs matrix.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_by_horizon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function that fits its each column of the matrix (horizon) to an observation model. — fit_by_horizon","text":"","code":"obs <- matrix(   c(     5, 6, 2,     1, 4, 2,     8, 4, 2   ),   nrow = 3,   byrow = TRUE ) pred <- matrix(   c(     4.2, 5.2, 1.8,     0.7, 3.5, 3.4,     7.3, 4.1, 1.2   ),   nrow = 3,   byrow = TRUE ) disp <- fit_by_horizon(obs = obs, pred = pred) disp #> [1] 999.9999 999.9999 999.9999"},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a negative binomial to a vector of observations and expectations — fit_nb","title":"Fit a negative binomial to a vector of observations and expectations — fit_nb","text":"Takes vector observations vector expectations performs MLE estimator estimate dispersion parameter negative binomial. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7fab4dce7b559c3076ab643cf22048cb5fb84cc2/code/baseline/functions.R#L404 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a negative binomial to a vector of observations and expectations — fit_nb","text":"","code":"fit_nb(x, mu)"},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a negative binomial to a vector of observations and expectations — fit_nb","text":"x Vector observed values. mu Vector expected values.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a negative binomial to a vector of observations and expectations — fit_nb","text":"maximum likelihood estimate dispersion","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/fit_nb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a negative binomial to a vector of observations and expectations — fit_nb","text":"","code":"obs <- c(4, 8, 10) pred <- c(3.1, 7.2, 11) disp <- fit_nb(obs, pred) disp #> [1] 999.9999"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from negative binomial model given a set of predictions — sample_nb","title":"Sample from negative binomial model given a set of predictions — sample_nb","text":"Sample negative binomial model given set predictions","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from negative binomial model given a set of predictions — sample_nb","text":"","code":"sample_nb(pred, uncertainty_params)"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from negative binomial model given a set of predictions — sample_nb","text":"pred Vector predictions. uncertainty_params Vector uncertainty parameters.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from negative binomial model given a set of predictions — sample_nb","text":"sampled_pred Object dimensions pred representing single draw negative binomial distribution specified uncertainty params.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from negative binomial model given a set of predictions — sample_nb","text":"","code":"pred <- c(3.2, 4.6) sampled_preds <- sample_nb(pred,   uncertainty_params = c(50, 100) ) sampled_preds #> [1] 4 1"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single draw of a nowcast combining observed and predicted values — sample_nowcast","title":"Generate a single draw of a nowcast combining observed and predicted values — sample_nowcast","text":"Generate single draw nowcast combining observed predicted values","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single draw of a nowcast combining observed and predicted values — sample_nowcast","text":"","code":"sample_nowcast(   point_nowcast_matrix,   reporting_triangle,   uncertainty_params,   uncertainty_sampler = sample_nb,   ref_time_aggregator = identity,   delay_aggregator = function(x) rowSums(x, na.rm = TRUE) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single draw of a nowcast combining observed and predicted values — sample_nowcast","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). uncertainty_params Vector uncertainty parameters ordered horizon 1 maximum horizon. Note reversed internally match ordering point_nowcast_matrix (horizon 1 last entry). uncertainty_sampler Function ingests vector matrix predictions vector uncertainty parameters generates draws observation model. Default sample_nb expects arguments pred vector predictions uncertainty parameters corresponding vector uncertainty parameters, draws negative binomial element vector. ref_time_aggregator Function operates along rows (reference times) retrospective point nowcast matrix aggregated across columns (delays). Default identity aggregate across reference times. delay_aggregator Function operates along columns (delays) retrospective point nowcast matrix aggregated across reference times. Default function(x) rowSums(x, na.rm = TRUE).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single draw of a nowcast combining observed and predicted values — sample_nowcast","text":"Vector predicted counts reference time based combining observed counts predicted counts unobserved elements.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a single draw of a nowcast combining observed and predicted values — sample_nowcast","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 16.8,     80, 40, 21.2, 19.5,     70, 34.5, 15.4, 9.1   ),   nrow = 5,   byrow = TRUE ) reporting_triangle <- construct_triangle(point_nowcast_matrix) disp <- c(0.8, 12.4, 9.1) nowcast_draw <- sample_nowcast(   point_nowcast_matrix,   reporting_triangle,   disp ) nowcast_draw #>      [,1] #> [1,]  165 #> [2,]  200 #> [3,]  170 #> [4,]  219 #> [5,]  101"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate multiple draws of a nowcast combining observed and predicted values — sample_nowcasts","title":"Generate multiple draws of a nowcast combining observed and predicted values — sample_nowcasts","text":"Generate multiple draws nowcast combining observed predicted values","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate multiple draws of a nowcast combining observed and predicted values — sample_nowcasts","text":"","code":"sample_nowcasts(   point_nowcast_matrix,   reporting_triangle,   uncertainty_params,   draws = 1000,   ... )"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate multiple draws of a nowcast combining observed and predicted values — sample_nowcasts","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). uncertainty_params Vector uncertainty parameters ordered horizon 1 maximum horizon. Note reversed internally match ordering point_nowcast_matrix (horizon 1 last entry). draws Integer indicating number draws predicted nowcast vector generate. Default 1000. ... Additional arguments passed sample_nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate multiple draws of a nowcast combining observed and predicted values — sample_nowcasts","text":"Dataframe containing information multiple draws columns reference time (time), predicted counts (pred_count), draw number (draw).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_nowcasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate multiple draws of a nowcast combining observed and predicted values — sample_nowcasts","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 16.8,     80, 40, 21.2, 19.5,     70, 34.5, 15.4, 9.1   ),   nrow = 5,   byrow = TRUE ) reporting_triangle <- construct_triangle(point_nowcast_matrix) disp <- c(0.8, 12.4, 9.1) nowcast_draws <- sample_nowcasts(   point_nowcast_matrix,   reporting_triangle,   disp,   draws = 5 ) nowcast_draws #>    pred_count time draw #> 1         165    1    1 #> 2         200    2    1 #> 3         169    3    1 #> 4         142    4    1 #> 5          93    5    1 #> 6         165    1    2 #> 7         200    2    2 #> 8         166    3    2 #> 9         154    4    2 #> 10         95    5    2 #> 11        165    1    3 #> 12        200    2    3 #> 13        186    3    3 #> 14        164    4    3 #> 15         70    5    3 #> 16        165    1    4 #> 17        200    2    4 #> 18        163    3    4 #> 19        167    4    4 #> 20        120    5    4 #> 21        165    1    5 #> 22        200    2    5 #> 23        181    3    5 #> 24        197    4    5 #> 25        291    5    5"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a draw of only the predicted elements of the nowcast vector — sample_prediction","title":"Get a draw of only the predicted elements of the nowcast vector — sample_prediction","text":"Get draw predicted elements nowcast vector","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a draw of only the predicted elements of the nowcast vector — sample_prediction","text":"","code":"sample_prediction(   point_nowcast_matrix,   reporting_triangle,   uncertainty_params,   uncertainty_sampler = sample_nb,   ref_time_aggregator = identity,   delay_aggregator = function(x) rowSums(x, na.rm = TRUE) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a draw of only the predicted elements of the nowcast vector — sample_prediction","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). uncertainty_params Vector uncertainty parameters ordered horizon 1 maximum horizon. Note reversed internally match ordering point_nowcast_matrix (horizon 1 last entry). uncertainty_sampler Function ingests vector matrix predictions vector uncertainty parameters generates draws observation model. Default sample_nb expects arguments pred vector predictions uncertainty parameters corresponding vector uncertainty parameters, draws negative binomial element vector. ref_time_aggregator Function operates along rows (reference times) retrospective point nowcast matrix aggregated across columns (delays). Default identity aggregate across reference times. delay_aggregator Function operates along columns (delays) retrospective point nowcast matrix aggregated across reference times. Default function(x) rowSums(x, na.rm = TRUE).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_prediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a draw of only the predicted elements of the nowcast vector — sample_prediction","text":"Vector predicted draws reference time, reference times input point_nowcast_matrix.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_prediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a draw of only the predicted elements of the nowcast vector — sample_prediction","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 16.8,     80, 40, 21.2, 19.5,     70, 34.5, 15.4, 9.1   ),   nrow = 5,   byrow = TRUE ) reporting_triangle <- construct_triangle(point_nowcast_matrix) disp <- c(0.8, 12.4, 9.1) nowcast_pred_draw <- sample_prediction(   point_nowcast_matrix,   reporting_triangle,   disp ) nowcast_pred_draw #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]   22 #> [4,]   43 #> [5,]   45  # Get draws on the rolling sum if (requireNamespace(\"zoo\", quietly = TRUE)) {   nowcast_pred_draw_agg <- sample_prediction(     point_nowcast_matrix,     reporting_triangle,     disp,     ref_time_aggregator = function(x) zoo::rollsum(x, k = 2, align = \"right\")   )   nowcast_pred_draw_agg } #>      [,1] #> [1,]    0 #> [2,]   42 #> [3,]   98 #> [4,]   25"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — sample_predictions","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — sample_predictions","text":"Get dataframe multiple draws predicted elements nowcast vector","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — sample_predictions","text":"","code":"sample_predictions(   point_nowcast_matrix,   reporting_triangle,   uncertainty_params,   draws = 1000,   ... )"},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — sample_predictions","text":"point_nowcast_matrix Matrix point nowcast predictions observations, rows representing reference times columns representing delays. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). uncertainty_params Vector uncertainty parameters ordered horizon 1 maximum horizon. Note reversed internally match ordering point_nowcast_matrix (horizon 1 last entry). draws Integer indicating number draws predicted nowcast vector generate. Default 1000. ... Additional arguments passed sample_prediction.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — sample_predictions","text":"Dataframe containing predicted point nowcast vectors indexed reference time (pred_count), reference time (time), draw index (draw).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/sample_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a dataframe of multiple draws of only the predicted elements of the nowcast vector — sample_predictions","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 16.8,     80, 40, 21.2, 19.5,     70, 34.5, 15.4, 9.1   ),   nrow = 5,   byrow = TRUE ) reporting_triangle <- construct_triangle(point_nowcast_matrix) disp <- c(0.8, 12.4, 9.1) nowcast_pred_draws <- sample_predictions(   point_nowcast_matrix,   reporting_triangle,   disp,   draws = 5 ) nowcast_pred_draws #>    pred_count time draw #> 1           0    1    1 #> 2           0    2    1 #> 3          21    3    1 #> 4          28    4    1 #> 5         100    5    1 #> 6           0    1    2 #> 7           0    2    2 #> 8          13    3    2 #> 9          40    4    2 #> 10         73    5    2 #> 11          0    1    3 #> 12          0    2    3 #> 13         20    3    3 #> 14         11    4    3 #> 15         83    5    3 #> 16          0    1    4 #> 17          0    2    4 #> 18          8    3    4 #> 19         51    4    4 #> 20         81    5    4 #> 21          0    1    5 #> 22          0    2    5 #> 23          9    3    5 #> 24         27    4    5 #> 25         28    5    5 # Get nowcast pred draws over rolling sum if (requireNamespace(\"zoo\", quietly = TRUE)) {   nowcast_pred_draws_rolling_df <- sample_predictions(     point_nowcast_matrix,     reporting_triangle,     disp,     500,     ref_time_aggregator = function(x) zoo::rollsum(x, k = 2, align = \"right\")   )   nowcast_pred_draws_rolling_df } #>      pred_count time draw #> 1            NA    1    1 #> 2             0    2    1 #> 3            49    3    1 #> 4           104    4    1 #> 5           131    5    1 #> 6            NA    1    2 #> 7             0    2    2 #> 8            42    3    2 #> 9            49    4    2 #> 10          198    5    2 #> 11           NA    1    3 #> 12            0    2    3 #> 13           29    3    3 #> 14           76    4    3 #> 15          140    5    3 #> 16           NA    1    4 #> 17            0    2    4 #> 18           37    3    4 #> 19           66    4    4 #> 20          201    5    4 #> 21           NA    1    5 #> 22            0    2    5 #> 23           37    3    5 #> 24           70    4    5 #> 25          153    5    5 #> 26           NA    1    6 #> 27            0    2    6 #> 28           30    3    6 #> 29           58    4    6 #> 30            8    5    6 #> 31           NA    1    7 #> 32            0    2    7 #> 33           38    3    7 #> 34          103    4    7 #> 35           67    5    7 #> 36           NA    1    8 #> 37            0    2    8 #> 38           25    3    8 #> 39           92    4    8 #> 40           33    5    8 #> 41           NA    1    9 #> 42            0    2    9 #> 43           35    3    9 #> 44           56    4    9 #> 45            4    5    9 #> 46           NA    1   10 #> 47            0    2   10 #> 48           41    3   10 #> 49          130    4   10 #> 50          411    5   10 #> 51           NA    1   11 #> 52            0    2   11 #> 53           50    3   11 #> 54           53    4   11 #> 55          521    5   11 #> 56           NA    1   12 #> 57            0    2   12 #> 58           17    3   12 #> 59           68    4   12 #> 60          126    5   12 #> 61           NA    1   13 #> 62            0    2   13 #> 63           31    3   13 #> 64           59    4   13 #> 65          163    5   13 #> 66           NA    1   14 #> 67            0    2   14 #> 68           53    3   14 #> 69           83    4   14 #> 70           13    5   14 #> 71           NA    1   15 #> 72            0    2   15 #> 73           42    3   15 #> 74           45    4   15 #> 75           17    5   15 #> 76           NA    1   16 #> 77            0    2   16 #> 78           43    3   16 #> 79           94    4   16 #> 80           37    5   16 #> 81           NA    1   17 #> 82            0    2   17 #> 83           43    3   17 #> 84           82    4   17 #> 85          175    5   17 #> 86           NA    1   18 #> 87            0    2   18 #> 88           21    3   18 #> 89           88    4   18 #> 90          383    5   18 #> 91           NA    1   19 #> 92            0    2   19 #> 93           43    3   19 #> 94           83    4   19 #> 95           20    5   19 #> 96           NA    1   20 #> 97            0    2   20 #> 98           42    3   20 #> 99          110    4   20 #> 100         133    5   20 #> 101          NA    1   21 #> 102           0    2   21 #> 103          37    3   21 #> 104          50    4   21 #> 105         263    5   21 #> 106          NA    1   22 #> 107           0    2   22 #> 108          12    3   22 #> 109          97    4   22 #> 110          69    5   22 #> 111          NA    1   23 #> 112           0    2   23 #> 113          30    3   23 #> 114          81    4   23 #> 115         180    5   23 #> 116          NA    1   24 #> 117           0    2   24 #> 118          25    3   24 #> 119          74    4   24 #> 120         426    5   24 #> 121          NA    1   25 #> 122           0    2   25 #> 123          37    3   25 #> 124         111    4   25 #> 125          52    5   25 #> 126          NA    1   26 #> 127           0    2   26 #> 128          32    3   26 #> 129          68    4   26 #> 130         235    5   26 #> 131          NA    1   27 #> 132           0    2   27 #> 133          34    3   27 #> 134          59    4   27 #> 135          92    5   27 #> 136          NA    1   28 #> 137           0    2   28 #> 138          39    3   28 #> 139          58    4   28 #> 140           7    5   28 #> 141          NA    1   29 #> 142           0    2   29 #> 143          42    3   29 #> 144          53    4   29 #> 145          66    5   29 #> 146          NA    1   30 #> 147           0    2   30 #> 148          38    3   30 #> 149          85    4   30 #> 150         170    5   30 #> 151          NA    1   31 #> 152           0    2   31 #> 153          31    3   31 #> 154         113    4   31 #> 155         528    5   31 #> 156          NA    1   32 #> 157           0    2   32 #> 158          59    3   32 #> 159          79    4   32 #> 160         105    5   32 #> 161          NA    1   33 #> 162           0    2   33 #> 163          21    3   33 #> 164          93    4   33 #> 165         256    5   33 #> 166          NA    1   34 #> 167           0    2   34 #> 168          35    3   34 #> 169          50    4   34 #> 170         125    5   34 #> 171          NA    1   35 #> 172           0    2   35 #> 173          57    3   35 #> 174         110    4   35 #> 175          74    5   35 #> 176          NA    1   36 #> 177           0    2   36 #> 178          63    3   36 #> 179          46    4   36 #> 180           0    5   36 #> 181          NA    1   37 #> 182           0    2   37 #> 183          34    3   37 #> 184         100    4   37 #> 185         180    5   37 #> 186          NA    1   38 #> 187           0    2   38 #> 188          20    3   38 #> 189          78    4   38 #> 190           1    5   38 #> 191          NA    1   39 #> 192           0    2   39 #> 193          33    3   39 #> 194          64    4   39 #> 195          35    5   39 #> 196          NA    1   40 #> 197           0    2   40 #> 198          28    3   40 #> 199         101    4   40 #> 200          57    5   40 #> 201          NA    1   41 #> 202           0    2   41 #> 203          42    3   41 #> 204         115    4   41 #> 205           0    5   41 #> 206          NA    1   42 #> 207           0    2   42 #> 208          38    3   42 #> 209          56    4   42 #> 210         148    5   42 #> 211          NA    1   43 #> 212           0    2   43 #> 213          32    3   43 #> 214          64    4   43 #> 215         181    5   43 #> 216          NA    1   44 #> 217           0    2   44 #> 218          64    3   44 #> 219          44    4   44 #> 220          36    5   44 #> 221          NA    1   45 #> 222           0    2   45 #> 223          40    3   45 #> 224          45    4   45 #> 225           2    5   45 #> 226          NA    1   46 #> 227           0    2   46 #> 228          34    3   46 #> 229          91    4   46 #> 230         548    5   46 #> 231          NA    1   47 #> 232           0    2   47 #> 233          39    3   47 #> 234          86    4   47 #> 235         301    5   47 #> 236          NA    1   48 #> 237           0    2   48 #> 238          72    3   48 #> 239          60    4   48 #> 240          15    5   48 #> 241          NA    1   49 #> 242           0    2   49 #> 243          19    3   49 #> 244         105    4   49 #> 245         355    5   49 #> 246          NA    1   50 #> 247           0    2   50 #> 248          52    3   50 #> 249          47    4   50 #> 250         299    5   50 #> 251          NA    1   51 #> 252           0    2   51 #> 253          21    3   51 #> 254          95    4   51 #> 255         260    5   51 #> 256          NA    1   52 #> 257           0    2   52 #> 258          56    3   52 #> 259         122    4   52 #> 260         130    5   52 #> 261          NA    1   53 #> 262           0    2   53 #> 263          45    3   53 #> 264          88    4   53 #> 265         141    5   53 #> 266          NA    1   54 #> 267           0    2   54 #> 268          24    3   54 #> 269         123    4   54 #> 270          10    5   54 #> 271          NA    1   55 #> 272           0    2   55 #> 273          34    3   55 #> 274          70    4   55 #> 275          14    5   55 #> 276          NA    1   56 #> 277           0    2   56 #> 278          28    3   56 #> 279          40    4   56 #> 280         128    5   56 #> 281          NA    1   57 #> 282           0    2   57 #> 283          43    3   57 #> 284          47    4   57 #> 285         100    5   57 #> 286          NA    1   58 #> 287           0    2   58 #> 288          54    3   58 #> 289         109    4   58 #> 290          37    5   58 #> 291          NA    1   59 #> 292           0    2   59 #> 293          46    3   59 #> 294          29    4   59 #> 295          92    5   59 #> 296          NA    1   60 #> 297           0    2   60 #> 298          26    3   60 #> 299          85    4   60 #> 300          87    5   60 #> 301          NA    1   61 #> 302           0    2   61 #> 303          36    3   61 #> 304          72    4   61 #> 305           1    5   61 #> 306          NA    1   62 #> 307           0    2   62 #> 308          32    3   62 #> 309         104    4   62 #> 310          88    5   62 #> 311          NA    1   63 #> 312           0    2   63 #> 313          35    3   63 #> 314          62    4   63 #> 315         131    5   63 #> 316          NA    1   64 #> 317           0    2   64 #> 318          41    3   64 #> 319          82    4   64 #> 320           3    5   64 #> 321          NA    1   65 #> 322           0    2   65 #> 323          61    3   65 #> 324          65    4   65 #> 325          88    5   65 #> 326          NA    1   66 #> 327           0    2   66 #> 328          38    3   66 #> 329          63    4   66 #> 330         236    5   66 #> 331          NA    1   67 #> 332           0    2   67 #> 333          30    3   67 #> 334          92    4   67 #> 335          19    5   67 #> 336          NA    1   68 #> 337           0    2   68 #> 338          54    3   68 #> 339          61    4   68 #> 340         136    5   68 #> 341          NA    1   69 #> 342           0    2   69 #> 343          35    3   69 #> 344          53    4   69 #> 345           9    5   69 #> 346          NA    1   70 #> 347           0    2   70 #> 348          36    3   70 #> 349          99    4   70 #> 350        1258    5   70 #> 351          NA    1   71 #> 352           0    2   71 #> 353          21    3   71 #> 354          86    4   71 #> 355           8    5   71 #> 356          NA    1   72 #> 357           0    2   72 #> 358          14    3   72 #> 359          84    4   72 #> 360         265    5   72 #> 361          NA    1   73 #> 362           0    2   73 #> 363          33    3   73 #> 364          85    4   73 #> 365          44    5   73 #> 366          NA    1   74 #> 367           0    2   74 #> 368          31    3   74 #> 369         110    4   74 #> 370          41    5   74 #> 371          NA    1   75 #> 372           0    2   75 #> 373          35    3   75 #> 374          88    4   75 #> 375           2    5   75 #> 376          NA    1   76 #> 377           0    2   76 #> 378          41    3   76 #> 379          92    4   76 #> 380         898    5   76 #> 381          NA    1   77 #> 382           0    2   77 #> 383          28    3   77 #> 384          98    4   77 #> 385          63    5   77 #> 386          NA    1   78 #> 387           0    2   78 #> 388          37    3   78 #> 389          49    4   78 #> 390         179    5   78 #> 391          NA    1   79 #> 392           0    2   79 #> 393          39    3   79 #> 394          36    4   79 #> 395          83    5   79 #> 396          NA    1   80 #> 397           0    2   80 #> 398          17    3   80 #> 399          62    4   80 #> 400          32    5   80 #> 401          NA    1   81 #> 402           0    2   81 #> 403          42    3   81 #> 404         129    4   81 #> 405          83    5   81 #> 406          NA    1   82 #> 407           0    2   82 #> 408          61    3   82 #> 409          78    4   82 #> 410         194    5   82 #> 411          NA    1   83 #> 412           0    2   83 #> 413          43    3   83 #> 414         108    4   83 #> 415          66    5   83 #> 416          NA    1   84 #> 417           0    2   84 #> 418          16    3   84 #> 419         109    4   84 #> 420         158    5   84 #> 421          NA    1   85 #> 422           0    2   85 #> 423          40    3   85 #> 424          38    4   85 #> 425         107    5   85 #> 426          NA    1   86 #> 427           0    2   86 #> 428          23    3   86 #> 429          88    4   86 #> 430         181    5   86 #> 431          NA    1   87 #> 432           0    2   87 #> 433          40    3   87 #> 434          94    4   87 #> 435          23    5   87 #> 436          NA    1   88 #> 437           0    2   88 #> 438          68    3   88 #> 439          56    4   88 #> 440          26    5   88 #> 441          NA    1   89 #> 442           0    2   89 #> 443          40    3   89 #> 444         102    4   89 #> 445           3    5   89 #> 446          NA    1   90 #> 447           0    2   90 #> 448          17    3   90 #> 449          52    4   90 #> 450          51    5   90 #> 451          NA    1   91 #> 452           0    2   91 #> 453          36    3   91 #> 454         132    4   91 #> 455          58    5   91 #> 456          NA    1   92 #> 457           0    2   92 #> 458          12    3   92 #> 459          71    4   92 #> 460         104    5   92 #> 461          NA    1   93 #> 462           0    2   93 #> 463          23    3   93 #> 464         110    4   93 #> 465          10    5   93 #> 466          NA    1   94 #> 467           0    2   94 #> 468          49    3   94 #> 469          63    4   94 #> 470          40    5   94 #> 471          NA    1   95 #> 472           0    2   95 #> 473          22    3   95 #> 474         105    4   95 #> 475          39    5   95 #> 476          NA    1   96 #> 477           0    2   96 #> 478          41    3   96 #> 479          79    4   96 #> 480         184    5   96 #> 481          NA    1   97 #> 482           0    2   97 #> 483          38    3   97 #> 484         105    4   97 #> 485          64    5   97 #> 486          NA    1   98 #> 487           0    2   98 #> 488          26    3   98 #> 489          46    4   98 #> 490           4    5   98 #> 491          NA    1   99 #> 492           0    2   99 #> 493          35    3   99 #> 494          73    4   99 #> 495         141    5   99 #> 496          NA    1  100 #> 497           0    2  100 #> 498          35    3  100 #> 499         107    4  100 #> 500         305    5  100 #> 501          NA    1  101 #> 502           0    2  101 #> 503          54    3  101 #> 504          70    4  101 #> 505         221    5  101 #> 506          NA    1  102 #> 507           0    2  102 #> 508          43    3  102 #> 509          74    4  102 #> 510          15    5  102 #> 511          NA    1  103 #> 512           0    2  103 #> 513          46    3  103 #> 514          67    4  103 #> 515          21    5  103 #> 516          NA    1  104 #> 517           0    2  104 #> 518          21    3  104 #> 519          76    4  104 #> 520         385    5  104 #> 521          NA    1  105 #> 522           0    2  105 #> 523          44    3  105 #> 524         111    4  105 #> 525          12    5  105 #> 526          NA    1  106 #> 527           0    2  106 #> 528          37    3  106 #> 529          60    4  106 #> 530          98    5  106 #> 531          NA    1  107 #> 532           0    2  107 #> 533          29    3  107 #> 534         174    4  107 #> 535          25    5  107 #> 536          NA    1  108 #> 537           0    2  108 #> 538          35    3  108 #> 539          58    4  108 #> 540           5    5  108 #> 541          NA    1  109 #> 542           0    2  109 #> 543          30    3  109 #> 544          80    4  109 #> 545          37    5  109 #> 546          NA    1  110 #> 547           0    2  110 #> 548          18    3  110 #> 549          65    4  110 #> 550         239    5  110 #> 551          NA    1  111 #> 552           0    2  111 #> 553          18    3  111 #> 554          89    4  111 #> 555         178    5  111 #> 556          NA    1  112 #> 557           0    2  112 #> 558          21    3  112 #> 559         121    4  112 #> 560          21    5  112 #> 561          NA    1  113 #> 562           0    2  113 #> 563          30    3  113 #> 564         116    4  113 #> 565         136    5  113 #> 566          NA    1  114 #> 567           0    2  114 #> 568          43    3  114 #> 569         137    4  114 #> 570          82    5  114 #> 571          NA    1  115 #> 572           0    2  115 #> 573          44    3  115 #> 574          55    4  115 #> 575         233    5  115 #> 576          NA    1  116 #> 577           0    2  116 #> 578          47    3  116 #> 579          78    4  116 #> 580         621    5  116 #> 581          NA    1  117 #> 582           0    2  117 #> 583          60    3  117 #> 584          85    4  117 #> 585         131    5  117 #> 586          NA    1  118 #> 587           0    2  118 #> 588          43    3  118 #> 589          73    4  118 #> 590          42    5  118 #> 591          NA    1  119 #> 592           0    2  119 #> 593          38    3  119 #> 594          82    4  119 #> 595          48    5  119 #> 596          NA    1  120 #> 597           0    2  120 #> 598          33    3  120 #> 599          99    4  120 #> 600         284    5  120 #> 601          NA    1  121 #> 602           0    2  121 #> 603          50    3  121 #> 604          94    4  121 #> 605         208    5  121 #> 606          NA    1  122 #> 607           0    2  122 #> 608          43    3  122 #> 609          79    4  122 #> 610         281    5  122 #> 611          NA    1  123 #> 612           0    2  123 #> 613          21    3  123 #> 614          68    4  123 #> 615         270    5  123 #> 616          NA    1  124 #> 617           0    2  124 #> 618          55    3  124 #> 619          75    4  124 #> 620         266    5  124 #> 621          NA    1  125 #> 622           0    2  125 #> 623          49    3  125 #> 624         125    4  125 #> 625          48    5  125 #> 626          NA    1  126 #> 627           0    2  126 #> 628          39    3  126 #> 629         158    4  126 #> 630         268    5  126 #> 631          NA    1  127 #> 632           0    2  127 #> 633          38    3  127 #> 634          91    4  127 #> 635         397    5  127 #> 636          NA    1  128 #> 637           0    2  128 #> 638          50    3  128 #> 639         152    4  128 #> 640         171    5  128 #> 641          NA    1  129 #> 642           0    2  129 #> 643          36    3  129 #> 644          70    4  129 #> 645         113    5  129 #> 646          NA    1  130 #> 647           0    2  130 #> 648          30    3  130 #> 649          85    4  130 #> 650          24    5  130 #> 651          NA    1  131 #> 652           0    2  131 #> 653          40    3  131 #> 654          86    4  131 #> 655          25    5  131 #> 656          NA    1  132 #> 657           0    2  132 #> 658          54    3  132 #> 659          52    4  132 #> 660         206    5  132 #> 661          NA    1  133 #> 662           0    2  133 #> 663          30    3  133 #> 664          71    4  133 #> 665         322    5  133 #> 666          NA    1  134 #> 667           0    2  134 #> 668          67    3  134 #> 669          85    4  134 #> 670         200    5  134 #> 671          NA    1  135 #> 672           0    2  135 #> 673          38    3  135 #> 674          60    4  135 #> 675         178    5  135 #> 676          NA    1  136 #> 677           0    2  136 #> 678          31    3  136 #> 679          81    4  136 #> 680          93    5  136 #> 681          NA    1  137 #> 682           0    2  137 #> 683          36    3  137 #> 684          42    4  137 #> 685          64    5  137 #> 686          NA    1  138 #> 687           0    2  138 #> 688          39    3  138 #> 689          30    4  138 #> 690          18    5  138 #> 691          NA    1  139 #> 692           0    2  139 #> 693          75    3  139 #> 694         103    4  139 #> 695         112    5  139 #> 696          NA    1  140 #> 697           0    2  140 #> 698          44    3  140 #> 699         107    4  140 #> 700         119    5  140 #> 701          NA    1  141 #> 702           0    2  141 #> 703          34    3  141 #> 704          43    4  141 #> 705         142    5  141 #> 706          NA    1  142 #> 707           0    2  142 #> 708          72    3  142 #> 709         124    4  142 #> 710          13    5  142 #> 711          NA    1  143 #> 712           0    2  143 #> 713          59    3  143 #> 714          66    4  143 #> 715           4    5  143 #> 716          NA    1  144 #> 717           0    2  144 #> 718          37    3  144 #> 719          66    4  144 #> 720         133    5  144 #> 721          NA    1  145 #> 722           0    2  145 #> 723          26    3  145 #> 724          55    4  145 #> 725          55    5  145 #> 726          NA    1  146 #> 727           0    2  146 #> 728          35    3  146 #> 729         107    4  146 #> 730          78    5  146 #> 731          NA    1  147 #> 732           0    2  147 #> 733          35    3  147 #> 734          75    4  147 #> 735         120    5  147 #> 736          NA    1  148 #> 737           0    2  148 #> 738          47    3  148 #> 739         122    4  148 #> 740           0    5  148 #> 741          NA    1  149 #> 742           0    2  149 #> 743          63    3  149 #> 744          88    4  149 #> 745          64    5  149 #> 746          NA    1  150 #> 747           0    2  150 #> 748          25    3  150 #> 749          68    4  150 #> 750          92    5  150 #> 751          NA    1  151 #> 752           0    2  151 #> 753          20    3  151 #> 754          74    4  151 #> 755         166    5  151 #> 756          NA    1  152 #> 757           0    2  152 #> 758          59    3  152 #> 759          41    4  152 #> 760          95    5  152 #> 761          NA    1  153 #> 762           0    2  153 #> 763          33    3  153 #> 764         127    4  153 #> 765         135    5  153 #> 766          NA    1  154 #> 767           0    2  154 #> 768          53    3  154 #> 769          94    4  154 #> 770         152    5  154 #> 771          NA    1  155 #> 772           0    2  155 #> 773          40    3  155 #> 774          72    4  155 #> 775          40    5  155 #> 776          NA    1  156 #> 777           0    2  156 #> 778          51    3  156 #> 779         114    4  156 #> 780         167    5  156 #> 781          NA    1  157 #> 782           0    2  157 #> 783          44    3  157 #> 784          96    4  157 #> 785         117    5  157 #> 786          NA    1  158 #> 787           0    2  158 #> 788          32    3  158 #> 789         113    4  158 #> 790          45    5  158 #> 791          NA    1  159 #> 792           0    2  159 #> 793          46    3  159 #> 794          64    4  159 #> 795          13    5  159 #> 796          NA    1  160 #> 797           0    2  160 #> 798          45    3  160 #> 799          52    4  160 #> 800          90    5  160 #> 801          NA    1  161 #> 802           0    2  161 #> 803          41    3  161 #> 804          71    4  161 #> 805         240    5  161 #> 806          NA    1  162 #> 807           0    2  162 #> 808          25    3  162 #> 809         141    4  162 #> 810         106    5  162 #> 811          NA    1  163 #> 812           0    2  163 #> 813          29    3  163 #> 814         101    4  163 #> 815         162    5  163 #> 816          NA    1  164 #> 817           0    2  164 #> 818          35    3  164 #> 819          76    4  164 #> 820          12    5  164 #> 821          NA    1  165 #> 822           0    2  165 #> 823          23    3  165 #> 824          71    4  165 #> 825          37    5  165 #> 826          NA    1  166 #> 827           0    2  166 #> 828          47    3  166 #> 829          39    4  166 #> 830          59    5  166 #> 831          NA    1  167 #> 832           0    2  167 #> 833          30    3  167 #> 834          93    4  167 #> 835         104    5  167 #> 836          NA    1  168 #> 837           0    2  168 #> 838          16    3  168 #> 839          66    4  168 #> 840         229    5  168 #> 841          NA    1  169 #> 842           0    2  169 #> 843          22    3  169 #> 844         107    4  169 #> 845         134    5  169 #> 846          NA    1  170 #> 847           0    2  170 #> 848          19    3  170 #> 849          47    4  170 #> 850         187    5  170 #> 851          NA    1  171 #> 852           0    2  171 #> 853          53    3  171 #> 854          79    4  171 #> 855         108    5  171 #> 856          NA    1  172 #> 857           0    2  172 #> 858          58    3  172 #> 859          51    4  172 #> 860         183    5  172 #> 861          NA    1  173 #> 862           0    2  173 #> 863          23    3  173 #> 864          89    4  173 #> 865         258    5  173 #> 866          NA    1  174 #> 867           0    2  174 #> 868          57    3  174 #> 869          65    4  174 #> 870         335    5  174 #> 871          NA    1  175 #> 872           0    2  175 #> 873          24    3  175 #> 874         103    4  175 #> 875         234    5  175 #> 876          NA    1  176 #> 877           0    2  176 #> 878          74    3  176 #> 879          99    4  176 #> 880         212    5  176 #> 881          NA    1  177 #> 882           0    2  177 #> 883          22    3  177 #> 884         116    4  177 #> 885          40    5  177 #> 886          NA    1  178 #> 887           0    2  178 #> 888          44    3  178 #> 889          77    4  178 #> 890           2    5  178 #> 891          NA    1  179 #> 892           0    2  179 #> 893          41    3  179 #> 894          50    4  179 #> 895          37    5  179 #> 896          NA    1  180 #> 897           0    2  180 #> 898          25    3  180 #> 899          95    4  180 #> 900          24    5  180 #> 901          NA    1  181 #> 902           0    2  181 #> 903          31    3  181 #> 904          43    4  181 #> 905         545    5  181 #> 906          NA    1  182 #> 907           0    2  182 #> 908          44    3  182 #> 909         109    4  182 #> 910           3    5  182 #> 911          NA    1  183 #> 912           0    2  183 #> 913          35    3  183 #> 914          72    4  183 #> 915         160    5  183 #> 916          NA    1  184 #> 917           0    2  184 #> 918          38    3  184 #> 919          81    4  184 #> 920           1    5  184 #> 921          NA    1  185 #> 922           0    2  185 #> 923          20    3  185 #> 924          33    4  185 #> 925         102    5  185 #> 926          NA    1  186 #> 927           0    2  186 #> 928          48    3  186 #> 929          77    4  186 #> 930          20    5  186 #> 931          NA    1  187 #> 932           0    2  187 #> 933          28    3  187 #> 934          76    4  187 #> 935         128    5  187 #> 936          NA    1  188 #> 937           0    2  188 #> 938          30    3  188 #> 939          74    4  188 #> 940          20    5  188 #> 941          NA    1  189 #> 942           0    2  189 #> 943          21    3  189 #> 944          84    4  189 #> 945         199    5  189 #> 946          NA    1  190 #> 947           0    2  190 #> 948          20    3  190 #> 949          67    4  190 #> 950         154    5  190 #> 951          NA    1  191 #> 952           0    2  191 #> 953          19    3  191 #> 954          70    4  191 #> 955          71    5  191 #> 956          NA    1  192 #> 957           0    2  192 #> 958          29    3  192 #> 959          47    4  192 #> 960         331    5  192 #> 961          NA    1  193 #> 962           0    2  193 #> 963          69    3  193 #> 964          97    4  193 #> 965          15    5  193 #> 966          NA    1  194 #> 967           0    2  194 #> 968          75    3  194 #> 969          44    4  194 #> 970         320    5  194 #> 971          NA    1  195 #> 972           0    2  195 #> 973          68    3  195 #> 974          83    4  195 #> 975          92    5  195 #> 976          NA    1  196 #> 977           0    2  196 #> 978          21    3  196 #> 979          75    4  196 #> 980          53    5  196 #> 981          NA    1  197 #> 982           0    2  197 #> 983          24    3  197 #> 984          88    4  197 #> 985         203    5  197 #> 986          NA    1  198 #> 987           0    2  198 #> 988          58    3  198 #> 989          96    4  198 #> 990         359    5  198 #> 991          NA    1  199 #> 992           0    2  199 #> 993          51    3  199 #> 994         118    4  199 #> 995          11    5  199 #> 996          NA    1  200 #> 997           0    2  200 #> 998          38    3  200 #> 999          87    4  200 #> 1000        123    5  200 #> 1001         NA    1  201 #> 1002          0    2  201 #> 1003         31    3  201 #> 1004        120    4  201 #> 1005         18    5  201 #> 1006         NA    1  202 #> 1007          0    2  202 #> 1008         30    3  202 #> 1009         57    4  202 #> 1010         23    5  202 #> 1011         NA    1  203 #> 1012          0    2  203 #> 1013         24    3  203 #> 1014        117    4  203 #> 1015         74    5  203 #> 1016         NA    1  204 #> 1017          0    2  204 #> 1018         16    3  204 #> 1019         69    4  204 #> 1020          5    5  204 #> 1021         NA    1  205 #> 1022          0    2  205 #> 1023         30    3  205 #> 1024         60    4  205 #> 1025        766    5  205 #> 1026         NA    1  206 #> 1027          0    2  206 #> 1028         25    3  206 #> 1029        113    4  206 #> 1030        220    5  206 #> 1031         NA    1  207 #> 1032          0    2  207 #> 1033         26    3  207 #> 1034         72    4  207 #> 1035         74    5  207 #> 1036         NA    1  208 #> 1037          0    2  208 #> 1038         47    3  208 #> 1039         80    4  208 #> 1040        347    5  208 #> 1041         NA    1  209 #> 1042          0    2  209 #> 1043         28    3  209 #> 1044         76    4  209 #> 1045         72    5  209 #> 1046         NA    1  210 #> 1047          0    2  210 #> 1048         35    3  210 #> 1049         86    4  210 #> 1050        852    5  210 #> 1051         NA    1  211 #> 1052          0    2  211 #> 1053         42    3  211 #> 1054         82    4  211 #> 1055        135    5  211 #> 1056         NA    1  212 #> 1057          0    2  212 #> 1058         29    3  212 #> 1059         84    4  212 #> 1060         21    5  212 #> 1061         NA    1  213 #> 1062          0    2  213 #> 1063         40    3  213 #> 1064         88    4  213 #> 1065        226    5  213 #> 1066         NA    1  214 #> 1067          0    2  214 #> 1068         40    3  214 #> 1069         50    4  214 #> 1070        207    5  214 #> 1071         NA    1  215 #> 1072          0    2  215 #> 1073         53    3  215 #> 1074         89    4  215 #> 1075          4    5  215 #> 1076         NA    1  216 #> 1077          0    2  216 #> 1078         40    3  216 #> 1079         62    4  216 #> 1080        161    5  216 #> 1081         NA    1  217 #> 1082          0    2  217 #> 1083         38    3  217 #> 1084         74    4  217 #> 1085         40    5  217 #> 1086         NA    1  218 #> 1087          0    2  218 #> 1088         31    3  218 #> 1089         97    4  218 #> 1090         83    5  218 #> 1091         NA    1  219 #> 1092          0    2  219 #> 1093         13    3  219 #> 1094         36    4  219 #> 1095         62    5  219 #> 1096         NA    1  220 #> 1097          0    2  220 #> 1098         66    3  220 #> 1099         78    4  220 #> 1100         64    5  220 #> 1101         NA    1  221 #> 1102          0    2  221 #> 1103         28    3  221 #> 1104         71    4  221 #> 1105        157    5  221 #> 1106         NA    1  222 #> 1107          0    2  222 #> 1108         62    3  222 #> 1109         24    4  222 #> 1110        190    5  222 #> 1111         NA    1  223 #> 1112          0    2  223 #> 1113         37    3  223 #> 1114        125    4  223 #> 1115         81    5  223 #> 1116         NA    1  224 #> 1117          0    2  224 #> 1118         44    3  224 #> 1119         83    4  224 #> 1120         32    5  224 #> 1121         NA    1  225 #> 1122          0    2  225 #> 1123         35    3  225 #> 1124         58    4  225 #> 1125         56    5  225 #> 1126         NA    1  226 #> 1127          0    2  226 #> 1128         53    3  226 #> 1129         85    4  226 #> 1130        523    5  226 #> 1131         NA    1  227 #> 1132          0    2  227 #> 1133         41    3  227 #> 1134        124    4  227 #> 1135         33    5  227 #> 1136         NA    1  228 #> 1137          0    2  228 #> 1138         34    3  228 #> 1139        108    4  228 #> 1140         76    5  228 #> 1141         NA    1  229 #> 1142          0    2  229 #> 1143         44    3  229 #> 1144         79    4  229 #> 1145          4    5  229 #> 1146         NA    1  230 #> 1147          0    2  230 #> 1148         29    3  230 #> 1149         78    4  230 #> 1150        453    5  230 #> 1151         NA    1  231 #> 1152          0    2  231 #> 1153         51    3  231 #> 1154         72    4  231 #> 1155         55    5  231 #> 1156         NA    1  232 #> 1157          0    2  232 #> 1158         54    3  232 #> 1159         88    4  232 #> 1160         38    5  232 #> 1161         NA    1  233 #> 1162          0    2  233 #> 1163         46    3  233 #> 1164         83    4  233 #> 1165         58    5  233 #> 1166         NA    1  234 #> 1167          0    2  234 #> 1168         44    3  234 #> 1169         78    4  234 #> 1170         13    5  234 #> 1171         NA    1  235 #> 1172          0    2  235 #> 1173         30    3  235 #> 1174        100    4  235 #> 1175         13    5  235 #> 1176         NA    1  236 #> 1177          0    2  236 #> 1178         33    3  236 #> 1179         74    4  236 #> 1180        136    5  236 #> 1181         NA    1  237 #> 1182          0    2  237 #> 1183         32    3  237 #> 1184         69    4  237 #> 1185        318    5  237 #> 1186         NA    1  238 #> 1187          0    2  238 #> 1188         17    3  238 #> 1189         52    4  238 #> 1190         18    5  238 #> 1191         NA    1  239 #> 1192          0    2  239 #> 1193         38    3  239 #> 1194         78    4  239 #> 1195         43    5  239 #> 1196         NA    1  240 #> 1197          0    2  240 #> 1198         36    3  240 #> 1199        125    4  240 #> 1200        646    5  240 #> 1201         NA    1  241 #> 1202          0    2  241 #> 1203         18    3  241 #> 1204        114    4  241 #> 1205        151    5  241 #> 1206         NA    1  242 #> 1207          0    2  242 #> 1208         10    3  242 #> 1209         74    4  242 #> 1210          1    5  242 #> 1211         NA    1  243 #> 1212          0    2  243 #> 1213         26    3  243 #> 1214         47    4  243 #> 1215          0    5  243 #> 1216         NA    1  244 #> 1217          0    2  244 #> 1218         29    3  244 #> 1219         78    4  244 #> 1220        287    5  244 #> 1221         NA    1  245 #> 1222          0    2  245 #> 1223         68    3  245 #> 1224        131    4  245 #> 1225        406    5  245 #> 1226         NA    1  246 #> 1227          0    2  246 #> 1228         32    3  246 #> 1229        102    4  246 #> 1230         38    5  246 #> 1231         NA    1  247 #> 1232          0    2  247 #> 1233         29    3  247 #> 1234        101    4  247 #> 1235         27    5  247 #> 1236         NA    1  248 #> 1237          0    2  248 #> 1238         24    3  248 #> 1239        105    4  248 #> 1240         77    5  248 #> 1241         NA    1  249 #> 1242          0    2  249 #> 1243         46    3  249 #> 1244         94    4  249 #> 1245         61    5  249 #> 1246         NA    1  250 #> 1247          0    2  250 #> 1248         53    3  250 #> 1249        120    4  250 #> 1250        440    5  250 #> 1251         NA    1  251 #> 1252          0    2  251 #> 1253         23    3  251 #> 1254        108    4  251 #> 1255        107    5  251 #> 1256         NA    1  252 #> 1257          0    2  252 #> 1258         28    3  252 #> 1259        157    4  252 #> 1260          9    5  252 #> 1261         NA    1  253 #> 1262          0    2  253 #> 1263         46    3  253 #> 1264        100    4  253 #> 1265         15    5  253 #> 1266         NA    1  254 #> 1267          0    2  254 #> 1268         29    3  254 #> 1269         89    4  254 #> 1270        519    5  254 #> 1271         NA    1  255 #> 1272          0    2  255 #> 1273         42    3  255 #> 1274         46    4  255 #> 1275        345    5  255 #> 1276         NA    1  256 #> 1277          0    2  256 #> 1278         42    3  256 #> 1279         82    4  256 #> 1280         64    5  256 #> 1281         NA    1  257 #> 1282          0    2  257 #> 1283         22    3  257 #> 1284         72    4  257 #> 1285         29    5  257 #> 1286         NA    1  258 #> 1287          0    2  258 #> 1288         38    3  258 #> 1289         91    4  258 #> 1290        141    5  258 #> 1291         NA    1  259 #> 1292          0    2  259 #> 1293         79    3  259 #> 1294         97    4  259 #> 1295         37    5  259 #> 1296         NA    1  260 #> 1297          0    2  260 #> 1298         47    3  260 #> 1299         66    4  260 #> 1300          0    5  260 #> 1301         NA    1  261 #> 1302          0    2  261 #> 1303         17    3  261 #> 1304         58    4  261 #> 1305        322    5  261 #> 1306         NA    1  262 #> 1307          0    2  262 #> 1308         32    3  262 #> 1309         76    4  262 #> 1310        190    5  262 #> 1311         NA    1  263 #> 1312          0    2  263 #> 1313         53    3  263 #> 1314        124    4  263 #> 1315         13    5  263 #> 1316         NA    1  264 #> 1317          0    2  264 #> 1318         32    3  264 #> 1319        121    4  264 #> 1320         10    5  264 #> 1321         NA    1  265 #> 1322          0    2  265 #> 1323         41    3  265 #> 1324         91    4  265 #> 1325          1    5  265 #> 1326         NA    1  266 #> 1327          0    2  266 #> 1328         50    3  266 #> 1329         94    4  266 #> 1330         55    5  266 #> 1331         NA    1  267 #> 1332          0    2  267 #> 1333         36    3  267 #> 1334         73    4  267 #> 1335         41    5  267 #> 1336         NA    1  268 #> 1337          0    2  268 #> 1338         72    3  268 #> 1339         69    4  268 #> 1340        167    5  268 #> 1341         NA    1  269 #> 1342          0    2  269 #> 1343         41    3  269 #> 1344         65    4  269 #> 1345         24    5  269 #> 1346         NA    1  270 #> 1347          0    2  270 #> 1348         19    3  270 #> 1349         56    4  270 #> 1350        147    5  270 #> 1351         NA    1  271 #> 1352          0    2  271 #> 1353         22    3  271 #> 1354        109    4  271 #> 1355        299    5  271 #> 1356         NA    1  272 #> 1357          0    2  272 #> 1358         33    3  272 #> 1359         52    4  272 #> 1360        110    5  272 #> 1361         NA    1  273 #> 1362          0    2  273 #> 1363         21    3  273 #> 1364         64    4  273 #> 1365        328    5  273 #> 1366         NA    1  274 #> 1367          0    2  274 #> 1368         94    3  274 #> 1369         44    4  274 #> 1370         28    5  274 #> 1371         NA    1  275 #> 1372          0    2  275 #> 1373         41    3  275 #> 1374         96    4  275 #> 1375         35    5  275 #> 1376         NA    1  276 #> 1377          0    2  276 #> 1378         45    3  276 #> 1379         83    4  276 #> 1380         53    5  276 #> 1381         NA    1  277 #> 1382          0    2  277 #> 1383         47    3  277 #> 1384         60    4  277 #> 1385        625    5  277 #> 1386         NA    1  278 #> 1387          0    2  278 #> 1388         28    3  278 #> 1389         57    4  278 #> 1390         74    5  278 #> 1391         NA    1  279 #> 1392          0    2  279 #> 1393         22    3  279 #> 1394         93    4  279 #> 1395         28    5  279 #> 1396         NA    1  280 #> 1397          0    2  280 #> 1398         29    3  280 #> 1399         87    4  280 #> 1400        229    5  280 #> 1401         NA    1  281 #> 1402          0    2  281 #> 1403         34    3  281 #> 1404         59    4  281 #> 1405       1031    5  281 #> 1406         NA    1  282 #> 1407          0    2  282 #> 1408         31    3  282 #> 1409         92    4  282 #> 1410          1    5  282 #> 1411         NA    1  283 #> 1412          0    2  283 #> 1413         40    3  283 #> 1414         81    4  283 #> 1415         29    5  283 #> 1416         NA    1  284 #> 1417          0    2  284 #> 1418         42    3  284 #> 1419         76    4  284 #> 1420         17    5  284 #> 1421         NA    1  285 #> 1422          0    2  285 #> 1423         44    3  285 #> 1424        106    4  285 #> 1425         12    5  285 #> 1426         NA    1  286 #> 1427          0    2  286 #> 1428         89    3  286 #> 1429        111    4  286 #> 1430        139    5  286 #> 1431         NA    1  287 #> 1432          0    2  287 #> 1433         42    3  287 #> 1434        124    4  287 #> 1435         24    5  287 #> 1436         NA    1  288 #> 1437          0    2  288 #> 1438         56    3  288 #> 1439        115    4  288 #> 1440        161    5  288 #> 1441         NA    1  289 #> 1442          0    2  289 #> 1443         41    3  289 #> 1444         90    4  289 #> 1445         26    5  289 #> 1446         NA    1  290 #> 1447          0    2  290 #> 1448         46    3  290 #> 1449         63    4  290 #> 1450        209    5  290 #> 1451         NA    1  291 #> 1452          0    2  291 #> 1453         46    3  291 #> 1454         96    4  291 #> 1455        733    5  291 #> 1456         NA    1  292 #> 1457          0    2  292 #> 1458         43    3  292 #> 1459         63    4  292 #> 1460        129    5  292 #> 1461         NA    1  293 #> 1462          0    2  293 #> 1463         27    3  293 #> 1464         74    4  293 #> 1465        237    5  293 #> 1466         NA    1  294 #> 1467          0    2  294 #> 1468         61    3  294 #> 1469         88    4  294 #> 1470        779    5  294 #> 1471         NA    1  295 #> 1472          0    2  295 #> 1473         44    3  295 #> 1474         71    4  295 #> 1475         86    5  295 #> 1476         NA    1  296 #> 1477          0    2  296 #> 1478         36    3  296 #> 1479         90    4  296 #> 1480        225    5  296 #> 1481         NA    1  297 #> 1482          0    2  297 #> 1483         40    3  297 #> 1484         85    4  297 #> 1485        135    5  297 #> 1486         NA    1  298 #> 1487          0    2  298 #> 1488         49    3  298 #> 1489         91    4  298 #> 1490        176    5  298 #> 1491         NA    1  299 #> 1492          0    2  299 #> 1493         47    3  299 #> 1494        111    4  299 #> 1495        223    5  299 #> 1496         NA    1  300 #> 1497          0    2  300 #> 1498         25    3  300 #> 1499         90    4  300 #> 1500          2    5  300 #> 1501         NA    1  301 #> 1502          0    2  301 #> 1503         44    3  301 #> 1504        106    4  301 #> 1505         37    5  301 #> 1506         NA    1  302 #> 1507          0    2  302 #> 1508         47    3  302 #> 1509         70    4  302 #> 1510         64    5  302 #> 1511         NA    1  303 #> 1512          0    2  303 #> 1513         45    3  303 #> 1514         83    4  303 #> 1515         11    5  303 #> 1516         NA    1  304 #> 1517          0    2  304 #> 1518         43    3  304 #> 1519         91    4  304 #> 1520         59    5  304 #> 1521         NA    1  305 #> 1522          0    2  305 #> 1523         30    3  305 #> 1524         45    4  305 #> 1525         61    5  305 #> 1526         NA    1  306 #> 1527          0    2  306 #> 1528         67    3  306 #> 1529        135    4  306 #> 1530          8    5  306 #> 1531         NA    1  307 #> 1532          0    2  307 #> 1533         19    3  307 #> 1534         88    4  307 #> 1535         86    5  307 #> 1536         NA    1  308 #> 1537          0    2  308 #> 1538         35    3  308 #> 1539        105    4  308 #> 1540         77    5  308 #> 1541         NA    1  309 #> 1542          0    2  309 #> 1543         58    3  309 #> 1544         75    4  309 #> 1545         34    5  309 #> 1546         NA    1  310 #> 1547          0    2  310 #> 1548         36    3  310 #> 1549         84    4  310 #> 1550        175    5  310 #> 1551         NA    1  311 #> 1552          0    2  311 #> 1553         39    3  311 #> 1554         49    4  311 #> 1555          3    5  311 #> 1556         NA    1  312 #> 1557          0    2  312 #> 1558         18    3  312 #> 1559         88    4  312 #> 1560         18    5  312 #> 1561         NA    1  313 #> 1562          0    2  313 #> 1563         35    3  313 #> 1564        103    4  313 #> 1565         68    5  313 #> 1566         NA    1  314 #> 1567          0    2  314 #> 1568         30    3  314 #> 1569        109    4  314 #> 1570        203    5  314 #> 1571         NA    1  315 #> 1572          0    2  315 #> 1573         56    3  315 #> 1574         96    4  315 #> 1575        277    5  315 #> 1576         NA    1  316 #> 1577          0    2  316 #> 1578         62    3  316 #> 1579         62    4  316 #> 1580        627    5  316 #> 1581         NA    1  317 #> 1582          0    2  317 #> 1583         48    3  317 #> 1584         79    4  317 #> 1585        257    5  317 #> 1586         NA    1  318 #> 1587          0    2  318 #> 1588         47    3  318 #> 1589         89    4  318 #> 1590          3    5  318 #> 1591         NA    1  319 #> 1592          0    2  319 #> 1593         27    3  319 #> 1594         75    4  319 #> 1595         91    5  319 #> 1596         NA    1  320 #> 1597          0    2  320 #> 1598         36    3  320 #> 1599         45    4  320 #> 1600        170    5  320 #> 1601         NA    1  321 #> 1602          0    2  321 #> 1603         42    3  321 #> 1604         86    4  321 #> 1605        203    5  321 #> 1606         NA    1  322 #> 1607          0    2  322 #> 1608         42    3  322 #> 1609         61    4  322 #> 1610        169    5  322 #> 1611         NA    1  323 #> 1612          0    2  323 #> 1613         19    3  323 #> 1614         79    4  323 #> 1615        257    5  323 #> 1616         NA    1  324 #> 1617          0    2  324 #> 1618         62    3  324 #> 1619         67    4  324 #> 1620        151    5  324 #> 1621         NA    1  325 #> 1622          0    2  325 #> 1623         26    3  325 #> 1624         75    4  325 #> 1625        152    5  325 #> 1626         NA    1  326 #> 1627          0    2  326 #> 1628         33    3  326 #> 1629        119    4  326 #> 1630         56    5  326 #> 1631         NA    1  327 #> 1632          0    2  327 #> 1633         25    3  327 #> 1634         65    4  327 #> 1635        324    5  327 #> 1636         NA    1  328 #> 1637          0    2  328 #> 1638         32    3  328 #> 1639         96    4  328 #> 1640        250    5  328 #> 1641         NA    1  329 #> 1642          0    2  329 #> 1643         30    3  329 #> 1644         58    4  329 #> 1645        385    5  329 #> 1646         NA    1  330 #> 1647          0    2  330 #> 1648         30    3  330 #> 1649         61    4  330 #> 1650        213    5  330 #> 1651         NA    1  331 #> 1652          0    2  331 #> 1653         24    3  331 #> 1654         68    4  331 #> 1655        118    5  331 #> 1656         NA    1  332 #> 1657          0    2  332 #> 1658         15    3  332 #> 1659         88    4  332 #> 1660        338    5  332 #> 1661         NA    1  333 #> 1662          0    2  333 #> 1663         55    3  333 #> 1664        122    4  333 #> 1665        120    5  333 #> 1666         NA    1  334 #> 1667          0    2  334 #> 1668         27    3  334 #> 1669         81    4  334 #> 1670        218    5  334 #> 1671         NA    1  335 #> 1672          0    2  335 #> 1673         37    3  335 #> 1674         54    4  335 #> 1675         76    5  335 #> 1676         NA    1  336 #> 1677          0    2  336 #> 1678         64    3  336 #> 1679        125    4  336 #> 1680         94    5  336 #> 1681         NA    1  337 #> 1682          0    2  337 #> 1683         37    3  337 #> 1684         89    4  337 #> 1685        240    5  337 #> 1686         NA    1  338 #> 1687          0    2  338 #> 1688         24    3  338 #> 1689         67    4  338 #> 1690        155    5  338 #> 1691         NA    1  339 #> 1692          0    2  339 #> 1693         73    3  339 #> 1694         69    4  339 #> 1695        129    5  339 #> 1696         NA    1  340 #> 1697          0    2  340 #> 1698         53    3  340 #> 1699         78    4  340 #> 1700          3    5  340 #> 1701         NA    1  341 #> 1702          0    2  341 #> 1703         43    3  341 #> 1704         48    4  341 #> 1705        442    5  341 #> 1706         NA    1  342 #> 1707          0    2  342 #> 1708         79    3  342 #> 1709         93    4  342 #> 1710         80    5  342 #> 1711         NA    1  343 #> 1712          0    2  343 #> 1713         57    3  343 #> 1714         44    4  343 #> 1715        181    5  343 #> 1716         NA    1  344 #> 1717          0    2  344 #> 1718         48    3  344 #> 1719        166    4  344 #> 1720        153    5  344 #> 1721         NA    1  345 #> 1722          0    2  345 #> 1723         53    3  345 #> 1724         80    4  345 #> 1725        269    5  345 #> 1726         NA    1  346 #> 1727          0    2  346 #> 1728         54    3  346 #> 1729         71    4  346 #> 1730         71    5  346 #> 1731         NA    1  347 #> 1732          0    2  347 #> 1733         34    3  347 #> 1734         72    4  347 #> 1735        218    5  347 #> 1736         NA    1  348 #> 1737          0    2  348 #> 1738         36    3  348 #> 1739         79    4  348 #> 1740         26    5  348 #> 1741         NA    1  349 #> 1742          0    2  349 #> 1743         29    3  349 #> 1744         76    4  349 #> 1745          8    5  349 #> 1746         NA    1  350 #> 1747          0    2  350 #> 1748         54    3  350 #> 1749        186    4  350 #> 1750         92    5  350 #> 1751         NA    1  351 #> 1752          0    2  351 #> 1753         59    3  351 #> 1754         43    4  351 #> 1755         93    5  351 #> 1756         NA    1  352 #> 1757          0    2  352 #> 1758         18    3  352 #> 1759         58    4  352 #> 1760         79    5  352 #> 1761         NA    1  353 #> 1762          0    2  353 #> 1763         68    3  353 #> 1764         92    4  353 #> 1765         37    5  353 #> 1766         NA    1  354 #> 1767          0    2  354 #> 1768         38    3  354 #> 1769         75    4  354 #> 1770        121    5  354 #> 1771         NA    1  355 #> 1772          0    2  355 #> 1773         17    3  355 #> 1774        105    4  355 #> 1775         19    5  355 #> 1776         NA    1  356 #> 1777          0    2  356 #> 1778         62    3  356 #> 1779         59    4  356 #> 1780         33    5  356 #> 1781         NA    1  357 #> 1782          0    2  357 #> 1783         56    3  357 #> 1784         73    4  357 #> 1785        210    5  357 #> 1786         NA    1  358 #> 1787          0    2  358 #> 1788         21    3  358 #> 1789        103    4  358 #> 1790        114    5  358 #> 1791         NA    1  359 #> 1792          0    2  359 #> 1793         27    3  359 #> 1794        118    4  359 #> 1795        165    5  359 #> 1796         NA    1  360 #> 1797          0    2  360 #> 1798         46    3  360 #> 1799         80    4  360 #> 1800         41    5  360 #> 1801         NA    1  361 #> 1802          0    2  361 #> 1803         68    3  361 #> 1804         79    4  361 #> 1805         13    5  361 #> 1806         NA    1  362 #> 1807          0    2  362 #> 1808         31    3  362 #> 1809         80    4  362 #> 1810        125    5  362 #> 1811         NA    1  363 #> 1812          0    2  363 #> 1813         37    3  363 #> 1814         81    4  363 #> 1815        124    5  363 #> 1816         NA    1  364 #> 1817          0    2  364 #> 1818         63    3  364 #> 1819         69    4  364 #> 1820         57    5  364 #> 1821         NA    1  365 #> 1822          0    2  365 #> 1823         11    3  365 #> 1824         59    4  365 #> 1825        186    5  365 #> 1826         NA    1  366 #> 1827          0    2  366 #> 1828         41    3  366 #> 1829        129    4  366 #> 1830          1    5  366 #> 1831         NA    1  367 #> 1832          0    2  367 #> 1833         28    3  367 #> 1834         95    4  367 #> 1835          3    5  367 #> 1836         NA    1  368 #> 1837          0    2  368 #> 1838         72    3  368 #> 1839        120    4  368 #> 1840        524    5  368 #> 1841         NA    1  369 #> 1842          0    2  369 #> 1843         55    3  369 #> 1844         99    4  369 #> 1845        318    5  369 #> 1846         NA    1  370 #> 1847          0    2  370 #> 1848         53    3  370 #> 1849         99    4  370 #> 1850        575    5  370 #> 1851         NA    1  371 #> 1852          0    2  371 #> 1853         54    3  371 #> 1854         98    4  371 #> 1855         74    5  371 #> 1856         NA    1  372 #> 1857          0    2  372 #> 1858         28    3  372 #> 1859         85    4  372 #> 1860         48    5  372 #> 1861         NA    1  373 #> 1862          0    2  373 #> 1863         41    3  373 #> 1864         34    4  373 #> 1865        157    5  373 #> 1866         NA    1  374 #> 1867          0    2  374 #> 1868         56    3  374 #> 1869        106    4  374 #> 1870         16    5  374 #> 1871         NA    1  375 #> 1872          0    2  375 #> 1873         17    3  375 #> 1874        105    4  375 #> 1875         79    5  375 #> 1876         NA    1  376 #> 1877          0    2  376 #> 1878         33    3  376 #> 1879         97    4  376 #> 1880         61    5  376 #> 1881         NA    1  377 #> 1882          0    2  377 #> 1883         15    3  377 #> 1884        112    4  377 #> 1885         49    5  377 #> 1886         NA    1  378 #> 1887          0    2  378 #> 1888         40    3  378 #> 1889        102    4  378 #> 1890        213    5  378 #> 1891         NA    1  379 #> 1892          0    2  379 #> 1893         57    3  379 #> 1894         98    4  379 #> 1895         79    5  379 #> 1896         NA    1  380 #> 1897          0    2  380 #> 1898         38    3  380 #> 1899        122    4  380 #> 1900        100    5  380 #> 1901         NA    1  381 #> 1902          0    2  381 #> 1903         52    3  381 #> 1904         92    4  381 #> 1905        193    5  381 #> 1906         NA    1  382 #> 1907          0    2  382 #> 1908         19    3  382 #> 1909         68    4  382 #> 1910        213    5  382 #> 1911         NA    1  383 #> 1912          0    2  383 #> 1913         14    3  383 #> 1914         77    4  383 #> 1915         30    5  383 #> 1916         NA    1  384 #> 1917          0    2  384 #> 1918         37    3  384 #> 1919         72    4  384 #> 1920         95    5  384 #> 1921         NA    1  385 #> 1922          0    2  385 #> 1923         31    3  385 #> 1924         72    4  385 #> 1925         85    5  385 #> 1926         NA    1  386 #> 1927          0    2  386 #> 1928         47    3  386 #> 1929         61    4  386 #> 1930         85    5  386 #> 1931         NA    1  387 #> 1932          0    2  387 #> 1933         48    3  387 #> 1934         85    4  387 #> 1935         10    5  387 #> 1936         NA    1  388 #> 1937          0    2  388 #> 1938        100    3  388 #> 1939         77    4  388 #> 1940         15    5  388 #> 1941         NA    1  389 #> 1942          0    2  389 #> 1943         26    3  389 #> 1944        123    4  389 #> 1945        197    5  389 #> 1946         NA    1  390 #> 1947          0    2  390 #> 1948         27    3  390 #> 1949         56    4  390 #> 1950        112    5  390 #> 1951         NA    1  391 #> 1952          0    2  391 #> 1953         52    3  391 #> 1954         86    4  391 #> 1955        100    5  391 #> 1956         NA    1  392 #> 1957          0    2  392 #> 1958         57    3  392 #> 1959         87    4  392 #> 1960         40    5  392 #> 1961         NA    1  393 #> 1962          0    2  393 #> 1963         31    3  393 #> 1964        111    4  393 #> 1965         40    5  393 #> 1966         NA    1  394 #> 1967          0    2  394 #> 1968         40    3  394 #> 1969         97    4  394 #> 1970          2    5  394 #> 1971         NA    1  395 #> 1972          0    2  395 #> 1973         39    3  395 #> 1974         78    4  395 #> 1975          2    5  395 #> 1976         NA    1  396 #> 1977          0    2  396 #> 1978         38    3  396 #> 1979        109    4  396 #> 1980          5    5  396 #> 1981         NA    1  397 #> 1982          0    2  397 #> 1983         17    3  397 #> 1984         74    4  397 #> 1985        191    5  397 #> 1986         NA    1  398 #> 1987          0    2  398 #> 1988         61    3  398 #> 1989         70    4  398 #> 1990          1    5  398 #> 1991         NA    1  399 #> 1992          0    2  399 #> 1993         32    3  399 #> 1994        136    4  399 #> 1995        341    5  399 #> 1996         NA    1  400 #> 1997          0    2  400 #> 1998         26    3  400 #> 1999         61    4  400 #> 2000         78    5  400 #> 2001         NA    1  401 #> 2002          0    2  401 #> 2003         63    3  401 #> 2004         77    4  401 #> 2005          7    5  401 #> 2006         NA    1  402 #> 2007          0    2  402 #> 2008         49    3  402 #> 2009        116    4  402 #> 2010         43    5  402 #> 2011         NA    1  403 #> 2012          0    2  403 #> 2013         21    3  403 #> 2014         93    4  403 #> 2015        153    5  403 #> 2016         NA    1  404 #> 2017          0    2  404 #> 2018         41    3  404 #> 2019         76    4  404 #> 2020         55    5  404 #> 2021         NA    1  405 #> 2022          0    2  405 #> 2023         39    3  405 #> 2024         34    4  405 #> 2025         10    5  405 #> 2026         NA    1  406 #> 2027          0    2  406 #> 2028         25    3  406 #> 2029         61    4  406 #> 2030          0    5  406 #> 2031         NA    1  407 #> 2032          0    2  407 #> 2033         43    3  407 #> 2034         60    4  407 #> 2035        137    5  407 #> 2036         NA    1  408 #> 2037          0    2  408 #> 2038         37    3  408 #> 2039         83    4  408 #> 2040         51    5  408 #> 2041         NA    1  409 #> 2042          0    2  409 #> 2043         31    3  409 #> 2044         95    4  409 #> 2045        225    5  409 #> 2046         NA    1  410 #> 2047          0    2  410 #> 2048         14    3  410 #> 2049         88    4  410 #> 2050        140    5  410 #> 2051         NA    1  411 #> 2052          0    2  411 #> 2053         28    3  411 #> 2054         56    4  411 #> 2055         15    5  411 #> 2056         NA    1  412 #> 2057          0    2  412 #> 2058         15    3  412 #> 2059         90    4  412 #> 2060         51    5  412 #> 2061         NA    1  413 #> 2062          0    2  413 #> 2063         40    3  413 #> 2064        130    4  413 #> 2065        181    5  413 #> 2066         NA    1  414 #> 2067          0    2  414 #> 2068         51    3  414 #> 2069        118    4  414 #> 2070         94    5  414 #> 2071         NA    1  415 #> 2072          0    2  415 #> 2073         32    3  415 #> 2074        122    4  415 #> 2075        124    5  415 #> 2076         NA    1  416 #> 2077          0    2  416 #> 2078         32    3  416 #> 2079         70    4  416 #> 2080         14    5  416 #> 2081         NA    1  417 #> 2082          0    2  417 #> 2083         39    3  417 #> 2084         55    4  417 #> 2085        276    5  417 #> 2086         NA    1  418 #> 2087          0    2  418 #> 2088         77    3  418 #> 2089         87    4  418 #> 2090         86    5  418 #> 2091         NA    1  419 #> 2092          0    2  419 #> 2093         19    3  419 #> 2094         69    4  419 #> 2095         16    5  419 #> 2096         NA    1  420 #> 2097          0    2  420 #> 2098         16    3  420 #> 2099        133    4  420 #> 2100          8    5  420 #> 2101         NA    1  421 #> 2102          0    2  421 #> 2103         49    3  421 #> 2104        101    4  421 #> 2105        310    5  421 #> 2106         NA    1  422 #> 2107          0    2  422 #> 2108         22    3  422 #> 2109         52    4  422 #> 2110         29    5  422 #> 2111         NA    1  423 #> 2112          0    2  423 #> 2113         63    3  423 #> 2114         81    4  423 #> 2115        263    5  423 #> 2116         NA    1  424 #> 2117          0    2  424 #> 2118         53    3  424 #> 2119         84    4  424 #> 2120        218    5  424 #> 2121         NA    1  425 #> 2122          0    2  425 #> 2123         46    3  425 #> 2124         79    4  425 #> 2125         63    5  425 #> 2126         NA    1  426 #> 2127          0    2  426 #> 2128         24    3  426 #> 2129         93    4  426 #> 2130         21    5  426 #> 2131         NA    1  427 #> 2132          0    2  427 #> 2133         40    3  427 #> 2134         82    4  427 #> 2135        124    5  427 #> 2136         NA    1  428 #> 2137          0    2  428 #> 2138         22    3  428 #> 2139         90    4  428 #> 2140         54    5  428 #> 2141         NA    1  429 #> 2142          0    2  429 #> 2143         41    3  429 #> 2144        133    4  429 #> 2145         25    5  429 #> 2146         NA    1  430 #> 2147          0    2  430 #> 2148         42    3  430 #> 2149         71    4  430 #> 2150        308    5  430 #> 2151         NA    1  431 #> 2152          0    2  431 #> 2153         44    3  431 #> 2154         64    4  431 #> 2155        117    5  431 #> 2156         NA    1  432 #> 2157          0    2  432 #> 2158         43    3  432 #> 2159         88    4  432 #> 2160         62    5  432 #> 2161         NA    1  433 #> 2162          0    2  433 #> 2163         29    3  433 #> 2164         80    4  433 #> 2165        184    5  433 #> 2166         NA    1  434 #> 2167          0    2  434 #> 2168         39    3  434 #> 2169         78    4  434 #> 2170         84    5  434 #> 2171         NA    1  435 #> 2172          0    2  435 #> 2173         28    3  435 #> 2174         93    4  435 #> 2175         51    5  435 #> 2176         NA    1  436 #> 2177          0    2  436 #> 2178         46    3  436 #> 2179        141    4  436 #> 2180         67    5  436 #> 2181         NA    1  437 #> 2182          0    2  437 #> 2183         50    3  437 #> 2184         82    4  437 #> 2185          1    5  437 #> 2186         NA    1  438 #> 2187          0    2  438 #> 2188         16    3  438 #> 2189        106    4  438 #> 2190          3    5  438 #> 2191         NA    1  439 #> 2192          0    2  439 #> 2193         25    3  439 #> 2194        110    4  439 #> 2195         53    5  439 #> 2196         NA    1  440 #> 2197          0    2  440 #> 2198         31    3  440 #> 2199         62    4  440 #> 2200        145    5  440 #> 2201         NA    1  441 #> 2202          0    2  441 #> 2203         40    3  441 #> 2204         46    4  441 #> 2205        154    5  441 #> 2206         NA    1  442 #> 2207          0    2  442 #> 2208         39    3  442 #> 2209         60    4  442 #> 2210        181    5  442 #> 2211         NA    1  443 #> 2212          0    2  443 #> 2213         35    3  443 #> 2214         88    4  443 #> 2215         12    5  443 #> 2216         NA    1  444 #> 2217          0    2  444 #> 2218         31    3  444 #> 2219         90    4  444 #> 2220        197    5  444 #> 2221         NA    1  445 #> 2222          0    2  445 #> 2223         39    3  445 #> 2224         78    4  445 #> 2225        150    5  445 #> 2226         NA    1  446 #> 2227          0    2  446 #> 2228         23    3  446 #> 2229         96    4  446 #> 2230        209    5  446 #> 2231         NA    1  447 #> 2232          0    2  447 #> 2233         46    3  447 #> 2234         57    4  447 #> 2235         75    5  447 #> 2236         NA    1  448 #> 2237          0    2  448 #> 2238         47    3  448 #> 2239         70    4  448 #> 2240         47    5  448 #> 2241         NA    1  449 #> 2242          0    2  449 #> 2243         45    3  449 #> 2244         76    4  449 #> 2245         50    5  449 #> 2246         NA    1  450 #> 2247          0    2  450 #> 2248         27    3  450 #> 2249         63    4  450 #> 2250        417    5  450 #> 2251         NA    1  451 #> 2252          0    2  451 #> 2253         42    3  451 #> 2254         35    4  451 #> 2255         87    5  451 #> 2256         NA    1  452 #> 2257          0    2  452 #> 2258         27    3  452 #> 2259         73    4  452 #> 2260         66    5  452 #> 2261         NA    1  453 #> 2262          0    2  453 #> 2263         12    3  453 #> 2264         63    4  453 #> 2265         43    5  453 #> 2266         NA    1  454 #> 2267          0    2  454 #> 2268         32    3  454 #> 2269         73    4  454 #> 2270        111    5  454 #> 2271         NA    1  455 #> 2272          0    2  455 #> 2273         27    3  455 #> 2274         73    4  455 #> 2275        113    5  455 #> 2276         NA    1  456 #> 2277          0    2  456 #> 2278         29    3  456 #> 2279        107    4  456 #> 2280         25    5  456 #> 2281         NA    1  457 #> 2282          0    2  457 #> 2283         18    3  457 #> 2284        106    4  457 #> 2285        212    5  457 #> 2286         NA    1  458 #> 2287          0    2  458 #> 2288         34    3  458 #> 2289         88    4  458 #> 2290        218    5  458 #> 2291         NA    1  459 #> 2292          0    2  459 #> 2293         38    3  459 #> 2294         67    4  459 #> 2295          5    5  459 #> 2296         NA    1  460 #> 2297          0    2  460 #> 2298         32    3  460 #> 2299         79    4  460 #> 2300        154    5  460 #> 2301         NA    1  461 #> 2302          0    2  461 #> 2303         30    3  461 #> 2304         83    4  461 #> 2305         36    5  461 #> 2306         NA    1  462 #> 2307          0    2  462 #> 2308         24    3  462 #> 2309         79    4  462 #> 2310          1    5  462 #> 2311         NA    1  463 #> 2312          0    2  463 #> 2313         26    3  463 #> 2314         78    4  463 #> 2315         18    5  463 #> 2316         NA    1  464 #> 2317          0    2  464 #> 2318         47    3  464 #> 2319         57    4  464 #> 2320         54    5  464 #> 2321         NA    1  465 #> 2322          0    2  465 #> 2323         47    3  465 #> 2324        128    4  465 #> 2325         32    5  465 #> 2326         NA    1  466 #> 2327          0    2  466 #> 2328         43    3  466 #> 2329        102    4  466 #> 2330         16    5  466 #> 2331         NA    1  467 #> 2332          0    2  467 #> 2333         75    3  467 #> 2334         51    4  467 #> 2335        142    5  467 #> 2336         NA    1  468 #> 2337          0    2  468 #> 2338         28    3  468 #> 2339         85    4  468 #> 2340        144    5  468 #> 2341         NA    1  469 #> 2342          0    2  469 #> 2343         43    3  469 #> 2344         67    4  469 #> 2345        364    5  469 #> 2346         NA    1  470 #> 2347          0    2  470 #> 2348         15    3  470 #> 2349         99    4  470 #> 2350         35    5  470 #> 2351         NA    1  471 #> 2352          0    2  471 #> 2353         47    3  471 #> 2354        117    4  471 #> 2355        118    5  471 #> 2356         NA    1  472 #> 2357          0    2  472 #> 2358         23    3  472 #> 2359         87    4  472 #> 2360        517    5  472 #> 2361         NA    1  473 #> 2362          0    2  473 #> 2363         56    3  473 #> 2364         65    4  473 #> 2365          4    5  473 #> 2366         NA    1  474 #> 2367          0    2  474 #> 2368         29    3  474 #> 2369         81    4  474 #> 2370          0    5  474 #> 2371         NA    1  475 #> 2372          0    2  475 #> 2373         53    3  475 #> 2374        159    4  475 #> 2375        201    5  475 #> 2376         NA    1  476 #> 2377          0    2  476 #> 2378         62    3  476 #> 2379         58    4  476 #> 2380        427    5  476 #> 2381         NA    1  477 #> 2382          0    2  477 #> 2383         52    3  477 #> 2384         62    4  477 #> 2385         58    5  477 #> 2386         NA    1  478 #> 2387          0    2  478 #> 2388         22    3  478 #> 2389        124    4  478 #> 2390         67    5  478 #> 2391         NA    1  479 #> 2392          0    2  479 #> 2393         27    3  479 #> 2394         95    4  479 #> 2395        184    5  479 #> 2396         NA    1  480 #> 2397          0    2  480 #> 2398         28    3  480 #> 2399         87    4  480 #> 2400         10    5  480 #> 2401         NA    1  481 #> 2402          0    2  481 #> 2403         40    3  481 #> 2404         91    4  481 #> 2405        500    5  481 #> 2406         NA    1  482 #> 2407          0    2  482 #> 2408         41    3  482 #> 2409         91    4  482 #> 2410         48    5  482 #> 2411         NA    1  483 #> 2412          0    2  483 #> 2413         32    3  483 #> 2414         93    4  483 #> 2415        205    5  483 #> 2416         NA    1  484 #> 2417          0    2  484 #> 2418         38    3  484 #> 2419         52    4  484 #> 2420         25    5  484 #> 2421         NA    1  485 #> 2422          0    2  485 #> 2423         55    3  485 #> 2424        126    4  485 #> 2425         81    5  485 #> 2426         NA    1  486 #> 2427          0    2  486 #> 2428         43    3  486 #> 2429         79    4  486 #> 2430        257    5  486 #> 2431         NA    1  487 #> 2432          0    2  487 #> 2433         43    3  487 #> 2434        121    4  487 #> 2435        190    5  487 #> 2436         NA    1  488 #> 2437          0    2  488 #> 2438         36    3  488 #> 2439         75    4  488 #> 2440        107    5  488 #> 2441         NA    1  489 #> 2442          0    2  489 #> 2443         51    3  489 #> 2444         86    4  489 #> 2445          4    5  489 #> 2446         NA    1  490 #> 2447          0    2  490 #> 2448         27    3  490 #> 2449         72    4  490 #> 2450         95    5  490 #> 2451         NA    1  491 #> 2452          0    2  491 #> 2453         46    3  491 #> 2454         73    4  491 #> 2455          6    5  491 #> 2456         NA    1  492 #> 2457          0    2  492 #> 2458         75    3  492 #> 2459         84    4  492 #> 2460         67    5  492 #> 2461         NA    1  493 #> 2462          0    2  493 #> 2463         40    3  493 #> 2464         59    4  493 #> 2465        186    5  493 #> 2466         NA    1  494 #> 2467          0    2  494 #> 2468         29    3  494 #> 2469         77    4  494 #> 2470        343    5  494 #> 2471         NA    1  495 #> 2472          0    2  495 #> 2473         33    3  495 #> 2474        126    4  495 #> 2475        254    5  495 #> 2476         NA    1  496 #> 2477          0    2  496 #> 2478         18    3  496 #> 2479         76    4  496 #> 2480        160    5  496 #> 2481         NA    1  497 #> 2482          0    2  497 #> 2483         54    3  497 #> 2484        113    4  497 #> 2485        315    5  497 #> 2486         NA    1  498 #> 2487          0    2  498 #> 2488         26    3  498 #> 2489        131    4  498 #> 2490        148    5  498 #> 2491         NA    1  499 #> 2492          0    2  499 #> 2493         47    3  499 #> 2494         76    4  499 #> 2495          4    5  499 #> 2496         NA    1  500 #> 2497          0    2  500 #> 2498         40    3  500 #> 2499         48    4  500 #> 2500         86    5  500"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single truncated triangle — truncate_triangle","title":"Get a single truncated triangle — truncate_triangle","text":"function takes integer t reporting triangle generates truncated reporting triangle, remove last t observations.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single truncated triangle — truncate_triangle","text":"","code":"truncate_triangle(t, reporting_triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single truncated triangle — truncate_triangle","text":"t Integer indicating number timepoints truncate bottom original reporting triangle. reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single truncated triangle — truncate_triangle","text":"trunc_rep_tri Matrix t fewer rows reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single truncated triangle — truncate_triangle","text":"","code":"# example code triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rep_tri <- truncate_triangle(t = 1, reporting_triangle = triangle) trunc_rep_tri #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate truncated reporting triangles — truncate_triangles","title":"Generate truncated reporting triangles — truncate_triangles","text":"function ingests reporting triangle/matrix number truncated reporting triangles want create, n, iteratively truncates reporting triangle, working latest reference time (bottom) older reference times (top) n snapshots.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate truncated reporting triangles — truncate_triangles","text":"","code":"truncate_triangles(   reporting_triangle,   n = nrow(reporting_triangle) - sum(is.na(rowSums(reporting_triangle))) - 1 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate truncated reporting triangles — truncate_triangles","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). n Integer indicating number retrospective truncated triangles generated, always starting recent reference time. Default generate truncated matrices row insufficient rows generate nowcasts , minimum requirement one  number horizon rows (rows containing NAs).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate truncated reporting triangles — truncate_triangles","text":"trunc_rep_tri_list List n truncated reporting triangle matrices many rows available given truncation, number columns reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate truncated reporting triangles — truncate_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  truncated_rts <- truncate_triangles(triangle, n = 2) truncated_rts[1:2] #> [[1]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA #>  #> [[2]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #>"},{"path":"https://baselinenowcast.epinowcast.org/news/index.html","id":"baselinenowcast-0001000","dir":"Changelog","previous_headings":"","what":"baselinenowcast 0.0.0.1000","title":"baselinenowcast 0.0.0.1000","text":"Add intermediate-level grouping functions generate point nowcast reporting triangle take point nowcast estimate apply uncertainty. Refactor estimate_uncertainty take error model function, aggregator function aggregating across reference times, aggregator function aggregating across delays. Fix internal checks ensure sufficient data specified target choice, using number NA rows rather number columns proxy number horizons. Replace argument names complete versions possible. Replace function names action-oriented function naming. Add new logo. Add check ensure sufficient non-zero values reporting triangle. Add check ensure sufficient n specified delay estimate. Change requirement number rows used delay estimation need greater equal number columns, instead least one row contains full set observations. Bug fix change requirement sum elements structure vector must greater number columns. Add support passing restricted set functions estimate_dispersion() function transform “target” dataset across reference dates. Implements safe iterator step retrospective point nowcasts generated list retrospective reporting triangles, ensuring iterations continue even retrospective point nowcasts can generated. Modify vignette consistent decided upon defaults number reference times used delay estimation uncertainty. Replace function named replace_lower_right_with_NA() generate_triangle(). Removes requirement elements reporting triangle integers. Modify method used estimate dispersion. Instead estimating dispersion individual elements nowcast matrix, now estimate dispersion predicted nowcasts summed across reporting dates function forecast horizon. Standardises naming objects matrices vs vectors objects contain observations, point estimates, probabilistic draws. Modifies functions estimate delay generate point nowcast ensure throw error/warning first element delay PMF 0. Adjusts function estimate delay distribution able handle complete partially complete reporting triangles. Add function convert list expected observed reporting squares long tidy dataframe indexed reference time, delay, sample index. Implement zero-handling bottom left reporting triangle applying delay generate point nowcast. Add function generate list expected observed reporting squares. Add function generate expected observed reporting square point nowcast vector dispersion parameters. Add function estimate dispersion parameters match list nowcasts observed reporting triangles. Add functions generate retrospective nowcasts single reporting triangle. Refactor uncertainty estimation use user-facing function generate retrospective reporting triangles. Methods write-separate vignette. Introduced function estimate uncertainty triangle nowcasted delay distribution. Introduced functions get delay estimate apply delay, used Getting Started vignette. Added package skeleton.","code":""}]
