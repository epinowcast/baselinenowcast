[{"path":"https://baselinenowcast.epinowcast.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 baselinenowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with baselinenowcast","text":"Incomplete reporting epidemiological data recent times can result case count data right-truncated. Right-truncated case counts can misleading interpret face-value, typically show decline number reported observations recent time points. time points highest proportion data yet observed dataset. imputation cases eventually observed current time referred nowcast. number methods developed nowcast epidemiological case count data. purpose baselinenowcast provide nowcast computed directly recent observations estimate delay distribution empirically, apply partially observed data generate nowcast. section, describe example nowcasting problem, demonstrate use baselinenowcast estimate delay distribution data apply estimate generate probabilistic nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Getting Started with baselinenowcast","text":"well baselinenowcast package vignette also uses epinowcast, ggplot2, dplyr. installation epinowcast required using package, however, pre post-processing functions provide lot data wrangling needed set nowcasting problem. note components vignette require installing CmdStan, downstream dependency epinowcast. just using R components epinowcast, can installed using example lines code , need additionally install CmdStan.","code":"# Installing epinowcast # install.packages( #nolint #  \"epinowcast\", repos = \"https://epinowcast.r-universe.dev\" #nolint # ) #nolint # Load packages library(baselinenowcast) library(epinowcast) library(ggplot2) library(dplyr) # Set seed for reproducibility set.seed(123)"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Getting Started with baselinenowcast","text":"Nowcasting right-truncated case counts involves estimation reporting delays recently reported data. , need case counts diagnosed (often called “reference date”) reported (.e. administratively recorded via public health surveillance; often called “report date”). difference reference date report date reporting delay. quick start, use daily level data Robert Koch Institute via Germany Nowcasting hub. data represent hospitalisation counts date positive test date test report Germany October 1, 2021.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"filtering-and-plotting-the-data","dir":"Articles","previous_headings":"","what":"Filtering and plotting the data","title":"Getting Started with baselinenowcast","text":"filter data just look national-level data, age groups. pretend making nowcast July 1, 2021, therefore exclude reference dates report dates date. germany_covid19_hosp provided package data epinowcast Let’s start plotting sum reports reference date, compare eventually observe final date complete dataset. red line shows cumulative number confirmed admissions report date, across delays, using data available July 1, 2021. demonstrates characteristic behavior right-truncation. yet observed data become available longer delays recent time points. task estimate “final” cumulative number cases reference date, observed “fully observed” data October 2021. black line represents quantity evaluate nowcast , red line represents data available us July 1st, 2021.","code":"data_long <- germany_covid19_hosp # import data from epinowcast  ggplot() +   geom_line(     # Plot the data summed across reporting days     data = data_long |>       enw_filter_report_dates(latest_date = \"2021-07-01\") |>       filter(         location == \"DE\", age_group == \"00+\",         report_date == \"2021-07-01\"       ),     aes(x = reference_date, y = confirm), color = \"darkred\"   ) +   geom_line(     data = data_long |>       filter(         location == \"DE\", age_group == \"00+\",         reference_date <= \"2021-07-01\"       ) |>       group_by(reference_date) |>       summarise(confirm = max(confirm)),     aes(x = reference_date, y = confirm), color = \"black\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time and later observed cases\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Getting Started with baselinenowcast","text":"order compute nowcast data, need start creating call reporting triangle. wide formatted dataframe row represents one time points reference column represents delay, starting 0 maximum delay. entries represent number new cases assigned reference time point particular delay. reporting triangle used estimate delay distribution, proportion final number cases reported particular delay. Since data reported referenced daily, use time scale days create reporting triangle, delay reference date can temporal granularity. example, fit delay distribution, apply generate nowcast using data, national level data Germany age groups. However, components can separated, example, use national level data age groups estimate delay distribution, apply elsewhere, example data stratified age group location. type “borrowing” another training dataset can really useful low counts relatively sparse data, likely case smaller populations. sections, specify nowcast date, maximum delay, number observations reference date want use estimate delay distribution. recommend choosing maximum delay number historical observations based exploratory data analysis, specifications change significantly depending dataset. Next use epinowcast function, enw_preprocess_data() data form long tidy dataframe indexed reference date report date filtered strata interested , generate reporting triangle.","code":"nowcast_date <- \"2021-07-01\" # Specify the maximum delay, which will determine the length of your delay # distribution. Empirical data outside this delay window will not be used for # training. max_delay <- 40 # Specify the number of reference dates to use to estimate the delay # distribution.Note this assumes you want the most recent observations # (though we can consider changing this) n_history <- 60 # Noting that this is the only way epinowcast preprocessing would work -- # return to this later. IDate was throwing errors if we used the dplyr processed # observed long above. observed_long <- data_long[location == \"DE\"][age_group == \"00+\"] |> # nolint   enw_filter_report_dates(latest_date = nowcast_date) |>   enw_filter_reference_dates(include_days = n_history - 1) head(observed_long) ##    reference_date location age_group confirm report_date ##            <IDat>   <fctr>    <fctr>   <int>      <IDat> ## 1:     2021-05-03       DE       00+     107  2021-05-03 ## 2:     2021-05-04       DE       00+     240  2021-05-04 ## 3:     2021-05-05       DE       00+     245  2021-05-05 ## 4:     2021-05-06       DE       00+     259  2021-05-06 ## 5:     2021-05-07       DE       00+     263  2021-05-07 ## 6:     2021-05-08       DE       00+     189  2021-05-08 # Get the reporting triangle, adding an additional day because epinowcast # we want the max_delay + 1 entries since 0 is a valid delay. pobs <- enw_preprocess_data(   obs = observed_long,   max_delay = max_delay + 1 )  triangle_full <- pobs$reporting_triangle[[1]] head(triangle_full) ## Key: <.group, reference_date> ##    .group reference_date     0     1     2     3     4     5     6     7     8 ##     <num>         <IDat> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:      1     2021-05-03   107    76    45    25    23    16     5     4     6 ## 2:      1     2021-05-04   240   178    60    36    33    11     5    21    19 ## 3:      1     2021-05-05   245   158    70    42    22    17    36    43    34 ## 4:      1     2021-05-06   259   163    69    22    16    42    57    36    10 ## 5:      1     2021-05-07   263   169    46    15    55    32    27    15    25 ## 6:      1     2021-05-08   189    97    34    78    42    30    23    27     9 ##        9    10    11    12    13    14    15    16    17    18    19    20 ##    <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:    25     1     3     7     3     5     0     6    10     5     3     1 ## 2:    15     4     7     8     5    17    11     7    10     5     5     6 ## 3:    17    21    10     4    24    23    35    27    12     2     1     2 ## 4:    21    11     4    24    30    26    22    16     7     3     2     9 ## 5:     8     8    23    26    27    11     9     0     0     6     4     0 ## 6:     7    18    31    18    28    13     5     1     8    13    12    11 ##       21    22    23    24    25    26    27    28    29    30    31    32 ##    <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:     3     1     2     1     0     5     0     1     1     1     0     0 ## 2:     2     1     5     5     5     2     1     4     7     1     1     0 ## 3:    12    10    13     4     1     0     0     7     2     3     5     1 ## 4:     8     8     8     5     2     1     5     1     2     4     1     1 ## 5:     7     6     6     0     2     7     4     2     0     1     0     2 ## 6:     6     2     0     4     5     5     3     2     0     1     1     1 ##       33    34    35    36    37    38    39    40 ##    <int> <int> <int> <int> <int> <int> <int> <int> ## 1:     2     0     0     4     1     0     3     0 ## 2:     1     0     1     2     1     2     3     0 ## 3:     3     2     5     2     6     2     0     0 ## 4:     1     3     4     4     3     3     1    10 ## 5:     3     4     2     0     2     0     4     4 ## 6:     2     1     4     0     0     0     3     7 # Check that the sum of the rows in the reporting triangle is the # same as the sums across report dates by reference date observed_sums <- observed_long |>   group_by(reference_date) |>   summarise(total_confirmed = max(confirm)) |>   mutate(triangle_sums = rowSums(triangle_full |>     select(-`.group`, -reference_date) |>     as.matrix() |>     unname()))"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-delay","dir":"Articles","previous_headings":"","what":"Estimate delay","title":"Getting Started with baselinenowcast","text":"Now reporting triangle, now ready pass baselinenowcast package estimate delay distribution. tell function maximum delay number observations want use, though default use whole reporting triangle. reporting triangle small user-specified delays number training observations, function throw error. want pass reporting triangle (single group!) function. reference date repeated reporting triangle contains multiple strata, function throw error. get_delay_estimate() function expects following inputs: - triangle: matrix reporting triangle single strata. rows represent time points columns represent observed delays, starting 0. - max_delay: integer indicating maximum delay estimate. must less equal number rows triangle minus 1, since assume triangle indexed 0. - n_history: integer indicating number observations reference date use fit delay distribution. must less equal number rows triangle. enw_preprocess() returns triangle columns .group .reference_date delays indicated column names. eventually write methods map input formats , start demonstrating functionality matrix reporting triangle.","code":"triangle <- triangle_full |>   select(-`.group`, -reference_date) |> # remove unnecessary columns   as.matrix() |>   unname() head(triangle) ##      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] ## [1,]  107   76   45   25   23   16    5    4    6    25     1     3     7     3 ## [2,]  240  178   60   36   33   11    5   21   19    15     4     7     8     5 ## [3,]  245  158   70   42   22   17   36   43   34    17    21    10     4    24 ## [4,]  259  163   69   22   16   42   57   36   10    21    11     4    24    30 ## [5,]  263  169   46   15   55   32   27   15   25     8     8    23    26    27 ## [6,]  189   97   34   78   42   30   23   27    9     7    18    31    18    28 ##      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] ## [1,]     5     0     6    10     5     3     1     3     1     2     1     0 ## [2,]    17    11     7    10     5     5     6     2     1     5     5     5 ## [3,]    23    35    27    12     2     1     2    12    10    13     4     1 ## [4,]    26    22    16     7     3     2     9     8     8     8     5     2 ## [5,]    11     9     0     0     6     4     0     7     6     6     0     2 ## [6,]    13     5     1     8    13    12    11     6     2     0     4     5 ##      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] ## [1,]     5     0     1     1     1     0     0     2     0     0     4     1 ## [2,]     2     1     4     7     1     1     0     1     0     1     2     1 ## [3,]     0     0     7     2     3     5     1     3     2     5     2     6 ## [4,]     1     5     1     2     4     1     1     1     3     4     4     3 ## [5,]     7     4     2     0     1     0     2     3     4     2     0     2 ## [6,]     5     3     2     0     1     1     1     2     1     4     0     0 ##      [,39] [,40] [,41] ## [1,]     0     3     0 ## [2,]     2     3     0 ## [3,]     2     0     0 ## [4,]     3     1    10 ## [5,]     0     4     4 ## [6,]     0     3     7 delay_pmf <- get_delay_estimate(   triangle = triangle,   max_delay = max_delay,   n_history = n_history )  delay_df <- data.frame(   delay = 0:(length(delay_pmf) - 1),   pmf = delay_pmf )  ggplot(delay_df) +   geom_line(aes(x = delay, y = cumsum(pmf))) +   xlab(\"Delay\") +   ylab(\"Cumulative proportion reported\") +   ggtitle(\"Empirical point estimate of cumulative proportion reported by delay\") + # nolint   theme_bw() ggplot(delay_df) +   geom_line(aes(x = delay, y = pmf)) +   xlab(\"Delay\") +   ylab(\"Proportion reported\") +   ggtitle(\"Empirical point estimate of proportion reported by delay\") +   theme_bw()"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"apply-delay-to-generate-point-nowcast","dir":"Articles","previous_headings":"","what":"Apply delay to generate point nowcast","title":"Getting Started with baselinenowcast","text":"next step workflow take estimated delay distribution apply partially observed reporting triangle, generating estimate number new cases confirmed reference date delay. generate point estimate can call reporting square, complete set reference dates delays. case, applying delay reporting triangle used generate estimate, doesn’t always case. reporting triangle applying must max_delay delay estimate. ’ll make quick plot compare nowcasted confirmed cases July 1, 2021, observations October 1, 2021. ’ll compare right-truncated data available July 1, 2021. can see point nowcast slightly overestimates eventually reported (black line), decent overall job correcting right-truncation observed red line (data prior nowcast). really want probabilistic estimate nowcasted case counts.","code":"point_reporting_square <- apply_delay(   triangle_to_nowcast = triangle,   delay_pmf = delay_pmf ) final_data <- data_long[location == \"DE\"][age_group == \"00+\"] |> # nolint   enw_filter_report_dates(latest_date = \"2021-10-01\") |>   enw_filter_reference_dates(     latest_date = \"2021-07-01\",     include_days = n_history - 1   ) |>   group_by(reference_date) |>   summarise(     total_confirmed = max(confirm)   ) |>   mutate(nowcast = rowSums(point_reporting_square))  ggplot() +   geom_line(     # Plot the data summed across reporting days as of July 1,2021     data = observed_long |>       group_by(reference_date) |>       summarise(total_confirmed = max(confirm)),     aes(x = reference_date, y = total_confirmed), color = \"darkred\"   ) +   geom_line(     data = final_data,     aes(x = reference_date, y = total_confirmed), color = \"black\"   ) +   geom_line(     data = final_data,     aes(x = reference_date, y = nowcast), color = \"darkblue\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time, nowcasted, and later observed cases\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-uncertainty","dir":"Articles","previous_headings":"","what":"Estimate uncertainty","title":"Getting Started with baselinenowcast","text":"far, ’ve demonstrated generate point estimate nowcast. like generate probabilistic nowcasts, require estimating empirical error expected observations actual observations applying delay distribution. assumes negative binomial observation model. start estimating dispersion parameter negative binomial function delay d","code":"disp_params <- estimate_uncertainty(   triangle_to_nowcast = triangle,   delay_pmf = delay_pmf )"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"generate-probabilistic-nowcast","dir":"Articles","previous_headings":"","what":"Generate probabilistic nowcast","title":"Getting Started with baselinenowcast","text":"Now estimated dispersion, can use delay distribution, reporting triangle want nowcast, dispersion parameters generate probabilistic nowcast. , might want make sure include necessary metadata user passes , write methods dispatch objects particular type spit back things dates inputted.","code":"# nowcast <- generate_nowcast( #nolint # triangle_to_nowcast = triangle, #nolint # delay_df = delay_df, #nolint # disp_params = disp_params #nolint # ) #nolint"},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kaitlyn Johnson. Author, maintainer, copyright holder. Sam Abbott. Author. Johannes Bracher. Author. Sebastian Funk. Author.","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson K, Abbott S, Bracher J, Funk S (2025). baselinenowcast: Baseline nowcast. R package version 0.0.0.1000, https://github.com/epinowcast/baselinenowcast/, https://baselinenowcast.epinowcast.org.","code":"@Manual{,   title = {baselinenowcast: Baseline nowcast},   author = {Kaitlyn Johnson and Sam Abbott and Johannes Bracher and Sebastian Funk},   year = {2025},   note = {R package version 0.0.0.1000, https://github.com/epinowcast/baselinenowcast/},   url = {https://baselinenowcast.epinowcast.org}, }"},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Baseline nowcast for right-truncated epidemiological data","text":"Provides functions nowcasting right-truncated epidemiological data, based heavily method implemented https://github.com/KITmetricslab/RESPINOW-Hub/tree/main/code/baseline","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Baseline nowcast for right-truncated epidemiological data","text":"install development version GitHub (warning! version may contain breaking changes /bugs), use pak package:","code":"pak::pak(file.path(\"epinowcast\", \"baselinenowcast\"))"},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Baseline nowcast for right-truncated epidemiological data","text":"provide range documentation, case studies, community spaces ask (answer!) questions: organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use baselinenowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Baseline nowcast for right-truncated epidemiological data","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request see contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"Contributing","what":"How to make a bug report or feature request","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please briefly describe problem output expect issue. See contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"Contributing","what":"Code of Conduct","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please note baselinenowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Baseline nowcast for right-truncated epidemiological data","text":"use baselinenowcast work, please consider citing citation(\"baselinenowcast\").","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"contributions project gratefully acknowledged using allcontributors package following allcontributors specification. Contributions kind welcome! kaitejohnson, seabbs, sbfnk","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay pmf. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay pmf. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"Apply delay generate point nowcast Generate point estimate completed reporting square (rectangle) reporting triangle want complete nowcast delay pmf. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay pmf. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"","code":"apply_delay(triangle_to_nowcast, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay pmf. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"triangle_to_nowcast Matrix incomplete reporting triangle nowcasted, rows representing time points reference columns representing delays delay_pmf Vector delays assumed indexed starting first delay column triangle_to_nowcast","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay pmf. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"expectation, matrix number rows columns triangle_to_nowcast missing values filled point estimates","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay pmf. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   triangle = triangle,   max_delay = 3,   n_history = 4 ) reporting_square <- apply_delay(   triangle_to_nowcast = triangle,   delay_pmf = delay_pmf ) print(reporting_square) #>      [,1] [,2]     [,3]     [,4] #> [1,]   80   50 25.00000 10.00000 #> [2,]  100   50 30.00000 20.00000 #> [3,]   90   45 25.00000 17.77778 #> [4,]   80   40 23.15789 15.90643 #> [5,]   70   35 20.26316 13.91813"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","title":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","text":"Calculate updates rows expected nowcasted triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","text":"","code":".calc_expectation(co, expectation, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","text":"co Integer indicating column index expectation Matrix partially complete reporting triangle delay_pmf Vector specifying probability case reported delay d","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","text":"Matrix another set entries corresponding updated values specified rows column","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"Compute sum entries column matrix sets matrices booleans TRUE","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"","code":".conditional_sum_cols(col, matrix_bool1, matrix_bool2, matrix_to_sum)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"col Integer indicating column sum matrix_bool1 Matrix booleans first set indices matrix_bool2 Matrix booleans second set indices matrix_to_sum Matrix summed specific colun","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"Numeric summing values matrix_to_sum specified column entries true","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"Takes vector observations vector expectations performs MLE estimator estimate dispersion parameter negative binomial. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7fab4dce7b559c3076ab643cf22048cb5fb84cc2/code/baseline/functions.R#L404 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"","code":".fit_nb(x, mu)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"x observed values mu expected values","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"maximum likelihood estimate dispersion","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-get_exp_and_obs_as_of_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Get expected and observed additional counts as of reference time t — .get_exp_and_obs_as_of_t","title":"Get expected and observed additional counts as of reference time t — .get_exp_and_obs_as_of_t","text":"Get expected observed additional counts reference time t","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-get_exp_and_obs_as_of_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get expected and observed additional counts as of reference time t — .get_exp_and_obs_as_of_t","text":"","code":".get_exp_and_obs_as_of_t(t, matr_observed, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-get_exp_and_obs_as_of_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get expected and observed additional counts as of reference time t — .get_exp_and_obs_as_of_t","text":"t Integer indicating \"\" time matr_observed Matrix available observations, NAs observations missing. delay_pmf Vector delays assumed indexed starting first delay column matr_observed","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-get_exp_and_obs_as_of_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get expected and observed additional counts as of reference time t — .get_exp_and_obs_as_of_t","text":"Dataframe length delay_pmf containing expected values added delay time t observed values added time t","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Handle negative values reporting triangle Takes reporting triangle returns matrix format input triangle, negative values reporting handled via passing subsequent days (longer delay shorter). code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"","code":".handle_neg_vals(triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"pos_triangle matrix positive integers negative values reporting handled via passing subsequent days delay","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-replace_lower_right_with_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace the lower right triangle of the matrix with NAs — .replace_lower_right_with_NA","title":"Replace the lower right triangle of the matrix with NAs — .replace_lower_right_with_NA","text":"Replace lower right triangle matrix NAs","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-replace_lower_right_with_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace the lower right triangle of the matrix with NAs — .replace_lower_right_with_NA","text":"","code":".replace_lower_right_with_NA(matrix)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-replace_lower_right_with_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace the lower right triangle of the matrix with NAs — .replace_lower_right_with_NA","text":"matrix Matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-replace_lower_right_with_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace the lower right triangle of the matrix with NAs — .replace_lower_right_with_NA","text":"matrix dimensions, NAs lower right entries","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle to nowcast and delay pmf together Various checks to make sure that the reporting triangle and the delay pmf passed in to apply_delay() are formatted properly and compatible — .validate_delay_and_triangle","title":"Validate triangle to nowcast and delay pmf together Various checks to make sure that the reporting triangle and the delay pmf passed in to apply_delay() are formatted properly and compatible — .validate_delay_and_triangle","text":"Validate triangle nowcast delay pmf together Various checks make sure reporting triangle  delay pmf passed apply_delay() formatted properly compatible","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle to nowcast and delay pmf together Various checks to make sure that the reporting triangle and the delay pmf passed in to apply_delay() are formatted properly and compatible — .validate_delay_and_triangle","text":"","code":".validate_delay_and_triangle(triangle, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle to nowcast and delay pmf together Various checks to make sure that the reporting triangle and the delay pmf passed in to apply_delay() are formatted properly and compatible — .validate_delay_and_triangle","text":"triangle Matrix values rows indicating time points columns indicating delays delay_pmf Vector length number delays indicating probability case reported given delay","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle to nowcast and delay pmf together Various checks to make sure that the reporting triangle and the delay pmf passed in to apply_delay() are formatted properly and compatible — .validate_delay_and_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"Validate triangle Various checks make sure reporting triangle passed get_delay_estimate() formatted properly.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"","code":".validate_triangle(   triangle,   max_delay = ncol(triangle) - 1,   n_history = nrow(triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n_history Integer indicating number reference dates used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle)-1","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the uncertainty in the nowcasts — estimate_uncertainty","title":"Estimate the uncertainty in the nowcasts — estimate_uncertainty","text":"function takes input triangle want nowcast delay pmf, may estimated separately. uses delay pmf compute, forecast date delay, expected number confirmed cases forecast date delay d. delay, estimates independent negative binomial dispersion parameter. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub, Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/39e2b17bc79492b0aee4c0b615a1c8dbf978ef53/code/baseline/functions.R#L142 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the uncertainty in the nowcasts — estimate_uncertainty","text":"","code":"estimate_uncertainty(   triangle_to_nowcast,   delay_pmf,   n_history_dispersion = nrow(triangle_to_nowcast) - 1 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the uncertainty in the nowcasts — estimate_uncertainty","text":"triangle_to_nowcast matrix incomplete reporting triangle nowcasted, rows representing time points reference columns representing delays delay_pmf Vector delays assumed indexed starting first delay column triangle_to_nowcast n_history_dispersion Integer indicating number reference dates used estimate dispersion, always starting recent refrence date. default use whole reporting triangle, nrow(triangle_to_nowcast) - 1","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the uncertainty in the nowcasts — estimate_uncertainty","text":"Vector dispersion parameters length delay_pmf -1","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_uncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the uncertainty in the nowcasts — estimate_uncertainty","text":"","code":"triangle <- matrix(   c(     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 6,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   triangle = triangle,   max_delay = 3,   n_history = 4 ) disp_params <- estimate_uncertainty(   triangle_to_nowcast = triangle,   delay_pmf = delay_pmf,   n_history_dispersion = 5 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"Estimate delay distribution reporting triangle Provides estimate reporting delay function delay, based reporting triangle specified maximum delay number reference date observations used estimation. point estimate delay computed empirically, using iterative algorithm starting recent observations. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"","code":"get_delay_estimate(   triangle,   max_delay = ncol(triangle) - 1,   n_history = nrow(triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n_history Integer indicating number reference dates used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle)-1","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"delay_df 0-indexed vector length max_delay + 1 columns indicating point estimate empirical probability mass delay","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   triangle = triangle,   max_delay = 3,   n_history = 4 ) print(delay_pmf) #> [1] 0.5029412 0.2514706 0.1455882 0.1000000"},{"path":"https://baselinenowcast.epinowcast.org/news/index.html","id":"baselinenowcast-0001000","dir":"Changelog","previous_headings":"","what":"baselinenowcast 0.0.0.1000","title":"baselinenowcast 0.0.0.1000","text":"Introduced function estimate uncertainty triangle nowcasted delay distribution. Introduced functions get delay estimate apply delay, used Getting Started vignette. Added package skeleton.","code":""}]
