[{"path":"https://baselinenowcast.epinowcast.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 baselinenowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with baselinenowcast","text":"Incomplete reporting epidemiological data recent times can result case count data right-truncated. Right-truncated case counts can misleading interpret face-value, typically show decline number reported observations recent time points. time points highest proportion data yet observed dataset. imputation cases eventually observed current time referred nowcast. number methods developed nowcast epidemiological case count data. purpose baselinenowcast provide nowcast computed directly recent observations estimate delay distribution empirically, apply partially observed data generate nowcast. section, describe example nowcasting problem, demonstrate use baselinenowcast estimate delay distribution data apply estimate generate probabilistic nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Getting Started with baselinenowcast","text":"well baselinenowcast package vignette also uses epinowcast, ggplot2, dplyr. installation epinowcast required using package, however, pre post-processing functions provide lot data wrangling needed set nowcasting problem. note components vignette require installing CmdStan, downstream dependency epinowcast. just using R components epinowcast, can installed using example lines code , need additionally install CmdStan.","code":"# Installing epinowcast # install.packages( #nolint #  \"epinowcast\", repos = \"https://epinowcast.r-universe.dev\" #nolint # ) #nolint # Load packages library(baselinenowcast) library(epinowcast) library(ggplot2) library(dplyr) # Set seed for reproducibility set.seed(123)"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Getting Started with baselinenowcast","text":"Nowcasting right-truncated case counts involves estimation reporting delays recently reported data. , need case counts diagnosed (often called “reference date”) reported (.e. administratively recorded via public health surveillance; often called “report date”). difference reference date report date reporting delay. quick start, use daily level data Robert Koch Institute via Germany Nowcasting hub. data represent hospitalisation counts date positive test date test report Germany October 1, 2021.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"Getting Started with baselinenowcast","text":"filter data just look national-level data, age groups. pretend making nowcast July 1, 2021, therefore exclude reference dates report dates date. germany_covid19_hosp provided package data epinowcast Let’s start plotting values reported day admissions, compare eventually observe final date complete dataset.","code":"observed_long <- epinowcast::germany_covid19_hosp |>   enw_filter_report_dates(latest_date = \"2021-07-01\") |>   dplyr::filter(location == \"DE\", age_group == \"00+\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"Getting Started with baselinenowcast","text":"red line shows cumulative number confirmed admissions report date, across delays, using data available July 1, 2021. demonstrates characteristic behavior right-truncation. yet observed data become available longer delays recent time points. task estimate “final” cumulative number cases reference date, observed “fully observed” data October 2021. black line represents quantity evaluate nowcast , red line represents data available us July 1st, 2021.","code":"ggplot() +   geom_line(     # Plot the data summed across reporting days     data = observed_long |>       group_by(reference_date) |>       summarise(total_confirmed = sum(confirm)),     aes(x = reference_date, y = total_confirmed), color = \"darkred\"   ) +   geom_line(     data = epinowcast::germany_covid19_hosp |>       dplyr::filter(location == \"DE\", age_group == \"00+\") |>       group_by(reference_date) |>       summarise(total_confirmed = sum(confirm)) |>       dplyr::filter(reference_date <= \"2021-07-01\"),     aes(x = reference_date, y = total_confirmed), color = \"black\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing all admissions by reference date and those with no delay\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Getting Started with baselinenowcast","text":"order compute nowcast data, need start creating call reporting triangle. wide formatted dataframe row represents one time points reference column represents delay, starting 0 maximum delay. entries represent number new cases assigned reference time point particular delay. reporting triangle used estimate delay distribution, proportion final number cases reported particular delay. Since data reported referenced daily, use time scale days create reporting triangle, delay reference date can temporal granularity. example, fit delay distribution, apply generate nowcast using data, national level data Germany age groups. However, components can separated, example, use national level data age groups estimate delay distribution, apply elsewhere, example data stratified age group location. type “borrowing” another training dataset can really useful low counts relatively sparse data, likely case smaller populations. sections, specify nowcast date, maximum delay, number observations reference date want use estimate delay distribution. recommend choosing maximum delay number historical observations based exploratory data analysis, specifications change significantly depending dataset. Next use epinowcast function, enw_preprocess_data() data form long tidy dataframe indexed reference date report date filtered strata interested , generate reporting triangle.","code":"nowcast_date <- \"2021-07-01\" # Specify the maximum delay, which will determine the length of your delay # distribution. Empirical data outside this delay window will not be used for # training. max_delay <- 40 # Specify the number of reference dates to use to estimate the delay # distribution.Note this assumes you want the most recent observations # (though we can consider changing this) n_history <- 60 # Noting that this is the only way epinowcast preprocessing would work -- # return to this later. IDate was throwing errors if we used the dplyr processed # observed long above. observed_long <- epinowcast::germany_covid19_hosp[location == \"DE\"][age_group == \"00+\"] |> # nolint   enw_filter_report_dates(latest_date = nowcast_date) |>   enw_filter_reference_dates(include_days = n_history - 1) head(observed_long) ##    reference_date location age_group confirm report_date ##            <IDat>   <fctr>    <fctr>   <int>      <IDat> ## 1:     2021-05-03       DE       00+     107  2021-05-03 ## 2:     2021-05-04       DE       00+     240  2021-05-04 ## 3:     2021-05-05       DE       00+     245  2021-05-05 ## 4:     2021-05-06       DE       00+     259  2021-05-06 ## 5:     2021-05-07       DE       00+     263  2021-05-07 ## 6:     2021-05-08       DE       00+     189  2021-05-08 # Get the reporting triangle, adding an additional day because epinowcast # we want the max_delay + 1 entries since 0 is a valid delay. pobs <- enw_preprocess_data(   obs = observed_long,   max_delay = max_delay + 1 )  triangle_full <- pobs$reporting_triangle[[1]] head(triangle_full) ## Key: <.group, reference_date> ##    .group reference_date     0     1     2     3     4     5     6     7     8 ##     <num>         <IDat> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:      1     2021-05-03   107    76    45    25    23    16     5     4     6 ## 2:      1     2021-05-04   240   178    60    36    33    11     5    21    19 ## 3:      1     2021-05-05   245   158    70    42    22    17    36    43    34 ## 4:      1     2021-05-06   259   163    69    22    16    42    57    36    10 ## 5:      1     2021-05-07   263   169    46    15    55    32    27    15    25 ## 6:      1     2021-05-08   189    97    34    78    42    30    23    27     9 ##        9    10    11    12    13    14    15    16    17    18    19    20 ##    <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:    25     1     3     7     3     5     0     6    10     5     3     1 ## 2:    15     4     7     8     5    17    11     7    10     5     5     6 ## 3:    17    21    10     4    24    23    35    27    12     2     1     2 ## 4:    21    11     4    24    30    26    22    16     7     3     2     9 ## 5:     8     8    23    26    27    11     9     0     0     6     4     0 ## 6:     7    18    31    18    28    13     5     1     8    13    12    11 ##       21    22    23    24    25    26    27    28    29    30    31    32 ##    <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:     3     1     2     1     0     5     0     1     1     1     0     0 ## 2:     2     1     5     5     5     2     1     4     7     1     1     0 ## 3:    12    10    13     4     1     0     0     7     2     3     5     1 ## 4:     8     8     8     5     2     1     5     1     2     4     1     1 ## 5:     7     6     6     0     2     7     4     2     0     1     0     2 ## 6:     6     2     0     4     5     5     3     2     0     1     1     1 ##       33    34    35    36    37    38    39    40 ##    <int> <int> <int> <int> <int> <int> <int> <int> ## 1:     2     0     0     4     1     0     3     0 ## 2:     1     0     1     2     1     2     3     0 ## 3:     3     2     5     2     6     2     0     0 ## 4:     1     3     4     4     3     3     1    10 ## 5:     3     4     2     0     2     0     4     4 ## 6:     2     1     4     0     0     0     3     7"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-delay","dir":"Articles","previous_headings":"","what":"Estimate delay","title":"Getting Started with baselinenowcast","text":"Now reporting triangle, now ready pass baselinenowcast package estimate delay distribution. tell function maximum delay number observations want use, though default use whole reporting triangle. reporting triangle small user-specified delays number training observations, function throw error. want pass reporting triangle (single group!) function. reference date repeated reporting triangle contains multiple strata, function throw error. get_delay_estimate() function expects following inputs: - triangle: matrix reporting triangle single strata. rows represent time points columns represent observed delays, starting 0. - max_delay: integer indicating maximum delay estimate. must less equal number rows triangle minus 1, since assume triangle indexed 0. - n_history: integer indicating number observations reference date use fit delay distribution. must less equal number rows triangle. enw_preprocess() returns triangle columns .group .reference_date delays indicated column names. eventually write methods map input formats , start demonstrating functionality matrix reporting triangle.","code":"triangle <- triangle_full |>   dplyr::select(-`.group`, -reference_date) |> # remove unnecessary columns   as.matrix() |>   unname() head(triangle) ##      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] ## [1,]  107   76   45   25   23   16    5    4    6    25     1     3     7     3 ## [2,]  240  178   60   36   33   11    5   21   19    15     4     7     8     5 ## [3,]  245  158   70   42   22   17   36   43   34    17    21    10     4    24 ## [4,]  259  163   69   22   16   42   57   36   10    21    11     4    24    30 ## [5,]  263  169   46   15   55   32   27   15   25     8     8    23    26    27 ## [6,]  189   97   34   78   42   30   23   27    9     7    18    31    18    28 ##      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] ## [1,]     5     0     6    10     5     3     1     3     1     2     1     0 ## [2,]    17    11     7    10     5     5     6     2     1     5     5     5 ## [3,]    23    35    27    12     2     1     2    12    10    13     4     1 ## [4,]    26    22    16     7     3     2     9     8     8     8     5     2 ## [5,]    11     9     0     0     6     4     0     7     6     6     0     2 ## [6,]    13     5     1     8    13    12    11     6     2     0     4     5 ##      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] ## [1,]     5     0     1     1     1     0     0     2     0     0     4     1 ## [2,]     2     1     4     7     1     1     0     1     0     1     2     1 ## [3,]     0     0     7     2     3     5     1     3     2     5     2     6 ## [4,]     1     5     1     2     4     1     1     1     3     4     4     3 ## [5,]     7     4     2     0     1     0     2     3     4     2     0     2 ## [6,]     5     3     2     0     1     1     1     2     1     4     0     0 ##      [,39] [,40] [,41] ## [1,]     0     3     0 ## [2,]     2     3     0 ## [3,]     2     0     0 ## [4,]     3     1    10 ## [5,]     0     4     4 ## [6,]     0     3     7 delay_df <- get_delay_estimate(   triangle = triangle,   max_delay = max_delay,   n_history = n_history )  ggplot(delay_df) +   geom_line(aes(x = delay, y = cumsum(pmf))) +   xlab(\"Delay\") +   ylab(\"Cumulativee proportion reported\") +   ggtitle(\"Empirical point estimate of cumulative proportion reported by delay\") + # nolint   theme_bw() ggplot(delay_df) +   geom_line(aes(x = delay, y = pmf)) +   xlab(\"Delay\") +   ylab(\"Proportion reported\") +   ggtitle(\"Empirical point estimate of proportion reported by delay\") +   theme_bw()"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"apply-delay-to-generate-point-nowcast","dir":"Articles","previous_headings":"","what":"Apply delay to generate point nowcast","title":"Getting Started with baselinenowcast","text":"next step workflow take estimated delay distribution apply partially observed reporting triangle, generating estimate number new cases confirmed reference date delay. generate point estimate can call reporting square, complete set reference dates delays. case, applying delay reporting triangle used generate estimate, doesn’t always case. reporting triangle applying must max_delay delay estimate.","code":"# point_reporting_square <- apply_delay( #nolint #   triangle_to_nowcast = triangle,#nolint #   delay_df#nolint # )#nolint"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-uncertainty","dir":"Articles","previous_headings":"","what":"Estimate uncertainty","title":"Getting Started with baselinenowcast","text":"far, ’ve demonstrated generate point estimate nowcast. like generate probabilistic nowcasts, require estimating empirical error expected observations actual observations applying delay distribution. assumes negative binomial observation model. Note, probably create objects different classes outputs functions, sure necessary","code":"# disp_params <- estimate_uncertainty( #nolint # triangle_to_nowcast = triangle #nolint # delay_pmf = delay_df$pmf #nolint # ) #nolint"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"generate-probabilistic-nowcast","dir":"Articles","previous_headings":"","what":"Generate probabilistic nowcast","title":"Getting Started with baselinenowcast","text":"Now estimated dispersion, can use delay distribution, reporting triangle want nowcast, dispersion parameters generate probabilistic nowcast. , might want make sure include necessary metadata user passes , write methods dispatch objects particular type spit back things dates inputted.","code":"# nowcast <- generate_nowcast( #nolint # triangle_to_nowcast = triangle, #nolint # delay_df = delay_df, #nolint # disp_params = disp_params #nolint # ) #nolint"},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kaitlyn Johnson. Author, maintainer, copyright holder. Sam Abbott. Author. Johannes Bracher. Author. Sebastian Funk. Author.","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson K, Abbott S, Bracher J, Funk S (2025). baselinenowcast: Baseline nowcast. R package version 0.0.0.1000, https://github.com/epinowcast/baselinenowcast/, https://baselinenowcast.epinowcast.org.","code":"@Manual{,   title = {baselinenowcast: Baseline nowcast},   author = {Kaitlyn Johnson and Sam Abbott and Johannes Bracher and Sebastian Funk},   year = {2025},   note = {R package version 0.0.0.1000, https://github.com/epinowcast/baselinenowcast/},   url = {https://baselinenowcast.epinowcast.org}, }"},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Baseline nowcast for right-truncated epidemiological data","text":"Provides functions nowcasting right-truncated epidemiological data, based heavily method implemented https://github.com/KITmetricslab/RESPINOW-Hub/tree/main/code/baseline","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Baseline nowcast for right-truncated epidemiological data","text":"install development version GitHub (warning! version may contain breaking changes /bugs), use pak package:","code":"pak::pak(file.path(\"epinowcast\", \"baselinenowcast\"))"},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Baseline nowcast for right-truncated epidemiological data","text":"provide range documentation, case studies, community spaces ask (answer!) questions: organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use baselinenowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Baseline nowcast for right-truncated epidemiological data","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request see contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"Contributing","what":"How to make a bug report or feature request","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please briefly describe problem output expect issue. See contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"Contributing","what":"Code of Conduct","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please note baselinenowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Baseline nowcast for right-truncated epidemiological data","text":"use baselinenowcast work, please consider citing citation(\"baselinenowcast\").","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"contributions project gratefully acknowledged using allcontributors package following allcontributors specification. Contributions kind welcome! kaitejohnson, seabbs, sbfnk","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/autoescape_brackets.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape brackets returned in a string for passing to glue — autoescape_brackets","title":"Escape brackets returned in a string for passing to glue — autoescape_brackets","text":"Escape brackets returned string passing glue","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/autoescape_brackets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape brackets returned in a string for passing to glue — autoescape_brackets","text":"","code":"autoescape_brackets(string)"},{"path":"https://baselinenowcast.epinowcast.org/reference/autoescape_brackets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape brackets returned in a string for passing to glue — autoescape_brackets","text":"string string vector containing {}","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/autoescape_brackets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escape brackets returned in a string for passing to glue — autoescape_brackets","text":"string vector single brackets replaced double brackets","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a delay distribution from a reporting triangle — get_delay_estimate","title":"Estimate a delay distribution from a reporting triangle — get_delay_estimate","text":"Provides estimate reporting delay function delay, based reporting triangle specified maximum delay number reference date observations used estimation. point estimate delay computed empirically, using iterative algorithm starting recent observations. modified code originally developed Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub, Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a delay distribution from a reporting triangle — get_delay_estimate","text":"","code":"get_delay_estimate(   triangle,   max_delay = ncol(triangle) - 1,   n_history = nrow(triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a delay distribution from a reporting triangle — get_delay_estimate","text":"triangle matrix reporting triangle, rows representing time points reference columns representing delays indexed 0 max_delay integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n_history integer indicating number reference dates used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle)-1","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a delay distribution from a reporting triangle — get_delay_estimate","text":"delay_df dataframe length max_delay columns delay pmf, indicating point estimate empirical probability mass delay","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a delay distribution from a reporting triangle — get_delay_estimate","text":"","code":"library(epinowcast) #> ! `enw_cache_location` is not set. #> ℹ Using `tempdir()` at /tmp/Rtmpsautv0 for the epinowcast model cache location. #> ℹ Set a specific cache location using `enw_set_cache` to control Stan #>   recompilation in this R session or across R sessions. #> ℹ For example: `enw_set_cache(tools::R_user_dir(package = \"epinowcast\", #>   \"cache\"), type = c('session', 'persistent'))`. #> ℹ See `?enw_set_cache` for details. #> This message is displayed once per session. nat_germany_hosp <-   germany_covid19_hosp[location == \"DE\"][age_group == \"00+\"] nat_germany_hosp <- enw_filter_report_dates(   nat_germany_hosp,   latest_date = \"2021-10-01\" ) pobs <- enw_preprocess_data(nat_germany_hosp, max_delay = 21) triangle_raw <- pobs$reporting_triangle[[1]] |>   dplyr::select(-`.group`, -reference_date) |>   as.matrix() |>   unname() delay_df <- get_delay_estimate(triangle_raw,   max_delay = 20,   n_history = 30 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/handle_neg_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle negative values in the reporting triangle — handle_neg_vals","title":"Handle negative values in the reporting triangle — handle_neg_vals","text":"Takes reporting triangle returns matrix format input triangle, negative values reporting handled via passing subsequent days delay. Modified https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/handle_neg_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle negative values in the reporting triangle — handle_neg_vals","text":"","code":"handle_neg_vals(triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/handle_neg_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle negative values in the reporting triangle — handle_neg_vals","text":"triangle reporting triangle matrix, rows time points columns delays, already truncated maximum delay number historical observations","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/handle_neg_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle negative values in the reporting triangle — handle_neg_vals","text":"pos_triangle positive integer matrix negative values reporting handled via passing subsequent days delay","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/validate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle — validate_triangle","title":"Validate triangle — validate_triangle","text":"Various checks make sure reporting triangle passed estimate_delay() formatted properly.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/validate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle — validate_triangle","text":"","code":"validate_triangle(triangle, max_delay, n_history)"},{"path":"https://baselinenowcast.epinowcast.org/reference/validate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle — validate_triangle","text":"triangle matrix values rows indicating time points columns indicating delays max_delay integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n_history integer indicating number reference dates used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle)-1","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/validate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle — validate_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/news/index.html","id":"baselinenowcast-0001000","dir":"Changelog","previous_headings":"","what":"baselinenowcast 0.0.0.1000","title":"baselinenowcast 0.0.0.1000","text":"Introduced first function get delay estimate outline Getting Started vignette Added package skeleton.","code":""}]
