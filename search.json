[{"path":"https://baselinenowcast.epinowcast.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 baselinenowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with baselinenowcast","text":"Incomplete reporting epidemiological data recent times can result case count data right-truncated. Right-truncated case counts can misleading interpret face-value, typically show decline number reported observations recent time points. time points highest proportion data yet observed dataset. imputation cases eventually observed current time referred nowcast. number methods developed nowcast epidemiological case count data. purpose baselinenowcast provide nowcast computed directly recent observations estimate delay distribution empirically, apply partially observed data generate nowcast. section, describe example nowcasting problem, demonstrate use baselinenowcast estimate delay distribution data apply estimate generate probabilistic nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Getting Started with baselinenowcast","text":"well baselinenowcast package vignette also uses epinowcast, ggplot2, dplyr. installation epinowcast required using package, however, pre post-processing functions provide lot data wrangling needed set nowcasting problem. note components vignette require installing CmdStan, downstream dependency epinowcast. just using R components epinowcast, can installed using example lines code , need additionally install CmdStan.","code":"# Installing epinowcast # install.packages( #nolint #  \"epinowcast\", repos = \"https://epinowcast.r-universe.dev\" #nolint # ) #nolint # Load packages library(baselinenowcast) library(epinowcast) library(ggplot2) library(dplyr) library(lubridate) library(tidyr) # Set seed for reproducibility set.seed(123)"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Getting Started with baselinenowcast","text":"Nowcasting right-truncated case counts involves estimation reporting delays recently reported data. , need case counts indexed diagnosed (often called “reference date”) reported (.e. administratively recorded via public health surveillance; often called “report date”). difference reference date report date reporting delay. quick start, use daily level data Robert Koch Institute via Germany Nowcasting hub. data represent hospital admission counts date positive test date test report Germany October 1, 2021.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"filtering-and-plotting-the-data","dir":"Articles","previous_headings":"","what":"Filtering and plotting the data","title":"Getting Started with baselinenowcast","text":"filter data just look national-level data, age groups. pretend making nowcast July 1, 2021, therefore exclude reference dates report dates date. germany_covid19_hosp provided package data epinowcast Let’s start plotting sum reports reference date, compare eventually observe final date complete dataset. red line shows cumulative number confirmed admissions report date, across delays, using data available July 1, 2021. demonstrates characteristic behaviour right-truncation. yet observed data become available longer delays recent time points. task estimate “final” cumulative number cases reference date, observed “fully observed” data October 2021.  black line represents quantity evaluate nowcast , final observed cases, red line represents observed cases observed July 1st, 2021.","code":"data_long <- germany_covid19_hosp # import data from epinowcast data_filtered <- data_long |>   enw_filter_report_dates(latest_date = \"2021-07-01\") |>   filter(     location == \"DE\", age_group == \"00+\",     report_date == \"2021-07-01\"   ) data_filtered_max <- data_long |>   filter(     location == \"DE\", age_group == \"00+\",     reference_date <= \"2021-07-01\"   ) |>   group_by(reference_date) |>   summarise(confirm = max(confirm)) ggplot() +   geom_line(     data = data_filtered,     aes(x = reference_date, y = confirm), color = \"darkred\"   ) +   geom_line(     data = data_filtered_max,     aes(x = reference_date, y = confirm), color = \"black\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time and later observed cases\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Getting Started with baselinenowcast","text":"order compute nowcast data, need start creating call reporting triangle. matrix row represents one time points referenced column represents delay, starting 0 maximum delay. entries represent number new cases assigned reference time point particular delay, entries bottom right triangle missing data reported longer delays yet observed recent reference times. reporting triangle used estimate delay distribution, proportion final number cases reported particular delay. Since data reported referenced daily, use time scale days create reporting triangle, delay reference date can temporal granularity. example, fit delay distribution, apply generate nowcast matrix using data, national level data Germany age groups. However, components can separated, example, use national level data age groups estimate delay distribution, apply elsewhere, example data stratified age group location. type “borrowing” another training dataset can really useful low counts relatively sparse data, likely case smaller populations. sections, specify nowcast date, maximum delay, number reference time observations want use estimate delay distribution. recommend choosing maximum delay number historical observations based exploratory data analysis, specifications change significantly depending dataset. Next use epinowcast function, enw_preprocess_data() data form long tidy dataframe indexed reference date report date filtered strata interested , generate reporting triangle. see looks like, can plot using ggplot().","code":"nowcast_date <- \"2021-07-01\"  # Specify the maximum delay, which will determine the length of your delay # distribution. Empirical data outside this delay window will not be used for # training. max_delay <- 40  # Specify the number of reference times to use to estimate the delay # distribution. Note this assumes you want the most recent observations. n_history_delay <- 60 # Noting that this is the only way epinowcast preprocessing would work -- # return to this later. IDate was throwing errors if we used the dplyr processed # observed long above. observed_long <- data_long[location == \"DE\"][age_group == \"00+\"] |> # nolint   enw_filter_report_dates(latest_date = nowcast_date) |>   enw_filter_reference_dates(include_days = n_history_delay - 1) head(observed_long) ##    reference_date location age_group confirm report_date ##            <IDat>   <fctr>    <fctr>   <int>      <IDat> ## 1:     2021-05-03       DE       00+     107  2021-05-03 ## 2:     2021-05-04       DE       00+     240  2021-05-04 ## 3:     2021-05-05       DE       00+     245  2021-05-05 ## 4:     2021-05-06       DE       00+     259  2021-05-06 ## 5:     2021-05-07       DE       00+     263  2021-05-07 ## 6:     2021-05-08       DE       00+     189  2021-05-08 # Get the reporting triangle, adding an additional day because epinowcast # we want the max_delay + 1 entries since 0 is a valid delay. pobs <- enw_preprocess_data(   obs = observed_long,   max_delay = max_delay + 1 )  # as we only have one group here we only need referfence_date, delay, # and new_confirm reporting_triangle_df <- select(pobs$new_confirm[[1]], reference_date, delay, new_confirm)  # we now pivot to wide format, dropping the reference_date column, and # convert to a matrix # this is the format that baselinenowcast expects reporting_triangle <- reporting_triangle_df |>   pivot_wider(names_from = delay, values_from = new_confirm) |>   select(-reference_date) |>   as.matrix()  tail(reporting_triangle, n = 20) ##        0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ## [41,] 29 21  2 10  9  6  1  1  1  0  5  2  2  0  4  1  1  1  1  2 NA NA NA NA ## [42,] 14  7 16  4  0  1  3  0  0  3  2  1  1  1  0  0  2  0  0 NA NA NA NA NA ## [43,] 12 12  7  0  2  6  1  1  1  1  1  0  0  0  0  0  0  0 NA NA NA NA NA NA ## [44,] 41 28 10  6  0  0  0  2  1  1  3  0  3  0  0  1  0 NA NA NA NA NA NA NA ## [45,] 34 18  8  9  1  2  4  5  3  0  1  1  2  2  1  0 NA NA NA NA NA NA NA NA ## [46,] 36 16  4  6  2  7  5  0  1  2  1  0  3  2  1 NA NA NA NA NA NA NA NA NA ## [47,] 23  9  4  3  7  6  2  4  4  2  1  1  5  1 NA NA NA NA NA NA NA NA NA NA ## [48,] 26  7  3  4  3  3  2  3  2  0  0  0  1 NA NA NA NA NA NA NA NA NA NA NA ## [49,] 16  7  7  2  1  1  3  0  0  2  1  2 NA NA NA NA NA NA NA NA NA NA NA NA ## [50,]  4 11  5  1  0  2  0  0  0  0  0 NA NA NA NA NA NA NA NA NA NA NA NA NA ## [51,] 24 18  4  5  2  1  0  0  2  2 NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [52,] 32 15 11  2  0  1  2  0  2 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [53,] 34 17  4  1  0  0  0  1 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [54,] 21 13  2  0  5  2  1 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [55,] 16  4  3  5  3  0 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [56,]  5  6  5  1  3 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [57,]  3  5  2  1 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [58,] 20 11  4 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [59,] 20 17 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [60,] 20 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ##       24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 ## [41,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [42,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [43,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [44,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [45,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [46,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [47,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [48,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [49,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [50,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [51,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [52,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [53,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [54,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [55,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [56,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [57,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [58,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [59,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA ## [60,] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA triangle_df <- as.data.frame(reporting_triangle) |>   mutate(time = row_number()) |>   pivot_longer(!time,     values_to = \"count\",     names_prefix = \"V\",     names_to = \"delay\"   ) |>   mutate(delay = as.numeric(delay))  ggplot(   triangle_df,   aes(x = delay, y = time, fill = count) ) +   geom_tile() +   scale_fill_gradient(low = \"white\", high = \"blue\") +   labs(title = \"Reporting triangle\", x = \"Delay\", y = \"Time\") +   theme_bw() +   scale_y_reverse()"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-delay","dir":"Articles","previous_headings":"","what":"Estimate delay","title":"Getting Started with baselinenowcast","text":"Now reporting triangle, now ready pass baselinenowcast package estimate delay distribution. tell function maximum delay number observations want use, though default use whole reporting triangle. reporting triangle small user-specified delays number training observations, function throw error. want pass reporting triangle (single group!) function. reference date repeated reporting triangle contains multiple strata, function throw error. get_delay_estimate() function expects following inputs: - reporting_triangle: matrix reporting triangle single strata. rows represent time points columns represent observed delays, starting 0. can also reporting matrix incomplete reporting matrix (elements bottom right triangle need missing). - max_delay: integer indicating maximum delay estimate. must less equal number rows triangle minus 1, since assume triangle indexed 0. - n_history_delay: integer indicating number observations reference date use fit delay distribution. must less equal number rows triangle.","code":"delay_pmf <- get_delay_estimate(   reporting_triangle = reporting_triangle,   max_delay = max_delay,   n = n_history_delay )  delay_df <- data.frame(   delay = 0:(length(delay_pmf) - 1),   pmf = delay_pmf )  ggplot(delay_df) +   geom_line(aes(x = delay, y = cumsum(pmf))) +   xlab(\"Delay\") +   ylab(\"Cumulative proportion reported\") +   ggtitle(\"Empirical point estimate of cumulative proportion reported by delay\") + # nolint   theme_bw() ggplot(delay_df) +   geom_line(aes(x = delay, y = pmf)) +   xlab(\"Delay\") +   ylab(\"Proportion reported\") +   ggtitle(\"Empirical point estimate of proportion reported by delay\") +   theme_bw()"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"apply-delay-to-generate-point-nowcast","dir":"Articles","previous_headings":"","what":"Apply delay to generate point nowcast","title":"Getting Started with baselinenowcast","text":"next step workflow take estimated delay distribution apply partially observed reporting triangle, generating estimate number new cases confirmed reference date delay. generate point estimate can call reporting square, complete set reference dates delays. case, applying delay reporting triangle used generate estimate, doesn’t always case. reporting triangle applying must max_delay delay estimate. ’ll make quick plot compare nowcasted confirmed cases July 1, 2021, observations October 1, 2021. ’ll compare right-truncated data available July 1, 2021.  can see point nowcast slightly overestimates eventually reported (black line), decent overall job correcting right-truncation observed red line (data prior nowcast).","code":"point_nowcast_matrix <- apply_delay(   rep_tri_to_nowcast = reporting_triangle,   delay_pmf = delay_pmf ) final_data <- data_long[location == \"DE\"][age_group == \"00+\"] |> # nolint   enw_filter_report_dates(latest_date = \"2021-10-01\") |>   enw_filter_reference_dates(     latest_date = \"2021-07-01\",     include_days = n_history_delay - 1   ) |>   group_by(reference_date) |>   summarise(     total_confirmed = max(confirm)   ) |>   mutate(nowcast = rowSums(point_nowcast_matrix)) summary_data <- observed_long |>   group_by(reference_date) |>   summarise(total_confirmed = max(confirm)) ggplot() +   geom_line(     # Plot the data summed across reporting days as of July 1,2021     data = summary_data,     aes(x = reference_date, y = total_confirmed), color = \"darkred\"   ) +   geom_line(     data = final_data,     aes(x = reference_date, y = total_confirmed), color = \"black\"   ) +   geom_line(     data = final_data,     aes(x = reference_date, y = nowcast), color = \"darkblue\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time, nowcasted, and later observed cases\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-uncertainty","dir":"Articles","previous_headings":"","what":"Estimate uncertainty","title":"Getting Started with baselinenowcast","text":"far, ’ve demonstrated generate point estimate nowcast. like generate probabilistic nowcasts. , use error observations nowcasted retrospectively. assume observations follow negative binomial observation model, independently estimate dispersion negative binomial delay \\(d\\). method used estimate uncertainty nowcast simulates exactly iterative process, generating retrospective reporting triangles using available time, reporting triangle, estimating delay distribution generating nowcast. , first generate truncated reporting matrices latest reporting triangle, generate retrospective reporting triangles removing observations wouldn’t observed latest time point, lastly generate nowcasts list retrospective reporting triangles. function default assuming want generate many retrospective reporting triangles able generate nowcasts . case, function return 18 retrospective reporting triangles, smallest one containing 42 rows, needed generate nowcast reporting triangle 41 delay columns. generate_triangles() function returns list reporting triangles, order least recent, starting recent. filtered exclude rows may ultimately used generate nowcast, means triangle different number rows. Next pass list reporting triangles generate_nowcasts() alongside specification many observations use estimate delay Next, use list retrospective reporting triangles estimate uncertainty delay \\(d\\)","code":"trunc_rep_mat_list <- truncate_triangles(reporting_triangle) retro_rep_tri_list <- generate_triangles(trunc_rep_mat_list) retro_pt_nowcast_mat_list <- generate_pt_nowcast_mat_list(   reporting_triangle_list = retro_rep_tri_list ) disp_params <- estimate_dispersion(   pt_nowcast_mat_list = retro_pt_nowcast_mat_list,   trunc_rep_mat_list = trunc_rep_mat_list )"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"generate-probabilistic-nowcast","dir":"Articles","previous_headings":"","what":"Generate probabilistic nowcast","title":"Getting Started with baselinenowcast","text":"Now estimated dispersion, take point nowcast matrix previously generated, point_nowcast_matrix, generate many draws expected observed values get probabilistic nowcast. Next, take list nowcast matrices convert long tidy dataframe, indexed reference time t, delay d, draws. package also provides helper function, aggregate_df_by_ref_time() converts draws indexed t d one contains sum delays. can use plot nowcasts compared data available nowcast date, later observed data.","code":"nowcast_matrix_list <- add_uncertainty(   point_nowcast_matrix = point_nowcast_matrix,   disp = disp_params,   n_draws = 1000 ) nowcast_draws <- nowcast_matrix_list_to_df(   nowcast_matrix_list = nowcast_matrix_list ) head(nowcast_draws) ##   time delay count draw ## 1    1     1   107    1 ## 2    1     2    76    1 ## 3    1     3    45    1 ## 4    1     4    25    1 ## 5    1     5    23    1 ## 6    1     6    16    1 summary_nowcast <- aggregate_df_by_ref_time(nowcast_draws)  # Join with the original data final_data <- data_long[location == \"DE\"][age_group == \"00+\"] |> # nolint   enw_filter_report_dates(latest_date = \"2021-10-01\") |>   enw_filter_reference_dates(     latest_date = \"2021-07-01\",     include_days = n_history_delay - 1   ) |>   group_by(reference_date) |>   summarise(     final_confirmed = max(confirm)   ) original_data <- observed_long |>   group_by(reference_date) |>   summarise(original_confirmed = max(confirm)) time_df <- data.frame(   reference_date =     seq(       from = min(original_data$reference_date),       to = max(original_data$reference_date),       by = \"day\"     ) ) |> mutate(time = row_number()) sampled_draws <- sample.int(max(summary_nowcast$draw), 100) summary_nowcast_w_data <- summary_nowcast |>   left_join(time_df,     by = \"time\"   ) |>   left_join(original_data, by = \"reference_date\") |>   left_join(final_data, by = \"reference_date\") |>   # Filter to a set of draws for plotting + zoom in on nowcast period   filter(     draw %in% sampled_draws,     reference_date >= max(ymd(reference_date)) - days(max_delay)   )    ggplot(summary_nowcast_w_data) +   geom_line(aes(x = reference_date, y = total_count, group = draw),     alpha = 0.2, color = \"gray\", linewidth = 0.2   ) +   geom_line(aes(x = reference_date, y = original_confirmed),     color = \"darkred\"   ) +   geom_line(aes(x = reference_date, y = final_confirmed),     color = \"black\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Hospital admissions\") +   ggtitle(\"Comparison of admissions as of the nowcast date, later observed counts, \\n and probabilistic nowcasted counts\") # nolint"},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Mathematical methods for `baselinenowcast`","text":"baselinenowcast model, initially developed reference COVID-19 hospital admissions nowcasting challenge Germany (2021-2022, Wolffram et al, utilises reporting triangles preliminary case counts delays. applies multiplicative approach, using empirically observed historical delay distributions estimate yet---observed cases. Users can specify whether delay distributions estimated latest data, fully observed past data, data different strata. model produces point estimates nowcasts “filling ” reporting triangle. Probabilistic nowcasts generated using negative binomial model means point nowcast dispersion parameters estimated past nowcast errors. dispersion parameters can also flexibly sourced current data, historical data, alternative settings.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"notation","dir":"Articles","previous_headings":"1 Overview","what":"Notation","title":"Mathematical methods for `baselinenowcast`","text":"denote \\(X_{t,d}, d = 0, .., D\\) number cases occurring time \\(t\\) appear dataset delay \\(d\\). example, delay \\(d = 0\\) means case occurring day \\(t\\) arrived dataset day \\(t\\), considered first possible report date practice. consider cases reporting within maximum delay \\(D\\). number cases reporting time \\(t\\) delay \\(d\\) can written : \\[X_{t, \\le d} = \\sum_{=0}^d X_{t,} \\] \\(X_t = X_{t, \\le D}\\) “final” number reported cases time \\(t\\). Conversely, \\(d < D\\) \\[X_{t,>d} = \\sum_{= d+1} ^{D} X_{t,}\\] number cases still missing \\(d\\) delay. refer \\(X_t\\) describe random variable, \\(x_t\\) corresponding observation, \\(\\hat{x}_t\\) estimated/imputed value. matrix \\(x_{t,d}\\) available given time \\(t^*\\) referred reporting matrix. case \\(t+d>t^*\\) yet observed (e.g. \\(t^*\\) current time), reporting matrix referred reporting triangle, values bottom right corner triangle missing, except first entry \\(x_{t=t*, d = 0}\\). Throughout document package, refer matrices, well corresponding vectors, using following table. table, “point” refers point estimate. indicated, referring probabilistic draw observation model. example, refer matrix imputed point estimates \\(t+d>t^*\\) point nowcast matrix, matrix complete set observations elements reporting matrix, matrix predictions point prediction matrix. use following abbreviations shorten names code:","code":""},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimate-of-the-delay-distribution-from-a-reporting-matrix","dir":"Articles","previous_headings":"2 Point estimate of the delay distribution","what":"Estimate of the delay distribution from a reporting matrix","title":"Mathematical methods for `baselinenowcast`","text":"can use reporting matrix compute empirical estimate delay distribution, \\(\\pi(d)\\). empirical delay distribution, \\(\\pi(d)\\) can computed directly reporting matrix \\(X\\) \\[ \\pi(d)= \\frac{\\sum_{t=1}^{t=t^*} X_{t,d}}{\\sum_{d=0}^{D} \\sum_{t=1}^{t=t^*} X_{t,d}} \\] numerator sum observations across reference times \\(t\\) particular delay \\(d\\), denominator sum across reference times \\(t\\) delays \\(d\\).","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimate-of-the-delay-distribution-from-a-reporting-triangle","dir":"Articles","previous_headings":"2 Point estimate of the delay distribution","what":"Estimate of the delay distribution from a reporting triangle","title":"Mathematical methods for `baselinenowcast`","text":"case missing values bottom right (.e. reporting triangle), need use multiplicative model generate point nowcast matrix containing mixture observed imputed values. can compute delay distribution described reporting matrix case. multiplicative model works iteratively “filling ” reporting triangle starting bottom left, moving column column left right bottom right triangle filled .  method requires least one observation, delay \\(d=0\\) recent reference time, located bottom left reporting triangle Figure ?? . method assumes values delay \\(d\\) recent times, \\(t\\), consist proportion values previously reported earlier times \\(t\\). fill missing values column \\(d\\), sum rectangle completely observed reference dates \\(d-1\\) columns (block top left) sum column completely observed reference dates entries column \\(d\\) (block left). ratio two sums assumed missing entries column \\(d\\), use entries observed \\(d-1\\) incomplete reference date (block bottom left), scale ratio get missing entries column \\(d\\). process repeated delay \\(d\\) maximum delay \\(D\\). iteration additional reference time entry computed delay \\(d\\) increases. delay distribution estimated filled reporting matrix, using algorithm described case complete reporting square. get_delay_estimate() function ingests either reporting matrix, incomplete reporting matrix, reporting triangle uses last n rows compute empirical delay probability mass function (returning simplex vector indexed starting delay 0).","code":"#nolint start #| echo = FALSE, #| fig.cap = 'Visual description of the iterative “completing” of the reporting triangle, moving from left to right and bottom to top. In this cases, we are imputing $x_{t=6, d = 2}$ and $x_{t=5, d= 2}$ assuming that the ratio between $x_{t=1:4, d = 2}$ (block top), and $x_{t=1:4, d=0:1}$ (block top left) holds for for $x_{t=5:6, d = 2}$ (block bottom) and $x_{t=5:6, d = 0:1}$ (block bottom left). In this example, $\\\\hat{x}_{t=6, d = 1}$ has already been imputed using the same approach, and we treat it as known going forward. This process is repeated across the reporting triangle to estimate all values outlined in the dashed lines.' #nolint end knitr::include_graphics(file.path(\"..\", \"man\", \"figures\", \"schematic_fig.png\"))"},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generation-of-a-point-nowcast-matrix-from-a-delay-distribution-and-a-reporting-triangle","dir":"Articles","previous_headings":"","what":"Generation of a point nowcast matrix from a delay distribution and a reporting triangle","title":"Mathematical methods for `baselinenowcast`","text":"“fill ” reporting triangle delay distribution, need estimate expected total number eventual observed cases \\(\\hat{x}_t\\), reference time \\(t\\). Let \\(z\\) sum delays \\(d\\) already observed (\\(t^*-t\\)), \\(z =\\sum_{d=1}^{d=t^*-t} x_{t,d}\\) \\(\\delta\\) cumulative sum delay distribution, \\(\\pi(d)\\) \\(d = t^*-t\\) \\(\\delta = \\sum_{d=1}^{d=t^*-t} \\pi(d)\\). assuming \\(z \\sim Bin(x_t, \\delta)\\) \\(x_t \\sim Unif(0, \\inf)\\), can shown expected value \\(x_t\\), total number reported cases reference time \\(t\\), can written : \\[ E(x_t | z, \\delta) = \\hat{x}_t = \\frac{z + 1 - \\delta}{\\delta} \\] can compute \\(\\hat{x}_{t,d}\\) directly using \\(d\\)th element \\(\\pi(d)\\) \\[ \\hat{x}_{t,d} = \\pi(d) \\times \\hat{x}_t \\] number reports timepoint \\(t\\) delay \\(d\\) product expected total reports, \\(\\hat{x}_t\\) proportion expected particular delay \\(d\\), \\(\\pi(d)\\). apply_delay() function ingests reporting triangle incomplete reporting matrix delay PMF returns point nowcast matrix.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimate-of-dispersion","dir":"Articles","previous_headings":"","what":"Estimate of dispersion","title":"Mathematical methods for `baselinenowcast`","text":"estimate uncertainty nowcasts, use past nowcast errors assume negative binomial observation model.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generation-of-retrospective-reporting-triangles","dir":"Articles","previous_headings":"4 Estimate of dispersion","what":"Generation of retrospective reporting triangles","title":"Mathematical methods for `baselinenowcast`","text":"describe method generates retrospective reporting triangles replicate available time \\(t^*=s^*\\), \\(s^* = t^*-m\\) \\(m = 1, 2, ... M\\) generate \\(M\\) retrospective reporting triangles. generate set \\(M\\) reporting triangles, simply remove last \\(m\\) rows existing reporting triangle (reporting matrix), generate \\(M\\) truncated incomplete reporting matrices. can generated reporting triangle matrix function truncate_triangles() ingests single reporting triangle (matrix) returns list n truncated (potentially incomplete) reporting matrices containing observations missing values present. replace bottom right triangle matrix NAs, assuming observed \\(s^*\\), using function generate_triangles() returns list n retrospective reporting triangles. method uses retrospective reporting triangle re-estimate delay distribution using \\(N\\) preceding rows reporting triangle \\(s^*\\), recomputes retrospective nowcast, \\(M\\) realizations retrospective reporting triangle (\\(M\\) different \\(s^*\\) values).","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generation-of-retrospective-point-nowcast-matrices","dir":"Articles","previous_headings":"4 Estimate of dispersion","what":"Generation of retrospective point nowcast matrices","title":"Mathematical methods for `baselinenowcast`","text":"\\(M\\) reporting triangles, apply method described estimate delay distribution reporting triangle generate point nowcast reporting triangle, generate \\(M\\) point nowcasts. function generate_point_nowcasts() ingests list reporting triangles, estimates delay distribution , generates list point nowcast matrices.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"fit-point-nowcast-matrices-and-observed-values-to-a-negative-binomial-observation-model-at-each-delay","dir":"Articles","previous_headings":"4 Estimate of dispersion","what":"Fit point nowcast matrices and observed values to a negative binomial observation model at each delay","title":"Mathematical methods for `baselinenowcast`","text":"take list point nowcast matrices, list truncated incomplete reporting matrices (necessarily contains NAs bottom right, bottom right entirely partially observed). delay \\(d\\) identify overlapping set matrix elements imputed retrospectively matrix elements observed recent time point. delay \\(d = 1, ..., D\\) assume observed values, \\(X_{s^*-d, >d}\\) follow negative binomial observation model mean \\(\\hat{x}_{s^*-d}\\): \\[ X_{s^*-d,>d} | \\hat{x}_{s^*-d, >d}(s*) \\sim NegBin(\\mu = \\hat{x}_{s^*-d} + 0.1, \\phi = \\phi_d) \\] add small number (0.1) mean avoid ill-defined negative binomial. note perform computations, data snapshots least \\(N + M\\) past observations, rows original reporting triangle (matrix), needed. estimate uncertainty accounts empirical uncertainty point estimate delay distribution time. function estimate_dispersion() ingests list truncated reporting matrices representing observations, list point nowcast matrices, returns vector negative binomial dispersion parameters indexed starting delay \\(d = 1\\).","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generate-probabilistic-nowcast-matrices","dir":"Articles","previous_headings":"","what":"Generate probabilistic nowcast matrices","title":"Mathematical methods for `baselinenowcast`","text":"Using dispersion parameters delay, \\(\\phi(d),\\) \\(d = 1,...D\\), can generate probabilistic nowcast matrices drawing samples negative binomial: \\[ X_{t,d} \\sim NegBin(\\mu = \\hat{x}_{t,d}, \\phi = \\phi(d)) \\] can sample number draws, use draws compute desired quantiles summarize outputs. function add_obs_errs_to_pt_nowcast_mat() ingests point nowcast matrix, dispersion parameters, number draws sample generates list point nowcast matrices. can summarized across delays passing list nowcast_matrix_list_to_df() summarised reference time using aggregate_by_ref_time().","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kaitlyn Johnson. Author, maintainer, copyright holder. Sam Abbott. Author. Johannes Bracher. Author. Sebastian Funk. Author.","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson K, Abbott S, Bracher J, Funk S (2025). baselinenowcast: Baseline nowcast. R package version 0.0.0.1000, https://baselinenowcast.epinowcast.org.","code":"@Manual{,   title = {baselinenowcast: Baseline nowcast},   author = {Kaitlyn Johnson and Sam Abbott and Johannes Bracher and Sebastian Funk},   year = {2025},   note = {R package version 0.0.0.1000},   url = {https://baselinenowcast.epinowcast.org}, }"},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Baseline nowcast for right-truncated epidemiological data","text":"Provides functions nowcasting right-truncated epidemiological data, based heavily method implemented https://github.com/KITmetricslab/RESPINOW-Hub/tree/main/code/baseline.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Baseline nowcast for right-truncated epidemiological data","text":"install development version GitHub (warning! version may contain breaking changes /bugs), use pak package:","code":"pak::pak(file.path(\"epinowcast\", \"baselinenowcast\"))"},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Baseline nowcast for right-truncated epidemiological data","text":"provide range documentation, case studies, community spaces ask (answer!) questions: organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use baselinenowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Baseline nowcast for right-truncated epidemiological data","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request see contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"Contributing","what":"How to make a bug report or feature request","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please briefly describe problem output expect issue. See contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"Contributing","what":"Code of Conduct","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please note baselinenowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Baseline nowcast for right-truncated epidemiological data","text":"use baselinenowcast work, please consider citing citation(\"baselinenowcast\").","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"contributions project gratefully acknowledged using allcontributors package following allcontributors specification. Contributions kind welcome!","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Baseline nowcast for right-truncated epidemiological data","text":"kaitejohnson, seabbs, sbfnk","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"issue-authors","dir":"","previous_headings":"Contributors","what":"Issue Authors","title":"Baseline nowcast for right-truncated epidemiological data","text":"jonathonmellor","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"issue-contributors","dir":"","previous_headings":"Contributors","what":"Issue Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"jbracher, TimTaylor","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_uncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Add observation errors to nowcasts — add_uncertainty","title":"Add observation errors to nowcasts — add_uncertainty","text":"function ingests point nowcast matrix  vector dispersion parameters. generates list n_draws nowcast matrices.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_uncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add observation errors to nowcasts — add_uncertainty","text":"","code":"add_uncertainty(point_nowcast_matrix, disp, n_draws = 1000)"},{"path":"https://baselinenowcast.epinowcast.org/reference/add_uncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add observation errors to nowcasts — add_uncertainty","text":"point_nowcast_matrix Matrix observations point estimates counts reference time delay. disp Vector dispersion parameters indexed starting delay = 1, n_draws Integer indicating number expected observed reporting squares generate. Default 1000.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_uncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add observation errors to nowcasts — add_uncertainty","text":"nowcast_matrix_list List n_draws matrices probabilistic nowcast matrix draws.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_uncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add observation errors to nowcasts — add_uncertainty","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 17.8,     80, 40, 23.2, 15.9,     70, 35, 20.3, 19.9   ),   nrow = 5,   byrow = TRUE )  list_of_exp_obs_nowcast <- add_uncertainty(   point_nowcast_matrix = point_nowcast_matrix,   disp = c(8, 1.4, 4),   n_draws = 10 ) print(list_of_exp_obs_nowcast[[1]]) #>      [,1] [,2] [,3] [,4] #> [1,]   80   50   25   10 #> [2,]  100   50   30   20 #> [3,]   90   45   25    8 #> [4,]   80   40   17   35 #> [5,]   70   13    3    5"},{"path":"https://baselinenowcast.epinowcast.org/reference/aggregate_df_by_ref_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a dataframe containing draws of reporting squares — aggregate_df_by_ref_time","title":"Summarise a dataframe containing draws of reporting squares — aggregate_df_by_ref_time","text":"function ingests long tidy dataframe containing many draws reporting squares across reference time, summing counts reported delay d.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/aggregate_df_by_ref_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a dataframe containing draws of reporting squares — aggregate_df_by_ref_time","text":"","code":"aggregate_df_by_ref_time(nowcast_draws_df)"},{"path":"https://baselinenowcast.epinowcast.org/reference/aggregate_df_by_ref_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a dataframe containing draws of reporting squares — aggregate_df_by_ref_time","text":"nowcast_draws_df Dataframe containing draws reporting square. Must contain following columns: time, delay, draw, count.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/aggregate_df_by_ref_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a dataframe containing draws of reporting squares — aggregate_df_by_ref_time","text":"summary_df Dataframe containing nowcasted expected observed total observations reference time.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/aggregate_df_by_ref_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise a dataframe containing draws of reporting squares — aggregate_df_by_ref_time","text":"","code":"nowcast_draws_df <- data.frame(   time = c(1, 1, 1, 1, 2, 2, 2, 2),   delay = c(1, 2, 1, 2, 1, 2, 1, 2),   draw = c(1, 1, 2, 2, 1, 1, 2, 2),   count = c(3, 6, 4, 7, 1, 2, 2, 3) ) summary_df <- aggregate_df_by_ref_time(nowcast_draws_df) print(summary_df) #>   time draw total_count #> 1    1    1           9 #> 2    2    1           3 #> 3    1    2          11 #> 4    2    2           5"},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the delay to generate a point nowcast — apply_delay","title":"Apply the delay to generate a point nowcast — apply_delay","text":"Generate point estimate completed reporting square (rectangle) reporting triangle want complete nowcast delay PMF. element computed taking product expected number total cases assigned reference time $t$ proportion cases reported delay $d$. formula obtain expected number total cases function reporting delay previous observations derived elsewhere. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the delay to generate a point nowcast — apply_delay","text":"","code":"apply_delay(rep_tri_to_nowcast, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the delay to generate a point nowcast — apply_delay","text":"rep_tri_to_nowcast Matrix reporting triangle nowcasted, rows representing time points reference columns representing delays delay_pmf Vector delays assumed indexed starting first delay column rep_mat_to_nowcast","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the delay to generate a point nowcast — apply_delay","text":"point_nowcast_matrix Matrix number rows columns rep_mat_to_nowcast missing values filled point estimates","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the delay to generate a point nowcast — apply_delay","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   reporting_triangle = triangle,   max_delay = 3,   n = 4 ) point_nowcast_matrix <- apply_delay(   rep_tri_to_nowcast = triangle,   delay_pmf = delay_pmf ) print(point_nowcast_matrix) #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 17.78889 #> [4,]   80 40.00000 23.20529 15.92281 #> [5,]   70 35.24853 20.35851 13.96745"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"Calculate updated rows expected nowcasted triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"","code":".calc_expectation(delay_index, expectation, delay_prob, delay_cdf_prev, n_rows)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"delay_index Integer indicating delay index expectation Matrix incomplete reporting matrix delay_prob Probability case reported current delay delay_cdf_prev CDF delay PMF previous delay n_rows Number rows expectation matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the updated rows of the expected nowcasted triangle — .calc_expectation","text":"Matrix another set entries corresponding updated values specified rows column","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if matrix has valid NA pattern — .check_na_bottom_right","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"Check matrix valid NA pattern","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"","code":".check_na_bottom_right(mat)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"mat Matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if matrix has valid NA pattern — .check_na_bottom_right","text":"Boolean indicating whether matrix contains NAs bottom right (TRUE bottom right, FALSE elsewhere).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"Compute sum entries column matrix sets matrices booleans TRUE","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"","code":".conditional_sum_cols(col, matrix_bool1, matrix_bool2, matrix_to_sum)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"col Integer indicating column sum matrix_bool1 Matrix booleans first set indices matrix_bool2 Matrix booleans second set indices matrix_to_sum Matrix summed specific column","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"Numeric summing values matrix_to_sum specified column entries true","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"Takes vector observations vector expectations performs MLE estimator estimate dispersion parameter negative binomial. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7fab4dce7b559c3076ab643cf22048cb5fb84cc2/code/baseline/functions.R#L404 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"","code":".fit_nb(x, mu)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"x observed values mu expected values","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"maximum likelihood estimate dispersion","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Handle negative values reporting triangle Takes reporting triangle returns matrix format input triangle, negative values reporting handled via passing subsequent days (longer delay shorter). code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"","code":".handle_neg_vals(triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Matrix positive integers negative values reporting handled via passing subsequent days delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"Validate triangle nowcast delay PMF together Various checks make sure reporting triangle  delay PMF passed apply_delay() formatted properly compatible.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"","code":".validate_delay_and_triangle(triangle, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"triangle Matrix values rows indicating time points columns indicating delays. delay_pmf Vector length number delays indicating probability case reported given delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"Validate triangle Various checks make sure reporting triangle passed get_delay_estimate() formatted properly.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"","code":".validate_triangle(   triangle,   max_delay = ncol(triangle) - 1,   n = nrow(triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate dispersion parameters — estimate_dispersion","title":"Estimate dispersion parameters — estimate_dispersion","text":"function ingests list point nowcast matrices corresponding list truncated reporting matrices uses estimate vector negative binomial dispersion parameters observations estimates delay, starting delay = 1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate dispersion parameters — estimate_dispersion","text":"","code":"estimate_dispersion(   pt_nowcast_mat_list,   trunc_rep_mat_list,   n = length(pt_nowcast_mat_list) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate dispersion parameters — estimate_dispersion","text":"pt_nowcast_mat_list List point nowcast matrices rows represent reference time points columns represent delays. trunc_rep_mat_list List truncated reporting matrices, containing observations latest reference time. Elements list paired elements pt_nowcast_mat_list. n Integer indicating number reporting matrices use estimate dispersion parameters.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate dispersion parameters — estimate_dispersion","text":"Vector length one less number columns latest reporting triangle, element representing estimate dispersion parameter delay d, starting delay d=1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate dispersion parameters — estimate_dispersion","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle, n = 2) retro_rts <- generate_triangles(trunc_rts)  retro_nowcasts <- generate_pt_nowcast_mat_list(retro_rts, n = 5) disp_params <- estimate_dispersion(   pt_nowcast_mat_list = retro_nowcasts,   trunc_rep_mat_list = trunc_rts,   n = 2 ) disp_params #> [1] 999.99993 121.64191   1.73644"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate point nowcast — generate_pt_nowcast_mat","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"function ingests reporting triangle matrix optionally, delay distribution, returns completed reporting square represents point nowcast. delay distribution specified, used generate nowcast, otherwise, delay distribution estimated reporting_triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"","code":"generate_pt_nowcast_mat(   reporting_triangle,   max_delay = ncol(reporting_triangle) - 1,   n = nrow(reporting_triangle),   delay_pmf = NULL )"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle). delay_pmf Vector delays assumed indexed starting first delay column triangle_to_nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"point_nowcast_matrix Matrix number rows columns reporting_triangle missing values filled point estimates.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate point nowcast — generate_pt_nowcast_mat","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) point_nowcast_matrix <- generate_pt_nowcast_mat(   reporting_triangle = triangle ) point_nowcast_matrix #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 14.33572 #> [4,]   80 40.00000 23.17697 12.82918 #> [5,]   70 37.26249 20.72155 11.46862"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"function ingests list incomplete reporting triangles generates list reporting squares, \"complete\" point estimates reporting triangles based delay estimated triangle. uses specified n number observations estimate empirical delay retrospective reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"","code":"generate_pt_nowcast_mat_list(   reporting_triangle_list,   max_delay = min(sapply(reporting_triangle_list, ncol)) - 1,   n = min(sapply(reporting_triangle_list, nrow)) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"reporting_triangle_list List reporting triangle matrices, order recent (complete) least recent. Bottom right matrices contain NAs. max_delay Integer indicating maximum delay estimate, units delay. default use one less minimum number rows matrices list_of_rts. n Integer indicating number observations (number rows) use estimate delay distribution reporting triangle. Default minimum number rows matrices list_of_rts.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"pt_nowcast_matr_list List number elements input reporting_triangle_listbut reporting triangle filled based delay estimated reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_pt_nowcast_mat_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate retrospective nowcasts — generate_pt_nowcast_mat_list","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle) retro_rts <- generate_triangles(trunc_rts) retro_pt_nowcast_mat_list <- generate_pt_nowcast_mat_list(retro_rts) retro_pt_nowcast_mat_list[1:3] #> [[1]] #>      [,1]     [,2]     [,3]      [,4] #> [1,]   65 46.00000 21.00000  7.000000 #> [2,]   70 40.00000 20.00000  5.000000 #> [3,]   80 50.00000 10.00000 10.000000 #> [4,]  100 40.00000 31.00000  9.502924 #> [5,]   95 45.00000 22.50317  9.030878 #> [6,]   82 41.82672 19.90693  7.988127 #>  #> [[2]] #>      [,1]     [,2]     [,3]     [,4] #> [1,]   65 46.00000 21.00000 7.000000 #> [2,]   70 40.00000 20.00000 5.000000 #> [3,]   80 50.00000 10.00000 6.414220 #> [4,]  100 40.00000 20.36587 7.347008 #> [5,]   95 53.33883 21.57749 7.784433 #>  #> [[3]] #> NULL #>"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single retrospective reporting triangle — generate_triangle","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"function generates single reporting triangle removing bottom right observations truncated reporting triangle matrix. singular version generate_triangles().","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"","code":"generate_triangle(reporting_triangle, structure = 1)"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"reporting_triangle single reporting triangle matrix. structure Integer vector specifying reporting structure. integer, divides columns evenly integer (last possibly truncated).  vector, must sum number columns. Default 1 (standard triangular structure).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"single retrospective reporting triangle matrix NAs appropriate positions.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a single retrospective reporting triangle — generate_triangle","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  retro_rt <- generate_triangle(triangle) retro_rt #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA #> [7,]   70   NA   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate retrospective reporting triangles — generate_triangles","title":"Generate retrospective reporting triangles — generate_triangles","text":"function ingests list truncated reporting matrices iteratively generates reporting triangle available maximum reference time, working bottom top n snapshots.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate retrospective reporting triangles — generate_triangles","text":"","code":"generate_triangles(reporting_triangle_list, structure = 1)"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate retrospective reporting triangles — generate_triangles","text":"reporting_triangle_list List reporting triangle matrices. structure Integer vector specifying reporting structure. integer, divides columns evenly integer (last possibly truncated).  vector, must sum number columns. Default 1 (standard triangular structure).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate retrospective reporting triangles — generate_triangles","text":"rep_tri_mat_list List retrospective reporting triangles, generated removing bottom right observations truncated reporting triangle matrices.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate retrospective reporting triangles — generate_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(triangle, n = 2) retro_rts <- generate_triangles(trunc_rts)  # With custom structure retro_rts_custom <- generate_triangles(   retro_rts,   structure = 2 ) retro_rts_custom #> [[1]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   NA #> [5,]   95   45   NA   NA #> [6,]   82   NA   NA   NA #>  #> [[2]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   NA #> [4,]  100   40   NA   NA #> [5,]   95   NA   NA   NA #>"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"Estimate delay distribution reporting triangle Provides estimate reporting delay function delay, based reporting triangle specified maximum delay number reference date observations used estimation. point estimate delay computed empirically, using iterative algorithm starting recent observations. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"","code":"get_delay_estimate(   reporting_triangle,   max_delay = ncol(reporting_triangle) - 1,   n = nrow(reporting_triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"reporting_triangle Matrix reporting triangle, rows representing time points reference columns representing delays. Can reporting matrix incomplete reporting matrix. Can also ragged reporting triangle, multiple columns reported row. (e.g. weekly reporting daily data). max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"Vector indexed 0 length max_delay + 1 columns indicating point estimate empirical probability mass delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   reporting_triangle = triangle,   max_delay = 3,   n = 4 ) delay_pmf #> [1] 0.5029412 0.2514706 0.1455882 0.1000000"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_mat_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a probabilistic draw from the observation model — get_nowcast_mat_draw","title":"Get a probabilistic draw from the observation model — get_nowcast_mat_draw","text":"function ingests estimate point nowcast, form point nowcast matrix vector dispersion parameters, draws negative binomial get single expected observed probabilistic draw nowcast","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_mat_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a probabilistic draw from the observation model — get_nowcast_mat_draw","text":"","code":"get_nowcast_mat_draw(point_nowcast_matrix, disp)"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_mat_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a probabilistic draw from the observation model — get_nowcast_mat_draw","text":"point_nowcast_matrix Matrix observations point estimates counts reference time delay. disp Vector dispersion parameters indexed starting delay = 1,","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_mat_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a probabilistic draw from the observation model — get_nowcast_mat_draw","text":"nowcast_w_obs_error Matrix containing upper left values point_nowcast_matrix, bottom right containing probabilistic draws assuming negative binomial observation model mean given lower right entries point_nowcast_matrix dispersion parameters disp","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_nowcast_mat_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a probabilistic draw from the observation model — get_nowcast_mat_draw","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 17.8,     80, 40, 23.2, 15.9,     70, 35, 20.3, 19.9   ),   nrow = 5,   byrow = TRUE )  exp_obs_nowcast <- get_nowcast_mat_draw(   point_nowcast_matrix = point_nowcast_matrix,   disp = c(8, 1.4, 4) ) print(exp_obs_nowcast) #>      [,1] [,2] [,3] [,4] #> [1,]   80   50   25   10 #> [2,]  100   50   30   20 #> [3,]   90   45   25   14 #> [4,]   80   40    0   23 #> [5,]   70   38   35    8"},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_list_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate probabilistic nowcast dataframe — nowcast_matrix_list_to_df","title":"Generate probabilistic nowcast dataframe — nowcast_matrix_list_to_df","text":"function ingests list nowcast matrixes, generates long tidy dataframe indexed time delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_list_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate probabilistic nowcast dataframe — nowcast_matrix_list_to_df","text":"","code":"nowcast_matrix_list_to_df(nowcast_matrix_list)"},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_list_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate probabilistic nowcast dataframe — nowcast_matrix_list_to_df","text":"nowcast_matrix_list List probabilistic nowcast matrices","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_list_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate probabilistic nowcast dataframe — nowcast_matrix_list_to_df","text":"nowcast_df Dataframe containing observations probabilistic nowcasts indexed reference time delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_list_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate probabilistic nowcast dataframe — nowcast_matrix_list_to_df","text":"","code":"point_nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 17.8,     80, 40, 23.2, 15.9,     70, 35, 20.3, 19.9   ),   nrow = 5,   byrow = TRUE )  nowcast_matrix_list <- add_uncertainty(   point_nowcast_matrix,   disp = c(8, 1.4, 4),   n_draws = 10 )  nowcast_df <- nowcast_matrix_list_to_df(nowcast_matrix_list) nowcast_df #>     time delay count draw #> 1      1     1    80    1 #> 2      1     2    50    1 #> 3      1     3    25    1 #> 4      1     4    10    1 #> 5      2     1   100    1 #> 6      2     2    50    1 #> 7      2     3    30    1 #> 8      2     4    20    1 #> 9      3     1    90    1 #> 10     3     2    45    1 #> 11     3     3    25    1 #> 12     3     4    19    1 #> 13     4     1    80    1 #> 14     4     2    40    1 #> 15     4     3    15    1 #> 16     4     4     8    1 #> 17     5     1    70    1 #> 18     5     2    33    1 #> 19     5     3    17    1 #> 20     5     4    31    1 #> 21     1     1    80    2 #> 22     1     2    50    2 #> 23     1     3    25    2 #> 24     1     4    10    2 #> 25     2     1   100    2 #> 26     2     2    50    2 #> 27     2     3    30    2 #> 28     2     4    20    2 #> 29     3     1    90    2 #> 30     3     2    45    2 #> 31     3     3    25    2 #> 32     3     4     9    2 #> 33     4     1    80    2 #> 34     4     2    40    2 #> 35     4     3    22    2 #> 36     4     4    26    2 #> 37     5     1    70    2 #> 38     5     2    43    2 #> 39     5     3     6    2 #> 40     5     4    14    2 #> 41     1     1    80    3 #> 42     1     2    50    3 #> 43     1     3    25    3 #> 44     1     4    10    3 #> 45     2     1   100    3 #> 46     2     2    50    3 #> 47     2     3    30    3 #> 48     2     4    20    3 #> 49     3     1    90    3 #> 50     3     2    45    3 #> 51     3     3    25    3 #> 52     3     4    18    3 #> 53     4     1    80    3 #> 54     4     2    40    3 #> 55     4     3    13    3 #> 56     4     4    29    3 #> 57     5     1    70    3 #> 58     5     2    34    3 #> 59     5     3     1    3 #> 60     5     4    21    3 #> 61     1     1    80    4 #> 62     1     2    50    4 #> 63     1     3    25    4 #> 64     1     4    10    4 #> 65     2     1   100    4 #> 66     2     2    50    4 #> 67     2     3    30    4 #> 68     2     4    20    4 #> 69     3     1    90    4 #> 70     3     2    45    4 #> 71     3     3    25    4 #> 72     3     4     9    4 #> 73     4     1    80    4 #> 74     4     2    40    4 #> 75     4     3    16    4 #> 76     4     4    15    4 #> 77     5     1    70    4 #> 78     5     2    22    4 #> 79     5     3     0    4 #> 80     5     4    20    4 #> 81     1     1    80    5 #> 82     1     2    50    5 #> 83     1     3    25    5 #> 84     1     4    10    5 #> 85     2     1   100    5 #> 86     2     2    50    5 #> 87     2     3    30    5 #> 88     2     4    20    5 #> 89     3     1    90    5 #> 90     3     2    45    5 #> 91     3     3    25    5 #> 92     3     4    16    5 #> 93     4     1    80    5 #> 94     4     2    40    5 #> 95     4     3    26    5 #> 96     4     4    14    5 #> 97     5     1    70    5 #> 98     5     2    29    5 #> 99     5     3     1    5 #> 100    5     4    26    5 #> 101    1     1    80    6 #> 102    1     2    50    6 #> 103    1     3    25    6 #> 104    1     4    10    6 #> 105    2     1   100    6 #> 106    2     2    50    6 #> 107    2     3    30    6 #> 108    2     4    20    6 #> 109    3     1    90    6 #> 110    3     2    45    6 #> 111    3     3    25    6 #> 112    3     4    21    6 #> 113    4     1    80    6 #> 114    4     2    40    6 #> 115    4     3     7    6 #> 116    4     4     8    6 #> 117    5     1    70    6 #> 118    5     2    30    6 #> 119    5     3    29    6 #> 120    5     4    17    6 #> 121    1     1    80    7 #> 122    1     2    50    7 #> 123    1     3    25    7 #> 124    1     4    10    7 #> 125    2     1   100    7 #> 126    2     2    50    7 #> 127    2     3    30    7 #> 128    2     4    20    7 #> 129    3     1    90    7 #> 130    3     2    45    7 #> 131    3     3    25    7 #> 132    3     4    25    7 #> 133    4     1    80    7 #> 134    4     2    40    7 #> 135    4     3    11    7 #> 136    4     4    10    7 #> 137    5     1    70    7 #> 138    5     2    39    7 #> 139    5     3     0    7 #> 140    5     4     1    7 #> 141    1     1    80    8 #> 142    1     2    50    8 #> 143    1     3    25    8 #> 144    1     4    10    8 #> 145    2     1   100    8 #> 146    2     2    50    8 #> 147    2     3    30    8 #> 148    2     4    20    8 #> 149    3     1    90    8 #> 150    3     2    45    8 #> 151    3     3    25    8 #> 152    3     4    19    8 #> 153    4     1    80    8 #> 154    4     2    40    8 #> 155    4     3    68    8 #> 156    4     4    38    8 #> 157    5     1    70    8 #> 158    5     2    22    8 #> 159    5     3    62    8 #> 160    5     4    23    8 #> 161    1     1    80    9 #> 162    1     2    50    9 #> 163    1     3    25    9 #> 164    1     4    10    9 #> 165    2     1   100    9 #> 166    2     2    50    9 #> 167    2     3    30    9 #> 168    2     4    20    9 #> 169    3     1    90    9 #> 170    3     2    45    9 #> 171    3     3    25    9 #> 172    3     4    27    9 #> 173    4     1    80    9 #> 174    4     2    40    9 #> 175    4     3    22    9 #> 176    4     4     1    9 #> 177    5     1    70    9 #> 178    5     2    34    9 #> 179    5     3    27    9 #> 180    5     4    11    9 #> 181    1     1    80   10 #> 182    1     2    50   10 #> 183    1     3    25   10 #> 184    1     4    10   10 #> 185    2     1   100   10 #> 186    2     2    50   10 #> 187    2     3    30   10 #> 188    2     4    20   10 #> 189    3     1    90   10 #> 190    3     2    45   10 #> 191    3     3    25   10 #> 192    3     4    21   10 #> 193    4     1    80   10 #> 194    4     2    40   10 #> 195    4     3     8   10 #> 196    4     4    14   10 #> 197    5     1    70   10 #> 198    5     2    69   10 #> 199    5     3    21   10 #> 200    5     4     4   10"},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a reporting square matrix to a long data frame — nowcast_matrix_to_df","title":"Convert a reporting square matrix to a long data frame — nowcast_matrix_to_df","text":"Convert reporting square matrix long data frame","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a reporting square matrix to a long data frame — nowcast_matrix_to_df","text":"","code":"nowcast_matrix_to_df(matrix, draw = NULL)"},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a reporting square matrix to a long data frame — nowcast_matrix_to_df","text":"matrix Matrix form reporting triangle/square, rows indicate reference time columns indicate delay. draw integer tracking draw reporting matrix corresponds . Default NULL return draw column.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a reporting square matrix to a long data frame — nowcast_matrix_to_df","text":"long dataframe length product number columns number rows, information time delay observation corresponds .","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_matrix_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a reporting square matrix to a long data frame — nowcast_matrix_to_df","text":"","code":"nowcast_matrix <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 18,     80, 40, 24, 16,     70, 35, 21, 19,     67, 34, 15, 9   ),   nrow = 6,   byrow = TRUE )  long_df <- nowcast_matrix_to_df(nowcast_matrix) print(long_df) #>    time delay count #> 1     1     1    80 #> 2     1     2    50 #> 3     1     3    25 #> 4     1     4    10 #> 5     2     1   100 #> 6     2     2    50 #> 7     2     3    30 #> 8     2     4    20 #> 9     3     1    90 #> 10    3     2    45 #> 11    3     3    25 #> 12    3     4    18 #> 13    4     1    80 #> 14    4     2    40 #> 15    4     3    24 #> 16    4     4    16 #> 17    5     1    70 #> 18    5     2    35 #> 19    5     3    21 #> 20    5     4    19 #> 21    6     1    67 #> 22    6     2    34 #> 23    6     3    15 #> 24    6     4     9"},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"Replace lower right triangle matrix NAs","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"","code":"replace_lower_right_with_NA(matrix, structure = 1)"},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"matrix Matrix structure Integer vector specifying reporting structure. integer, divides columns evenly integer (last possibly truncated).  vector, must sum number columns. Default 1 (standard triangular structure).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"matrix dimensions, NAs unreported entries.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"","code":"# Define a reporting triangle with zeros triangle_w_zeros <- matrix(   c(     1, 3, 5, 7, 9,     4, 7, 8, 0, 12,     9, 10, 0, 0, 15,     3, 0, 0, 0, 0,     6, 2, 0, 0, 0   ),   nrow = 5,   byrow = TRUE )  # Standard triangular structure (default) rep_tri <- replace_lower_right_with_NA(triangle_w_zeros) rep_tri #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    3    5    7    9 #> [2,]    4    7    8    0   NA #> [3,]    9   10    0   NA   NA #> [4,]    3    0   NA   NA   NA #> [5,]    6   NA   NA   NA   NA  # Ragged structure with 2 columns per delay period rep_ragged <- replace_lower_right_with_NA(triangle_w_zeros, 2) rep_ragged #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    3    5    7    9 #> [2,]    4    7    8    0   12 #> [3,]    9   10    0    0   15 #> [4,]    3    0    0    0   NA #> [5,]    6    2   NA   NA   NA  # Custom structure with explicit column counts rep_custom <- replace_lower_right_with_NA(triangle_w_zeros, c(1, 2, 1)) rep_custom #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    3    5    7    9 #> [2,]    4    7    8    0   12 #> [3,]    9   10    0    0   NA #> [4,]    3    0    0   NA   NA #> [5,]    6   NA   NA   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single truncated triangle — truncate_triangle","title":"Get a single truncated triangle — truncate_triangle","text":"function takes integer t reporting triangle generates truncated reporting triangle, remove last t observations.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single truncated triangle — truncate_triangle","text":"","code":"truncate_triangle(t, matr_observed)"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single truncated triangle — truncate_triangle","text":"t Integer indicating number timepoints truncate bottom original reporting triangle. matr_observed Matrix reporting triangle/matrix used generate retrospective nowcast matrices, rows representing time points reference columns representing delays.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single truncated triangle — truncate_triangle","text":"Matrix t fewer rows matr_observed.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single truncated triangle — truncate_triangle","text":"","code":"# example code triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rep_tri <- truncate_triangle(t = 1, matr_observed = triangle) trunc_rep_tri #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate truncated reporting triangles — truncate_triangles","title":"Generate truncated reporting triangles — truncate_triangles","text":"function ingests reporting triangle/matrix number truncated reporting triangles want create, n, iteratively truncated reporting triangle, working bottom top n snapshots.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate truncated reporting triangles — truncate_triangles","text":"","code":"truncate_triangles(   reporting_triangle,   n = nrow(reporting_triangle) - ncol(reporting_triangle) - 1 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate truncated reporting triangles — truncate_triangles","text":"reporting_triangle Matrix reporting triangle/rectangle used generate retrospective triangles, rows representing time points reference columns representing delays. n Integer indicating number retrospective truncated triangles generated, always starting recent reference time. Default generate truncated matrices sufficient number rows generate nowcast , though number can specified.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate truncated reporting triangles — truncate_triangles","text":"trunc_rep_mat_list List n truncated reporting triangle matrices many rows available given truncation, number columns triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate truncated reporting triangles — truncate_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  truncated_rts <- truncate_triangles(triangle, n = 2) truncated_rts[1:2] #> [[1]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA #>  #> [[2]] #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #>"},{"path":"https://baselinenowcast.epinowcast.org/news/index.html","id":"baselinenowcast-0001000","dir":"Changelog","previous_headings":"","what":"baselinenowcast 0.0.0.1000","title":"baselinenowcast 0.0.0.1000","text":"Standardises naming objects matrices vs vectors objects contain observations, point estimates, probabilistic draws. Modifies functions estimate delay generate point nowcast ensure throw error/warning first element delay PMF 0. Adjusts function estimate delay distribution able handle complete partially complete reporting triangles. Add function convert list expected observed reporting squares long tidy dataframe indexed reference time, delay, sample index. Implement zero-handling bottom left reporting triangle applying delay generate point nowcast. Add function generate list expected observed reporting squares. Add function generate expected observed reporting square point nowcast vector dispersion parameters. Add function estimate dispersion parameters match list nowcasts observed reporting triangles. Add functions generate retrospective nowcasts single reporting triangle. Refactor uncertainty estimation use user-facing function generate retrospective reporting triangles. Methods write-separate vignette. Introduced function estimate uncertainty triangle nowcasted delay distribution. Introduced functions get delay estimate apply delay, used Getting Started vignette. Added package skeleton.","code":""}]
