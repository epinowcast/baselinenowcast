[{"path":"https://baselinenowcast.epinowcast.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 baselinenowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with baselinenowcast","text":"Incomplete reporting epidemiological data recent times can result case count data right-truncated. Right-truncated case counts can misleading interpret face-value, typically show decline number reported observations recent time points. time points highest proportion data yet observed dataset. imputation cases eventually observed current time referred nowcast. number methods developed nowcast epidemiological case count data. purpose baselinenowcast provide nowcast computed directly recent observations estimate delay distribution empirically, apply partially observed data generate nowcast. section, describe example nowcasting problem, demonstrate use baselinenowcast estimate delay distribution data apply estimate generate probabilistic nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Getting Started with baselinenowcast","text":"well baselinenowcast package vignette also uses epinowcast, ggplot2, dplyr. installation epinowcast required using package, however, pre post-processing functions provide lot data wrangling needed set nowcasting problem. note components vignette require installing CmdStan, downstream dependency epinowcast. just using R components epinowcast, can installed using example lines code , need additionally install CmdStan.","code":"# Installing epinowcast # install.packages( #nolint #  \"epinowcast\", repos = \"https://epinowcast.r-universe.dev\" #nolint # ) #nolint # Load packages library(baselinenowcast) library(epinowcast) library(ggplot2) library(dplyr) library(tidyr) # Set seed for reproducibility set.seed(123)"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Getting Started with baselinenowcast","text":"Nowcasting right-truncated case counts involves estimation reporting delays recently reported data. , need case counts diagnosed (often called “reference date”) reported (.e. administratively recorded via public health surveillance; often called “report date”). difference reference date report date reporting delay. quick start, use daily level data Robert Koch Institute via Germany Nowcasting hub. data represent hospitalisation counts date positive test date test report Germany October 1, 2021.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"filtering-and-plotting-the-data","dir":"Articles","previous_headings":"","what":"Filtering and plotting the data","title":"Getting Started with baselinenowcast","text":"filter data just look national-level data, age groups. pretend making nowcast July 1, 2021, therefore exclude reference dates report dates date. germany_covid19_hosp provided package data epinowcast Let’s start plotting sum reports reference date, compare eventually observe final date complete dataset. red line shows cumulative number confirmed admissions report date, across delays, using data available July 1, 2021. demonstrates characteristic behaviour right-truncation. yet observed data become available longer delays recent time points. task estimate “final” cumulative number cases reference date, observed “fully observed” data October 2021.  black line represents quantity evaluate nowcast , red line represents data available us July 1st, 2021.","code":"data_long <- germany_covid19_hosp # import data from epinowcast data_filtered <- data_long |>   enw_filter_report_dates(latest_date = \"2021-07-01\") |>   filter(     location == \"DE\", age_group == \"00+\",     report_date == \"2021-07-01\"   ) data_filtered_max <- data_long |>   filter(     location == \"DE\", age_group == \"00+\",     reference_date <= \"2021-07-01\"   ) |>   group_by(reference_date) |>   summarise(confirm = max(confirm)) ggplot() +   geom_line(     data = data_filtered,     aes(x = reference_date, y = confirm), color = \"darkred\"   ) +   geom_line(     data = data_filtered_max,     aes(x = reference_date, y = confirm), color = \"black\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time and later observed cases\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"pre-processing","dir":"Articles","previous_headings":"","what":"Pre-processing","title":"Getting Started with baselinenowcast","text":"order compute nowcast data, need start creating call reporting triangle. wide formatted dataframe row represents one time points reference column represents delay, starting 0 maximum delay. entries represent number new cases assigned reference time point particular delay. reporting triangle used estimate delay distribution, proportion final number cases reported particular delay. Since data reported referenced daily, use time scale days create reporting triangle, delay reference date can temporal granularity. example, fit delay distribution, apply generate nowcast using data, national level data Germany age groups. However, components can separated, example, use national level data age groups estimate delay distribution, apply elsewhere, example data stratified age group location. type “borrowing” another training dataset can really useful low counts relatively sparse data, likely case smaller populations. sections, specify nowcast date, maximum delay, number observations reference date want use estimate delay distribution. recommend choosing maximum delay number historical observations based exploratory data analysis, specifications change significantly depending dataset. Next use epinowcast function, enw_preprocess_data() data form long tidy dataframe indexed reference date report date filtered strata interested , generate reporting triangle. see looks like, can plot using ggplot().  ’s clear figure bottom left reporting triangle contains 0s result pre-processing done. case, want assume making nowcast last reference time, means bottom right portion reporting triangle contains NAs yet--observed values. make change, can use package function replace_lower_right_with_NA().  Now see bottom right triangle contains NAs observations missing.","code":"nowcast_date <- \"2021-07-01\" # Specify the maximum delay, which will determine the length of your delay # distribution. Empirical data outside this delay window will not be used for # training. max_delay <- 40 # Specify the number of reference dates to use to estimate the delay # distribution.Note this assumes you want the most recent observations # (though we can consider changing this) n_history_delay <- 60 # Noting that this is the only way epinowcast preprocessing would work -- # return to this later. IDate was throwing errors if we used the dplyr processed # observed long above. observed_long <- data_long[location == \"DE\"][age_group == \"00+\"] |> # nolint   enw_filter_report_dates(latest_date = nowcast_date) |>   enw_filter_reference_dates(include_days = n_history_delay - 1) head(observed_long) ##    reference_date location age_group confirm report_date ##            <IDat>   <fctr>    <fctr>   <int>      <IDat> ## 1:     2021-05-03       DE       00+     107  2021-05-03 ## 2:     2021-05-04       DE       00+     240  2021-05-04 ## 3:     2021-05-05       DE       00+     245  2021-05-05 ## 4:     2021-05-06       DE       00+     259  2021-05-06 ## 5:     2021-05-07       DE       00+     263  2021-05-07 ## 6:     2021-05-08       DE       00+     189  2021-05-08 # Get the reporting triangle, adding an additional day because epinowcast # we want the max_delay + 1 entries since 0 is a valid delay. pobs <- enw_preprocess_data(   obs = observed_long,   max_delay = max_delay + 1 )  triangle_full <- pobs$reporting_triangle[[1]] head(triangle_full) ## Key: <.group, reference_date> ##    .group reference_date     0     1     2     3     4     5     6     7     8 ##     <num>         <IDat> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:      1     2021-05-03   107    76    45    25    23    16     5     4     6 ## 2:      1     2021-05-04   240   178    60    36    33    11     5    21    19 ## 3:      1     2021-05-05   245   158    70    42    22    17    36    43    34 ## 4:      1     2021-05-06   259   163    69    22    16    42    57    36    10 ## 5:      1     2021-05-07   263   169    46    15    55    32    27    15    25 ## 6:      1     2021-05-08   189    97    34    78    42    30    23    27     9 ##        9    10    11    12    13    14    15    16    17    18    19    20 ##    <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:    25     1     3     7     3     5     0     6    10     5     3     1 ## 2:    15     4     7     8     5    17    11     7    10     5     5     6 ## 3:    17    21    10     4    24    23    35    27    12     2     1     2 ## 4:    21    11     4    24    30    26    22    16     7     3     2     9 ## 5:     8     8    23    26    27    11     9     0     0     6     4     0 ## 6:     7    18    31    18    28    13     5     1     8    13    12    11 ##       21    22    23    24    25    26    27    28    29    30    31    32 ##    <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> ## 1:     3     1     2     1     0     5     0     1     1     1     0     0 ## 2:     2     1     5     5     5     2     1     4     7     1     1     0 ## 3:    12    10    13     4     1     0     0     7     2     3     5     1 ## 4:     8     8     8     5     2     1     5     1     2     4     1     1 ## 5:     7     6     6     0     2     7     4     2     0     1     0     2 ## 6:     6     2     0     4     5     5     3     2     0     1     1     1 ##       33    34    35    36    37    38    39    40 ##    <int> <int> <int> <int> <int> <int> <int> <int> ## 1:     2     0     0     4     1     0     3     0 ## 2:     1     0     1     2     1     2     3     0 ## 3:     3     2     5     2     6     2     0     0 ## 4:     1     3     4     4     3     3     1    10 ## 5:     3     4     2     0     2     0     4     4 ## 6:     2     1     4     0     0     0     3     7 triangle_matrix <- triangle_full |>   select(-`.group`, -reference_date) |>   as.matrix() |>   unname() triangle_df <- as.data.frame(triangle_matrix) |>   mutate(time = row_number()) |>   pivot_longer(!time,     values_to = \"count\",     names_prefix = \"V\",     names_to = \"delay\"   ) |>   mutate(delay = as.numeric(delay))  ggplot(   triangle_df,   aes(x = delay, y = time, fill = count) ) +   geom_tile() +   scale_fill_gradient(low = \"white\", high = \"blue\") +   labs(title = \"Reporting triangle\", x = \"Delay\", y = \"Time\") +   theme_bw() +   scale_y_reverse() triangle <- replace_lower_right_with_NA(triangle_matrix)  triangle_df <- as.data.frame(triangle) |>   mutate(time = row_number()) |>   pivot_longer(!time,     values_to = \"count\",     names_prefix = \"V\",     names_to = \"delay\"   ) |>   mutate(delay = as.numeric(delay))  ggplot(   triangle_df,   aes(x = delay, y = time, fill = count) ) +   geom_tile() +   scale_fill_gradient(low = \"white\", high = \"blue\") +   labs(     title = \"Reporting triangle with NAs for missing values\",     x = \"Delay\",     y = \"Time\"   ) +   theme_bw() +   scale_y_reverse()"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-delay","dir":"Articles","previous_headings":"","what":"Estimate delay","title":"Getting Started with baselinenowcast","text":"Now reporting triangle, now ready pass baselinenowcast package estimate delay distribution. tell function maximum delay number observations want use, though default use whole reporting triangle. reporting triangle small user-specified delays number training observations, function throw error. want pass reporting triangle (single group!) function. reference date repeated reporting triangle contains multiple strata, function throw error. get_delay_estimate() function expects following inputs: - triangle: matrix reporting triangle single strata. rows represent time points columns represent observed delays, starting 0. - max_delay: integer indicating maximum delay estimate. must less equal number rows triangle minus 1, since assume triangle indexed 0. - n_history_delay: integer indicating number observations reference date use fit delay distribution. must less equal number rows triangle. enw_preprocess() returns triangle columns .group .reference_date delays indicated column names. eventually write methods map input formats , start demonstrating functionality matrix reporting triangle.","code":"delay_pmf <- get_delay_estimate(   triangle = triangle,   max_delay = max_delay,   n = n_history_delay )  delay_df <- data.frame(   delay = 0:(length(delay_pmf) - 1),   pmf = delay_pmf )  ggplot(delay_df) +   geom_line(aes(x = delay, y = cumsum(pmf))) +   xlab(\"Delay\") +   ylab(\"Cumulative proportion reported\") +   ggtitle(\"Empirical point estimate of cumulative proportion reported by delay\") + # nolint   theme_bw() ggplot(delay_df) +   geom_line(aes(x = delay, y = pmf)) +   xlab(\"Delay\") +   ylab(\"Proportion reported\") +   ggtitle(\"Empirical point estimate of proportion reported by delay\") +   theme_bw()"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"apply-delay-to-generate-point-nowcast","dir":"Articles","previous_headings":"","what":"Apply delay to generate point nowcast","title":"Getting Started with baselinenowcast","text":"next step workflow take estimated delay distribution apply partially observed reporting triangle, generating estimate number new cases confirmed reference date delay. generate point estimate can call reporting square, complete set reference dates delays. case, applying delay reporting triangle used generate estimate, doesn’t always case. reporting triangle applying must max_delay delay estimate. ’ll make quick plot compare nowcasted confirmed cases July 1, 2021, observations October 1, 2021. ’ll compare right-truncated data available July 1, 2021.  can see point nowcast slightly overestimates eventually reported (black line), decent overall job correcting right-truncation observed red line (data prior nowcast).","code":"point_reporting_square <- apply_delay(   triangle_to_nowcast = triangle,   delay_pmf = delay_pmf ) final_data <- data_long[location == \"DE\"][age_group == \"00+\"] |> # nolint   enw_filter_report_dates(latest_date = \"2021-10-01\") |>   enw_filter_reference_dates(     latest_date = \"2021-07-01\",     include_days = n_history_delay - 1   ) |>   group_by(reference_date) |>   summarise(     total_confirmed = max(confirm)   ) |>   mutate(nowcast = rowSums(point_reporting_square)) summary_data <- observed_long |>   group_by(reference_date) |>   summarise(total_confirmed = max(confirm)) ggplot() +   geom_line(     # Plot the data summed across reporting days as of July 1,2021     data = summary_data,     aes(x = reference_date, y = total_confirmed), color = \"darkred\"   ) +   geom_line(     data = final_data,     aes(x = reference_date, y = total_confirmed), color = \"black\"   ) +   geom_line(     data = final_data,     aes(x = reference_date, y = nowcast), color = \"darkblue\"   ) +   theme_bw() +   xlab(\"Reference date\") +   ylab(\"Confirmed admissions\") +   scale_y_continuous(trans = \"log10\") +   ggtitle(\"Comparing real-time, nowcasted, and later observed cases\")"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"estimate-uncertainty","dir":"Articles","previous_headings":"","what":"Estimate uncertainty","title":"Getting Started with baselinenowcast","text":"far, ’ve demonstrated generate point estimate nowcast. like generate probabilistic nowcasts. , use error observations nowcasted retrospectively. assume observations follow negative binomial observation model, independently estimate dispersion negative binomial delay \\(d\\). method used estimate uncertainty nowcast simulates exactly iterative process, generating retrospective reporting triangles using available time, reporting triangle, estimating delay distribution generating nowcast. , first generate truncated reporting triangles latest reporting triangle, generate retrospective reporting triangles removing observations wouldn’t observed latest time point, generate nowcasts list retrospective reporting triangles. function default assuming want generate many retrospective reporting triangles able generate nowcasts . case, function return 18 retrospective reporting triangles, smallest one containing 42 rows, needed generate nowcast reporting triangle 41 delay columns. generate_triangles() function returns list reporting triangles, order least recent, starting recent. filtered exclude rows may ultimately used generate nowcast, means triangle different number rows. Next pass list reporting triangles generate_nowcasts() alongside specification many observations use estimate delay Next, use list retrospective reporting triangles estimate uncertainty delay \\(d\\)","code":"truncated_rts <- truncate_triangles(   triangle = triangle ) retro_rts <- generate_triangles(   list_of_trunc_rts = truncated_rts ) retro_nowcasts <- generate_point_nowcasts(   list_of_rts = retro_rts ) disp_params <- estimate_dispersion(   list_of_nowcasts = retro_nowcasts,   list_of_trunc_rts = truncated_rts )"},{"path":"https://baselinenowcast.epinowcast.org/articles/baselinenowcast.html","id":"generate-probabilistic-nowcast","dir":"Articles","previous_headings":"","what":"Generate probabilistic nowcast","title":"Getting Started with baselinenowcast","text":"Now estimated dispersion, take point nowcast previously generated, point_reporting_square generate many draws expected observed values get probabilistic nowcast. ’ll start demonstrating generate single expected observation just point nowcast. generate n_draws expected observed nowcast draws, used generate probabilistic nowcast Next, take list expected observed reporting squares convert long tidy dataframe, indexed reference time t delay d, plot results  , might want make sure include necessary metadata user passes , write methods dispatch objects particular type spit back things dates inputted.","code":"nowcast_draw <- add_obs_error_to_nowcast(   comp_rep_square = point_reporting_square,   disp = disp_params ) exp_obs_nowcasts <- add_obs_errors_to_nowcast(   comp_rep_square = point_reporting_square,   disp = disp_params,   n_draws = 1000 ) nowcast_draws <- nowcast_list_to_df(   list_of_nowcasts = exp_obs_nowcasts )  summary_nowcast <- nowcast_draws |>   group_by(time, draw) |>   summarise(total_counts = sum(count)) ## `summarise()` has grouped output by 'time'. You can override using the ## `.groups` argument. ggplot(summary_nowcast) +   geom_line(aes(x = time, y = total_counts, group = draw),     alpha = 0.1, color = \"gray\", linewidth = 0.1   ) +   theme_bw()"},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Mathematical methods for `baselinenowcast`","text":"method generate nowcasts use multiplicative model. multiplicative model works iteratively “filling ” reporting triangle starting bottom left, moving column column left right bottom right triangle filled .  Figure 1. Schematic figure demonstrating iterative generation nowcasts reporting triangle. case, values estimated \\(x_{t=6, d = 2}\\) \\(x_{t=5, d= 2}\\) assuming already iteratively estimated \\(x_{t=6, d= 1}\\). dotted dashed lines around observations \\(x_{t,d}\\) indicated estimates imputed, dashed lines indicates observations \\(x_{t,d}\\) yet observed imputed, solid lines indicate observations observed. method requires least one observation, delay \\(d=0\\) recent reference date, located bottom reporting triangle Fig 1 . method assumes values delay \\(d\\) column proportion values previously reported. fill missing values column \\(d\\), sum rectangle completely observed reference dates \\(d-1\\) columns (block top left) sum column completely observed reference dates entries column \\(d\\) (block left). ratio two sums assumed missing entries column \\(d\\), use entries observed \\(d-1\\) incomplete reference date (block bottom left), scale ratio get missing entries column \\(d\\). process repeated delay \\(d\\) maximum delay \\(D\\). iteration additional reference date entry computed delay \\(d\\) increases.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"mathematical-model","dir":"Articles","previous_headings":"","what":"Mathematical model","title":"Mathematical methods for `baselinenowcast`","text":"following describes estimate delay distribution, generation point nowcast, estimate observation error, partially observed complete reporting triangle. method time-unit agnostic, means can used generate nowcasts temporal granularity reporting reference data. case temporal granularity reporting differs referencing, e.g. weekly releases daily data, pre-processing need done units delays \\(d\\) units reference time \\(t\\) (e.g. filling 0s days week data reported). method based method described Wolffram et al. 2023.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"notation","dir":"Articles","previous_headings":"2 Mathematical model","what":"Notation","title":"Mathematical methods for `baselinenowcast`","text":"denote \\(X_{t,d}, d = 0, .., D\\) number cases occurring time \\(t\\) appear dataset delay \\(d\\). example, delay \\(d = 0\\) means case occurring day \\(t\\) arrived dataset day \\(t\\), considered first possible report date practice. consider cases reporting within maximum delay \\(D\\). number cases reporting time \\(t\\) delay \\(d\\) can written : \\[X_{t, \\le d} = \\sum_{=0}^d X_{t,} \\] \\(X_t = X_{t, \\le D}\\) “final” number reported cases time \\(t\\). Conversely, \\(d < D\\) \\[X_{t,>d} = \\sum_{= d+1} ^{D} X_{t,}\\] number cases still missing \\(d\\) delay. refer \\(X_t\\) describe random variable, \\(x_t\\) corresponding observation, \\(\\hat{x}_t\\) estimated/imputed value. refer matrix \\(x\\) available given data release time \\(t^*\\) , reporting triangle. , \\(t+d>t^*\\) yet observed.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"point-estimate-of-the-delay-distribution","dir":"Articles","previous_headings":"2 Mathematical model","what":"Point estimate of the delay distribution","title":"Mathematical methods for `baselinenowcast`","text":"use entire reporting triangle compute empirical estimate delay distribution, \\(\\pi(d)\\). Another way think probability distribution describing probability case incident reference time \\(t\\) appears dataset delay \\(d\\) (time \\(t + d\\)). refer realized empirical estimate delay distribution reporting triangle \\(\\pi(d)\\). delay distribution, \\(\\pi(d)\\) can estimated directly completed reporting matrix \\(X\\) \\[ \\pi(d)= \\frac{\\sum_{t=1}^{t=t^*} X_{t,d}}{\\sum_{d=0}^{D} \\sum_{t=1}^{t=t^*} X_{t,d}} \\] numerator sum observations across reference times \\(t\\) particular delay \\(d\\), denominator sum across reference times \\(t\\) delays \\(d\\). special case reporting triangle fully observed, .e. time estimate made, \\(t'\\), greater data release time plus maximum delay (\\(t' \\ge t^* + D\\)), \\(\\hat{\\pi}_d\\) can computed directly.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"point-nowcast-from-incomplete-reporting-matrix","dir":"Articles","previous_headings":"2 Mathematical model","what":"Point nowcast from incomplete reporting matrix","title":"Mathematical methods for `baselinenowcast`","text":"case partial observations, order properly weight denominator missing delays, first impute cases \\(\\hat{x}_{t,d}\\) instances \\(t+d > t^*\\). amounts computing point nowcast partial reporting triangle. , start defining \\(\\theta_d\\), factor cases delay \\(d\\) compare total cases delay \\(d-1\\), obtained \\(N\\) preceding rows triangle. practice, \\(N \\ge D\\), \\(N > D\\) representing number completed observations used inform estimate \\[ \\hat{\\theta}_d(t^*) = \\frac{\\sum_{=1}^{N} x_{t^*-+d, d}}{\\sum_{d=1}^{d-1} \\sum_{=1}^{N} x_{t^*-+d,d}} \\] amounts taking sum elements column \\(d\\) time \\(t*-d\\) dividing sum elements left column \\(d\\) time \\(t*-d\\), referred “block top” “block top left”, respectively, Figure 1. factor used compute expected values missing rows delay \\(d\\) : \\[ \\hat{x}_{t,d} = \\hat{\\theta_d}(t^*) \\times \\sum_{t=t^*-d}^{t^*} x_{t,d-1} \\] amounts effectively taking sum across columns bottom left (“block bottom left” Figure 1) matrix column \\(d\\) multiplying factor estimate value \\(x_{t,d}\\) row. process repeated iteratively, bottom left top right, impute bottom right triangle reporting matrix time \\(t\\) delay \\(d\\) \\(t+d>t^*\\). combination imputed observed reporting matrix used compute delay distribution \\(\\hat{\\pi}(d)\\) described . factor, \\(\\theta_d\\) can computed delays greater 0, effectively means row reporting triangle without observations, can imputed process works iteratively. Therefore, reporting matrix must least entry (though can 0) \\(x_{t*,d=0}\\) compute nowcast \\(t^*\\). describe method estimating nowcasts zero-valued counts . method described uses incomplete reporting triangle iteratively compute point nowcast. can also use delay distribution \\(\\hat{\\pi(d)}\\) directly compute point nowcast, can useful , example, delay distribution estimated different strata part separate estimate.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"point-nowcast-from-delay-distribution-pid","dir":"Articles","previous_headings":"2 Mathematical model","what":"Point nowcast from delay distribution \\(\\pi(d)\\)","title":"Mathematical methods for `baselinenowcast`","text":"propagate point nowcast delay distribution, need estimate expected total number eventual observed cases \\(\\hat{x}_t\\), reference time \\(t\\). Let \\(z\\) sum delays \\(d\\) already observed (\\(t^*-t\\)), \\(z =\\sum_{d=1}^{d=t^*-t} x_{t,d}\\) \\(\\delta\\) cumulative sum delay distribution, \\(\\pi(d)\\) \\(d = t^*-t\\) \\(\\delta = \\sum_{d=1}^{d=t^*-t} \\pi(d)\\). assuming \\(z \\sim Bin(x_t, \\delta)\\) \\(x_t \\sim Unif(0, \\inf)\\), can shown expected value \\(x_t\\), total number reported cases reference time \\(t\\), can written : \\[ E(x_t | z, \\delta) = \\hat{x}_t = \\frac{z + 1 - \\delta}{\\delta} \\] can compute \\(\\hat{x}_{t,d}\\) directly using \\(d\\)th element \\(\\pi(d)\\) \\[ \\hat{x}_{t,d} = \\pi(d) \\times \\hat{x}_t \\] number reports timepoint \\(t\\) delay \\(d\\) product expected total reports, \\(x_t\\) proportion expected particular delay \\(d\\), \\(\\pi(d)\\).","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"estimate-of-uncertainty-in-the-nowcast","dir":"Articles","previous_headings":"2 Mathematical model","what":"Estimate of uncertainty in the nowcast","title":"Mathematical methods for `baselinenowcast`","text":"extend point nowcasts probabilistic nowcasts, use past nowcast errors. describe method generates retrospective reporting triangles replicate available time \\(t^*=s^*\\). method uses retrospective incomplete reporting triangle re-estimate delay distribution using \\(N\\) preceding rows reporting triangle \\(s^*\\), recomputes retrospective nowcast, \\(M\\) realizations retrospective reporting triangle (\\(M\\) different \\(s^*\\) values). horizon \\(d = 1, ..., D\\) assume observed values, \\(X_{s^*-d, >d}\\) follow negative binomial observation model mean \\(\\hat{x}_{s^*-d}\\): \\[ X_{s^*-d,>d} | \\hat{x}_{s^*-d, >d}(s*) \\sim NegBin(\\mu = \\hat{x}_{s^*-d} + 0.1, \\phi = \\phi_d) \\] add small number (0.1) mean avoid ill-defined negative binomial. note perform computations, data snapshots least \\(N + M\\) past observations, rows reporting triangle, needed. estimate uncertainty accounts empirical uncertainty point estimate delay distribution time.","code":""},{"path":"https://baselinenowcast.epinowcast.org/articles/model_definition.html","id":"generating-probabilistic-nowcasts","dir":"Articles","previous_headings":"2 Mathematical model > 2.5 Estimate of uncertainty in the nowcast","what":"Generating probabilistic nowcasts","title":"Mathematical methods for `baselinenowcast`","text":"Using dispersion parameters delay, \\(\\phi(d)\\) \\(d = 1,...D\\), can generate probabilistic nowcasts drawing samples negative binomial: \\[ X_{t,d} \\sim NegBin(\\mu = \\hat{x}_{t,d}, \\phi = \\phi(d)) \\] can sample number draws, use draws compute desired quantiles summarize outputs.","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kaitlyn Johnson. Author, maintainer, copyright holder. Sam Abbott. Author. Johannes Bracher. Author. Sebastian Funk. Author.","code":""},{"path":"https://baselinenowcast.epinowcast.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson K, Abbott S, Bracher J, Funk S (2025). baselinenowcast: Baseline nowcast. R package version 0.0.0.1000, https://github.com/epinowcast/baselinenowcast/, https://baselinenowcast.epinowcast.org.","code":"@Manual{,   title = {baselinenowcast: Baseline nowcast},   author = {Kaitlyn Johnson and Sam Abbott and Johannes Bracher and Sebastian Funk},   year = {2025},   note = {R package version 0.0.0.1000, https://github.com/epinowcast/baselinenowcast/},   url = {https://baselinenowcast.epinowcast.org}, }"},{"path":[]},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Baseline nowcast for right-truncated epidemiological data","text":"Provides functions nowcasting right-truncated epidemiological data, based heavily method implemented https://github.com/KITmetricslab/RESPINOW-Hub/tree/main/code/baseline","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Baseline nowcast for right-truncated epidemiological data","text":"install development version GitHub (warning! version may contain breaking changes /bugs), use pak package:","code":"pak::pak(file.path(\"epinowcast\", \"baselinenowcast\"))"},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Baseline nowcast for right-truncated epidemiological data","text":"provide range documentation, case studies, community spaces ask (answer!) questions: organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use baselinenowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Baseline nowcast for right-truncated epidemiological data","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request see contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"Contributing","what":"How to make a bug report or feature request","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please briefly describe problem output expect issue. See contributing guide information.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"Contributing","what":"Code of Conduct","title":"Baseline nowcast for right-truncated epidemiological data","text":"Please note baselinenowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Baseline nowcast for right-truncated epidemiological data","text":"use baselinenowcast work, please consider citing citation(\"baselinenowcast\").","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Baseline nowcast for right-truncated epidemiological data","text":"contributions project gratefully acknowledged using allcontributors package following allcontributors specification. Contributions kind welcome!","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Baseline nowcast for right-truncated epidemiological data","text":"kaitejohnson, seabbs, sbfnk","code":""},{"path":"https://baselinenowcast.epinowcast.org/index.html","id":"issues","dir":"","previous_headings":"Contributors","what":"Issues","title":"Baseline nowcast for right-truncated epidemiological data","text":"jbracher","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_error_to_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Add observation error to a point nowcast — add_obs_error_to_nowcast","title":"Add observation error to a point nowcast — add_obs_error_to_nowcast","text":"function ingests estimate point nowcast, form reporting rectangle vector dispersion parameters, adds observation error generate expected observed nowcast","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_error_to_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add observation error to a point nowcast — add_obs_error_to_nowcast","text":"","code":"add_obs_error_to_nowcast(comp_rep_square, disp)"},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_error_to_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add observation error to a point nowcast — add_obs_error_to_nowcast","text":"comp_rep_square Matrix containing observed point estimated values reporting triangle, .e. complete reporting square disp Vector dispersion parameters negative binomial, delays 1 maximum delay","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_error_to_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add observation error to a point nowcast — add_obs_error_to_nowcast","text":"nowcast_w_obs_error Matrix containing upper left values comp_rep_square input matrix, bottom right containing expected observed counts values assuming negative binomial observation model mean given lower right entries comp_rep_square dispersion parameters disp","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_error_to_nowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add observation error to a point nowcast — add_obs_error_to_nowcast","text":"","code":"point_nowcast <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 17.8,     80, 40, 23.2, 15.9,     70, 35, 20.3, 19.9   ),   nrow = 5,   byrow = TRUE )  exp_obs_nowcast <- add_obs_error_to_nowcast(   comp_rep_square = point_nowcast,   disp = c(8, 1.4, 4) ) print(exp_obs_nowcast) #>      [,1] [,2] [,3] [,4] #> [1,]   80   50   25   10 #> [2,]  100   50   30   20 #> [3,]   90   45   25    8 #> [4,]   80   40   17   35 #> [5,]   70   13    3    5"},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_errors_to_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Add observation errors to nowcasts — add_obs_errors_to_nowcast","title":"Add observation errors to nowcasts — add_obs_errors_to_nowcast","text":"function ingests point nowcast form completed reporting square vector dispersion parameters. generates list n_draws expected observed completed reporting squares.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_errors_to_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add observation errors to nowcasts — add_obs_errors_to_nowcast","text":"","code":"add_obs_errors_to_nowcast(comp_rep_square, disp, n_draws = 1000)"},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_errors_to_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add observation errors to nowcasts — add_obs_errors_to_nowcast","text":"comp_rep_square Matrix containing observed point estimated values reporting triangle, .e. complete reporting square disp Vector dispersion parameters negative binomial, delays 1 maximum delay n_draws Integer indicating number expected observed reporting squares generate.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_errors_to_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add observation errors to nowcasts — add_obs_errors_to_nowcast","text":"list_of_exp_obs_nowcasts List n_draws matrices expected observed reporting squares.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/add_obs_errors_to_nowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add observation errors to nowcasts — add_obs_errors_to_nowcast","text":"","code":"point_nowcast <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 17.8,     80, 40, 23.2, 15.9,     70, 35, 20.3, 19.9   ),   nrow = 5,   byrow = TRUE )  list_of_exp_obs_nowcast <- add_obs_errors_to_nowcast(   comp_rep_square = point_nowcast,   disp = c(8, 1.4, 4),   n_draws = 10 ) print(list_of_exp_obs_nowcast[[1]]) #>      [,1] [,2] [,3] [,4] #> [1,]   80   50   25   10 #> [2,]  100   50   30   20 #> [3,]   90   45   25   22 #> [4,]   80   40   20   35 #> [5,]   70   34    5   13"},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay PMF. Each element is computed by taking the product of the expected number of total cases assigned to a reference time $t$ and the proportion of those cases reported on delay $d$. The formula to obtain the expected number of total cases as a function of the reporting delay and previous observations was derived elsewhere. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay PMF. Each element is computed by taking the product of the expected number of total cases assigned to a reference time $t$ and the proportion of those cases reported on delay $d$. The formula to obtain the expected number of total cases as a function of the reporting delay and previous observations was derived elsewhere. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"Apply delay generate point nowcast Generate point estimate completed reporting square (rectangle) reporting triangle want complete nowcast delay PMF. element computed taking product expected number total cases assigned reference time $t$ proportion cases reported delay $d$. formula obtain expected number total cases function reporting delay previous observations derived elsewhere. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay PMF. Each element is computed by taking the product of the expected number of total cases assigned to a reference time $t$ and the proportion of those cases reported on delay $d$. The formula to obtain the expected number of total cases as a function of the reporting delay and previous observations was derived elsewhere. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"","code":"apply_delay(triangle_to_nowcast, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay PMF. Each element is computed by taking the product of the expected number of total cases assigned to a reference time $t$ and the proportion of those cases reported on delay $d$. The formula to obtain the expected number of total cases as a function of the reporting delay and previous observations was derived elsewhere. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"triangle_to_nowcast Matrix incomplete reporting triangle nowcasted, rows representing time points reference columns representing delays delay_pmf Vector delays assumed indexed starting first delay column triangle_to_nowcast","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay PMF. Each element is computed by taking the product of the expected number of total cases assigned to a reference time $t$ and the proportion of those cases reported on delay $d$. The formula to obtain the expected number of total cases as a function of the reporting delay and previous observations was derived elsewhere. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"comp_rep_square Matrix number rows columns triangle_to_nowcast missing values filled point estimates","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/apply_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the delay to generate a point nowcast Generate a point estimate of a completed reporting square (or rectangle) from a reporting triangle that we want to complete with a nowcast and a delay PMF. Each element is computed by taking the product of the expected number of total cases assigned to a reference time $t$ and the proportion of those cases reported on delay $d$. The formula to obtain the expected number of total cases as a function of the reporting delay and previous observations was derived elsewhere. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — apply_delay","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   triangle = triangle,   max_delay = 3,   n = 4 ) reporting_square <- apply_delay(   triangle_to_nowcast = triangle,   delay_pmf = delay_pmf ) print(reporting_square) #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 17.78889 #> [4,]   80 40.00000 23.20529 15.92281 #> [5,]   70 35.24853 20.35851 13.96745"},{"path":"https://baselinenowcast.epinowcast.org/reference/convert_reporting_square_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a reporting square matrix to a long data frame — convert_reporting_square_to_df","title":"Convert a reporting square matrix to a long data frame — convert_reporting_square_to_df","text":"Convert reporting square matrix long data frame","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/convert_reporting_square_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a reporting square matrix to a long data frame — convert_reporting_square_to_df","text":"","code":"convert_reporting_square_to_df(matrix, draw = NULL)"},{"path":"https://baselinenowcast.epinowcast.org/reference/convert_reporting_square_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a reporting square matrix to a long data frame — convert_reporting_square_to_df","text":"matrix Matrix form reporting triangle/square, rows indicate reference time columns indicate delay. draw integer tracking draw reporting matrix corresponds . Default NULL return draw column.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/convert_reporting_square_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a reporting square matrix to a long data frame — convert_reporting_square_to_df","text":"long dataframe length product number columns number rows, information time delay observation corresponds .","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/convert_reporting_square_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a reporting square matrix to a long data frame — convert_reporting_square_to_df","text":"","code":"rep_square <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 18,     80, 40, 24, 16,     70, 35, 21, 19,     67, 34, 15, 9   ),   nrow = 6,   byrow = TRUE )  long_df <- convert_reporting_square_to_df(rep_square) print(long_df) #>    time delay count #> 1     1     1    80 #> 2     1     2    50 #> 3     1     3    25 #> 4     1     4    10 #> 5     2     1   100 #> 6     2     2    50 #> 7     2     3    30 #> 8     2     4    20 #> 9     3     1    90 #> 10    3     2    45 #> 11    3     3    25 #> 12    3     4    18 #> 13    4     1    80 #> 14    4     2    40 #> 15    4     3    24 #> 16    4     4    16 #> 17    5     1    70 #> 18    5     2    35 #> 19    5     3    21 #> 20    5     4    19 #> 21    6     1    67 #> 22    6     2    34 #> 23    6     3    15 #> 24    6     4     9"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","title":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","text":"Calculate updates rows expected nowcasted triangle","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","text":"","code":".calc_expectation(co, expectation, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","text":"co Integer indicating column index expectation Matrix partially complete reporting triangle delay_pmf Vector specifying probability case reported delay d","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-calc_expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the updates rows of the expected nowcasted triangle — .calc_expectation","text":"Matrix another set entries corresponding updated values specified rows column","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if matrix only contains NAs in the bottom right — .check_na_bottom_right","title":"Check if matrix only contains NAs in the bottom right — .check_na_bottom_right","text":"Check matrix contains NAs bottom right","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if matrix only contains NAs in the bottom right — .check_na_bottom_right","text":"","code":".check_na_bottom_right(mat)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if matrix only contains NAs in the bottom right — .check_na_bottom_right","text":"mat Matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_na_bottom_right.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if matrix only contains NAs in the bottom right — .check_na_bottom_right","text":"Boolean indicating whether matrix contains NAs bottom right (TRUE bottom right, FALSE elsewhere).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_zeros_bottom_right.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if matrix only contains zeros in the bottom right — .check_zeros_bottom_right","title":"Check if matrix only contains zeros in the bottom right — .check_zeros_bottom_right","text":"Check matrix contains zeros bottom right","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_zeros_bottom_right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if matrix only contains zeros in the bottom right — .check_zeros_bottom_right","text":"","code":".check_zeros_bottom_right(mat)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_zeros_bottom_right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if matrix only contains zeros in the bottom right — .check_zeros_bottom_right","text":"mat Matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-check_zeros_bottom_right.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if matrix only contains zeros in the bottom right — .check_zeros_bottom_right","text":"Boolean indicating whether matrix contains zeros bottom right (TRUE, entire bottom right 0s)","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"Compute sum entries column matrix sets matrices booleans TRUE","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"","code":".conditional_sum_cols(col, matrix_bool1, matrix_bool2, matrix_to_sum)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"col Integer indicating column sum matrix_bool1 Matrix booleans first set indices matrix_bool2 Matrix booleans second set indices matrix_to_sum Matrix summed specific column","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-conditional_sum_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the sum of entries of a column in a matrix where both sets of matrices of booleans are TRUE — .conditional_sum_cols","text":"Numeric summing values matrix_to_sum specified column entries true","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"Takes vector observations vector expectations performs MLE estimator estimate dispersion parameter negative binomial. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7fab4dce7b559c3076ab643cf22048cb5fb84cc2/code/baseline/functions.R#L404 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"","code":".fit_nb(x, mu)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"x observed values mu expected values","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-fit_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a negative binomial to a vector of observations and expectations — .fit_nb","text":"maximum likelihood estimate dispersion","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Handle negative values reporting triangle Takes reporting triangle returns matrix format input triangle, negative values reporting handled via passing subsequent days (longer delay shorter). code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"","code":".handle_neg_vals(triangle)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-handle_neg_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle negative values in the reporting triangle Takes in a reporting triangle and returns a matrix in the same format as the input triangle, but with negative values of reporting handled via passing them to the subsequent days (from longer delay to shorter). This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from https://github.com/KITmetricslab/RESPINOW-Hub/blob/main/code/baseline/functions.R #nolint — .handle_neg_vals","text":"Matrix positive integers negative values reporting handled via passing subsequent days delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"Validate triangle nowcast delay PMF together Various checks make sure reporting triangle  delay PMF passed apply_delay() formatted properly compatible.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"","code":".validate_delay_and_triangle(triangle, delay_pmf)"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"triangle Matrix values rows indicating time points columns indicating delays. delay_pmf Vector length number delays indicating probability case reported given delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_delay_and_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle to nowcast and delay PMF together Various checks to make sure that the reporting triangle and the delay PMF passed in to apply_delay() are formatted properly and compatible. — .validate_delay_and_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"Validate triangle Various checks make sure reporting triangle passed get_delay_estimate() formatted properly.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"","code":".validate_triangle(   triangle,   max_delay = ncol(triangle) - 1,   n = nrow(triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/dot-validate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate triangle Various checks to make sure that the reporting triangle passed in to get_delay_estimate() is formatted properly. — .validate_triangle","text":"NULL, invisibly","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate dispersion parameters — estimate_dispersion","title":"Estimate dispersion parameters — estimate_dispersion","text":"function ingests list point nowcasts (completed reporting rectangles) corresponding list truncated reporting triangles estimates uses estimate vector negative binomial dispersion parameters observations estimates delay, starting delay = 1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate dispersion parameters — estimate_dispersion","text":"","code":"estimate_dispersion(   list_of_nowcasts,   list_of_trunc_rts,   n = length(list_of_nowcasts) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate dispersion parameters — estimate_dispersion","text":"list_of_nowcasts List complete reporting rectangles rows represent reference time points columns represent delays. list_of_trunc_rts List truncated reporting triangle matrices, containing observations latest reference time. Elements list paired elements list_of_nowcasts. n Integer indicating number reporting rectangles use estimate dispersion parameters.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate dispersion parameters — estimate_dispersion","text":"Vector length one less number columns latest reporting triangle, element representing estimate dispersion parameter delay d, starting delay d=1.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/estimate_dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate dispersion parameters — estimate_dispersion","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(   triangle = triangle,   n = 2 ) retro_rts <- generate_triangles(   list_of_trunc_rts = trunc_rts ) retro_nowcasts <- generate_point_nowcasts(   list_of_rts = retro_rts,   n = 5 ) disp_params <- estimate_dispersion(   list_of_nowcasts = retro_nowcasts,   list_of_trunc_rts = trunc_rts,   n = 2 )"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate point nowcast — generate_point_nowcast","title":"Generate point nowcast — generate_point_nowcast","text":"function ingests reporting triangle matrix optionally, delay distribution, returns completed reporting square represents point nowcast. delay distribution specified, used generate nowcast, otherwise, delay distribution estimated triangle_to_nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate point nowcast — generate_point_nowcast","text":"","code":"generate_point_nowcast(   triangle,   max_delay = ncol(triangle) - 1,   n = nrow(triangle),   delay_pmf = NULL )"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate point nowcast — generate_point_nowcast","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle). delay_pmf Vector delays assumed indexed starting first delay column triangle_to_nowcast.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate point nowcast — generate_point_nowcast","text":"comp_rep_square Matrix number rows columns triangle_to_nowcast missing values filled point estimates.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate point nowcast — generate_point_nowcast","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) reporting_square <- generate_point_nowcast(   triangle = triangle ) print(reporting_square) #>      [,1]     [,2]     [,3]     [,4] #> [1,]   80 50.00000 25.00000 10.00000 #> [2,]  100 50.00000 30.00000 20.00000 #> [3,]   90 45.00000 25.00000 14.33572 #> [4,]   80 40.00000 23.17697 12.82918 #> [5,]   70 37.26249 20.72155 11.46862"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate retrospective nowcasts — generate_point_nowcasts","title":"Generate retrospective nowcasts — generate_point_nowcasts","text":"function ingests list incomplete reporting triangles generates list reporting squares, \"complete\" point estimates reporting triangles based delay estimated triangle. uses specified n number observations estimate empirical delay retrospective reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate retrospective nowcasts — generate_point_nowcasts","text":"","code":"generate_point_nowcasts(   list_of_rts,   max_delay = min(sapply(list_of_rts, ncol)) - 1,   n = min(sapply(list_of_rts, nrow)) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate retrospective nowcasts — generate_point_nowcasts","text":"list_of_rts List reporting triangle matrices, order recent (complete) least recent. Bottom right matrices contain NAs. max_delay Integer indicating maximum delay estimate, units delay. default use one less minimum number rows matrices list_of_rts. n Integer indicating number observations (number rows) use estimate delay distribution reporting triangle. Default minimum number rows matrices list_of_rts.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate retrospective nowcasts — generate_point_nowcasts","text":"list_of_nowcasts List number elements input list_of_rtsbut reporting triangle filled based delay estimated reporting triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_point_nowcasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate retrospective nowcasts — generate_point_nowcasts","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(   triangle = triangle ) retro_rts <- generate_triangles(   list_of_trunc_rts = trunc_rts ) retro_nowcasts <- generate_point_nowcasts(   list_of_rts = retro_rts ) print(retro_nowcasts[[1]]) #>      [,1]     [,2]     [,3]      [,4] #> [1,]   65 46.00000 21.00000  7.000000 #> [2,]   70 40.00000 20.00000  5.000000 #> [3,]   80 50.00000 10.00000 10.000000 #> [4,]  100 40.00000 31.00000  9.502924 #> [5,]   95 45.00000 22.50317  9.030878 #> [6,]   82 41.82672 19.90693  7.988127"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate retrospective reporting triangles — generate_triangles","title":"Generate retrospective reporting triangles — generate_triangles","text":"function ingests reporting triangle/matrix number retrospective reporting triangles want create, n, iteratively generates reporting triangle available maximum reference time, working bottom top n snapshots.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate retrospective reporting triangles — generate_triangles","text":"","code":"generate_triangles(list_of_trunc_rts)"},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate retrospective reporting triangles — generate_triangles","text":"list_of_trunc_rts List truncated reporting triangle matrices.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate retrospective reporting triangles — generate_triangles","text":"list_of_rts List retrospective reporting triangle matrices, generated removing bottom right observations truncated reporting triangle matrices.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/generate_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate retrospective reporting triangles — generate_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rts <- truncate_triangles(   triangle = triangle,   n = 2 ) retro_rts <- generate_triangles(   list_of_trunc_rts = trunc_rts ) print(retro_rts[[1]]) #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   NA #> [5,]   95   45   NA   NA #> [6,]   82   NA   NA   NA print(retro_rts[[2]]) #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   NA #> [4,]  100   40   NA   NA #> [5,]   95   NA   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"Estimate delay distribution reporting triangle Provides estimate reporting delay function delay, based reporting triangle specified maximum delay number reference date observations used estimation. point estimate delay computed empirically, using iterative algorithm starting recent observations. code adapted code written (MIT license) Karlsruhe Institute Technology RESPINOW German Hospitalization Nowcasting Hub. Modified : https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"","code":"get_delay_estimate(   triangle,   max_delay = ncol(triangle) - 1,   n = nrow(triangle) )"},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"triangle Matrix reporting triangle, rows representing time points reference columns representing delays. max_delay Integer indicating maximum delay estimate, units delay. default use whole reporting triangle, ncol(triangle) -1. n Integer indicating number reference times (observations) used estimate reporting delay, always starting recent reporting delay. default use whole reporting triangle, nrow(triangle).","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"Vector indexed 0 length max_delay + 1 columns indicating point estimate empirical probability mass delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/get_delay_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a delay distribution from a reporting triangle Provides an estimate of the reporting delay as a function of the delay, based on the reporting triangle and the specified maximum delay and number of reference date observations to be used in the estimation. This point estimate of the delay is computed empirically, using an iterative algorithm starting from the most recent observations. This code was adapted from code written (under an MIT license) by the Karlsruhe Institute of Technology RESPINOW German Hospitalization Nowcasting Hub. Modified from: https://github.com/KITmetricslab/RESPINOW-Hub/blob/7cce3ae2728116e8c8cc0e4ab29074462c24650e/code/baseline/functions.R#L55 #nolint — get_delay_estimate","text":"","code":"triangle <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, NA,     80, 40, NA, NA,     70, NA, NA, NA   ),   nrow = 5,   byrow = TRUE ) delay_pmf <- get_delay_estimate(   triangle = triangle,   max_delay = 3,   n = 4 ) print(delay_pmf) #> [1] 0.5029412 0.2514706 0.1455882 0.1000000"},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_list_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate probabilistic nowcast dataframe — nowcast_list_to_df","title":"Generate probabilistic nowcast dataframe — nowcast_list_to_df","text":"function ingests list matrices represent expected observed nowcasts, generates long tidy dataframe indexed time delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_list_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate probabilistic nowcast dataframe — nowcast_list_to_df","text":"","code":"nowcast_list_to_df(list_of_nowcasts)"},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_list_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate probabilistic nowcast dataframe — nowcast_list_to_df","text":"list_of_nowcasts List  matrices expected observed reporting squares.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_list_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate probabilistic nowcast dataframe — nowcast_list_to_df","text":"nowcast_df Dataframe containing observations expected observed nowcasts indexed reference time delay.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/nowcast_list_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate probabilistic nowcast dataframe — nowcast_list_to_df","text":"","code":"point_nowcast <- matrix(   c(     80, 50, 25, 10,     100, 50, 30, 20,     90, 45, 25, 17.8,     80, 40, 23.2, 15.9,     70, 35, 20.3, 19.9   ),   nrow = 5,   byrow = TRUE )  list_of_exp_obs_nowcast <- add_obs_errors_to_nowcast(   comp_rep_square = point_nowcast,   disp = c(8, 1.4, 4),   n_draws = 10 )  nowcast_df <- nowcast_list_to_df(   list_of_nowcasts = list_of_exp_obs_nowcast )"},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"Replace lower right triangle matrix NAs","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"","code":"replace_lower_right_with_NA(matrix)"},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"matrix Matrix","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"matrix dimensions, NAs lower right entries.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/replace_lower_right_with_NA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace the lower right triangle of the matrix with NAs — replace_lower_right_with_NA","text":"","code":"triangle_w_zeros <- matrix(   c(     1, 3, 5, 7,     4, 7, 8, 0,     9, 10, 0, 0,     3, 0, 0, 0   ),   nrow = 4,   byrow = TRUE )  rep_tri <- replace_lower_right_with_NA(triangle_w_zeros) print(rep_tri) #>      [,1] [,2] [,3] [,4] #> [1,]    1    3    5    7 #> [2,]    4    7    8   NA #> [3,]    9   10   NA   NA #> [4,]    3   NA   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single truncated triangle — truncate_triangle","title":"Get a single truncated triangle — truncate_triangle","text":"function takes integer t reporting triangle generates truncated reporting triangle, remove last t observations.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single truncated triangle — truncate_triangle","text":"","code":"truncate_triangle(t, matr_observed)"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single truncated triangle — truncate_triangle","text":"t Integer indicating number timepoints truncate bottom original reporting triangle. matr_observed Matrix reporting triangle/rectangle used generate retrospective nowcasts, rows representing time points reference columns representing delays.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single truncated triangle — truncate_triangle","text":"Matrix t fewer rows matr_observed.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single truncated triangle — truncate_triangle","text":"","code":"# example code triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  trunc_rep_tri <- truncate_triangle(   t = 1,   matr_observed = triangle ) print(trunc_rep_tri) #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate truncated reporting triangles — truncate_triangles","title":"Generate truncated reporting triangles — truncate_triangles","text":"function ingests reporting triangle/matrix number truncated reporting triangles want create, n, iteratively truncated reporting triangle, working bottom top n snapshots.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate truncated reporting triangles — truncate_triangles","text":"","code":"truncate_triangles(triangle, n = nrow(triangle) - ncol(triangle) - 1)"},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate truncated reporting triangles — truncate_triangles","text":"triangle Matrix reporting triangle/rectangle used generate retrospective triangles, rows representing time points reference columns representing delays. n Integer indicating number retrospective truncated triangles generated, always starting recent reference time. Default generate truncated matrices sufficient number rows generate nowcast , though number can specified.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate truncated reporting triangles — truncate_triangles","text":"list_of_trunc_rts List n truncated reporting triangle matrices many rows available given truncation, number columns triangle.","code":""},{"path":"https://baselinenowcast.epinowcast.org/reference/truncate_triangles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate truncated reporting triangles — truncate_triangles","text":"","code":"triangle <- matrix(   c(     65, 46, 21, 7,     70, 40, 20, 5,     80, 50, 10, 10,     100, 40, 31, 20,     95, 45, 21, NA,     82, 42, NA, NA,     70, NA, NA, NA   ),   nrow = 7,   byrow = TRUE )  truncated_rts <- truncate_triangles(   triangle = triangle,   n = 2 ) print(truncated_rts[[1]]) #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA #> [6,]   82   42   NA   NA print(truncated_rts[[2]]) #>      [,1] [,2] [,3] [,4] #> [1,]   65   46   21    7 #> [2,]   70   40   20    5 #> [3,]   80   50   10   10 #> [4,]  100   40   31   20 #> [5,]   95   45   21   NA"},{"path":"https://baselinenowcast.epinowcast.org/news/index.html","id":"baselinenowcast-0001000","dir":"Changelog","previous_headings":"","what":"baselinenowcast 0.0.0.1000","title":"baselinenowcast 0.0.0.1000","text":"Adjusts function estimate delay distribution able handle complete partially complete reporting triangles. Add function convert list expected observed reporting squares long tidy dataframe indexed reference time, delay, sample index. Implement zero-handling bottom left reporting triangle applying delay generate point nowcast. Add function generate list expected observed reporting squares. Add function generate expected observed reporting square point nowcast vector dispersion parameters. Add function estimate dispersion parameters match list nowcasts observed reporting triangles. Add functions generate retrospective nowcasts single reporting triangle. Refactor uncertainty estimation use user-facing function generate retrospective reporting triangles. Methods write-separate vignette. Introduced function estimate uncertainty triangle nowcasted delay distribution. Introduced functions get delay estimate apply delay, used Getting Started vignette. Added package skeleton.","code":""}]
